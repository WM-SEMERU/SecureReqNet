validate dependencies for security issues on npm publish


Currently there are tools like nsp that validate a package.json or npm-shrinkwrap.json files against known vulnerable modules via the https://nodesecurity.io/advisories database.
It'd be super awesome if npm did this when people try publishing a module to npm. If a user attempts to push a new module (or update an existing module) but they're using an old version of a compromised package, then I think npm should probably:
a) notify the user that they're using a "known bad" module
b) reject the npm publish
Users could probably use some --force style flag to explicitly post a newer version of the module if for some weird sick reason they don't want to update to a non-compromised version of said module. You could probably limit the audit to top-level packages, although that wouldn't really solve for cases like people using something like the request <2.40 module (where earlier versions used a "bad" version of qs).
Long story longer, having npm try to enforce some basic security notifications is probably A Good Thing(tm).
alternate bonus plan
Not sure if there is a way to contact all people who are using compromised versions of modules listed in https://nodesecurity.io/advisories. I don't know how trivial that is if npm already knows all the contents of the package.json files (with version numbers) and people's login email addresses. I wouldn't object to npm emailing me every week or month with a friendly email if one of my published modules was compromised and in need of an update.
Conversely, after doing an npm install if npm automatically verified the installed packages against the nodesecurity.io db and just console.log()ed some WARN messages to inform module users that the module they used is potentially compromised.
