[SecurityBundle] support custom functions inside allow_if expressions





Q
A




Branch?
2.7


Bug fix?
yes


New feature?
no


BC breaks?
no


Deprecations?
no


Tests pass?
yes


Fixed tickets
#23208


License
MIT


Doc PR
-



This is a follow up for #24309.

Problem:
The SecurityExtension was instantiating an \Symfony\Component\Security\Core\Authorization\ExpressionLanguage instance to parse the expressions defined in the access control config via allow_if: "...". So it used a pre-parsed SerializedParsedExpression instead of a raw Expression probably for performance reasons.
This has the serious drawback (and that's the bug) that it does not use the service 'security.expression_language' for this during the compiler pass. So any customizations for the service (like custom providers with functions) are completely ignored here on compile time.

Proposed fix
I propose to not dump parsed expressions at all and to leave this for run-time and caching.
I did some benchmarks and would like to hear your thoughts on this.
Using this small benchmark script (https://gist.github.com/dmaicher/ae506ff436a4647f3eaf7e59ec4c4aa1) I get the following numbers:
Using NullAdapter:
raw:    39.814957857132s 
parsed: 19.232628822327s

Using ArrayAdapter for caching there is almost no difference:
raw:    21.031932115555s 
parsed: 19.204074144363s

So on my laptop the difference for the NullAdapter case is roughly 20s for 500 thousand evaluations. Which means for one evaluation it's in the range of 40 microseconds or 0.04ms.
Maybe we can make use of cache.system for the expression language on 3.3+?
WDYT?
