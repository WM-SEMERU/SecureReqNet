Security component triggers when it should not


Symfony version(s) affected: x.y.z
4.1.2
Description
2 forms, 1 to authenticate, second to update users email and password.
It is ok with 1, but second is fun.
If in second form, we have input fields with same names as in login form (security firewall auth fields), security component identifies this, second form as login, and starts authentication process.
Second form, will not get even in controllers method  argument resolver, because security triggered before, and start authentication.
How to reproduce
as described above, symfonies security component see every form which contains same auth field names as configured for authentication, indicates these forms as authentication forms.
Possible Solution
Have to change authentication fields names, or user update field names. But i think component should not work like this.
Additional context
additional logs, steps
1 - we try to save user
2 - security try to authenticate
3 - see that user authenticated
4 - redirect to path we set in config
####################################################################################################
#######################################  09/Aug/2018 18:05:48  #####################################
####################################################################################################
___ REQUEST ________________________________________________________________________________________
Matched route "user.save".
--> route: user.save
--> route_parameters:
      _route: user.save
      _controller: 'App\Application\Controller\AdminPanel\AdminUserController::save'
      _locale: en
--> request_uri: 'https://test.loc/user/save'
--> method: POST
___ (!) SECURITY ___________________________________________________________________________________
Read existing security token from the session.
--> key: _security_admin_area
--> token_class: Symfony\Component\Security\Core\Authentication\Token\RememberMeToken
___ DOCTRINE _______________________________________________________________________________________
SELECT u0_.created_at AS created_at_0, u0_.updated_at AS updated_at_1, u0_.uuid AS uuid_2,
  u0_.nickname AS nickname_3, u0_.email AS email_4, u0_.password AS password_5, u0_.plain_password
  AS plain_password_6, u0_.salt AS salt_7, u0_.slug AS slug_8, u0_.activation_token AS
  activation_token_9, u0_.chips AS chips_10 FROM users u0_ WHERE u0_.email = ?
--> 'query params': [admin@email.com]
___ (!) SECURITY ___________________________________________________________________________________
User was reloaded from a user provider.
--> provider: App\Infrastructure\Security\Provider\UserEntityProvider
--> username: admin@email.com
___ (!) SECURITY ___________________________________________________________________________________
Checking for guard authentication credentials.
--> firewall_key: admin_area
--> authenticators: 1
___ (!) SECURITY ___________________________________________________________________________________
Calling getCredentials() on guard configurator.
--> firewall_key: admin_area
--> authenticator: App\Infrastructure\Security\Authentication\Authenticators\FormAuthenticator
___ (!) SECURITY ___________________________________________________________________________________
Guard authentication failed.
--> exception: 'C:82:"Symfony\Component\Security\Core\Exception\CustomUserMessageAuthenticationException":223:{a:3:{i:0;s:165:"a:5:{i:0;N;i:1;i:0;i:2;s:17:"Wrong credentials";i:3;s:95:"/var/www/site/src/Infrastructure/Security/Authentication/Authenticators/FormAuthenticator.php";i:4;i:98;}";i:1;s:17:"Wrong credentials";i:2;a:0:{}}}'
--> authenticator: App\Infrastructure\Security\Authentication\Authenticators\FormAuthenticator
___ (!) SECURITY ___________________________________________________________________________________
The "App\Infrastructure\Security\Authentication\Authenticators\FormAuthenticator" authenticator
  set the response. Any later authenticator will not be called
--> authenticator: App\Infrastructure\Security\Authentication\Authenticators\FormAuthenticator
___ NOTIFIED EVENTS ________________________________________________________________________________
--> kernel.request: 'Symfony\Component\HttpKernel\EventListener\DebugHandlersListener::configure'
--> kernel.request: 'Symfony\Component\HttpKernel\EventListener\ValidateRequestListener::onKernelRequest'
--> kernel.request: 'Nelmio\CorsBundle\EventListener\CorsListener::onKernelRequest'
--> kernel.request: 'Symfony\Component\HttpKernel\EventListener\TestSessionListener::onKernelRequest'
--> kernel.request: 'Symfony\Component\HttpKernel\EventListener\SessionListener::onKernelRequest'
--> kernel.request: 'Symfony\Component\HttpKernel\EventListener\RouterListener::onKernelRequest'
--> kernel.request: 'Symfony\Bundle\FrameworkBundle\EventListener\ResolveControllerNameSubscriber::onKernelRequest'
--> kernel.request: 'Symfony\Component\HttpKernel\EventListener\LocaleListener::onKernelRequest'
--> kernel.request: 'Symfony\Component\HttpKernel\EventListener\TranslatorListener::onKernelRequest'
--> kernel.request: 'Symfony\Bundle\SecurityBundle\Debug\TraceableFirewallListener::onKernelRequest'
--> kernel.request: 'Symfony\Bundle\SecurityBundle\Debug\TraceableFirewallListener::onKernelRequest'
--> kernel.request: 'Sentry\SentryBundle\EventListener\ExceptionListener::onKernelRequest'
--> kernel.request: 'App\Infrastructure\EventSourcing\Subscribers\LocalizedRouteRedirect::onKernelRequest'
--> kernel.request: 'App\Infrastructure\EventSourcing\Subscribers\RedirectAuthenticatedUserEventSubscriber::onKernelRequest'
--> kernel.request: 'App\Infrastructure\EventSourcing\Subscribers\TrimRequestSubscriber::trimString'
--> kernel.request: 'App\Infrastructure\EventSourcing\Subscribers\VerifyCsrfTokenEventSubscriber::onKernelRequest'
___ (!) SECURITY ___________________________________________________________________________________
Stored the security token in the session.
--> key: _security_admin_area
___ NOTIFIED EVENTS ________________________________________________________________________________
--> kernel.response: 'Symfony\Component\HttpKernel\EventListener\ResponseListener::onKernelResponse'
--> kernel.response: 'Symfony\Component\HttpKernel\DataCollector\RequestDataCollector::onKernelResponse'
--> kernel.response: 'Sensio\Bundle\FrameworkExtraBundle\EventListener\HttpCacheListener::onKernelResponse'
--> kernel.response: 'Symfony\Component\Security\Http\RememberMe\ResponseListener::onKernelResponse'
--> kernel.response: 'Symfony\Component\HttpKernel\EventListener\ProfilerListener::onKernelResponse'
--> kernel.response: 'Symfony\Component\HttpKernel\EventListener\TestSessionListener::onKernelResponse'
--> kernel.response: 'Symfony\Bundle\WebProfilerBundle\EventListener\WebDebugToolbarListener::onKernelResponse'
--> kernel.response: 'Symfony\Component\HttpKernel\EventListener\SessionListener::onKernelResponse'
--> kernel.response: 'Symfony\Component\HttpKernel\EventListener\StreamedResponseListener::onKernelResponse'
--> kernel.finish_request: 'App\Infrastructure\EventSourcing\Subscribers\StoreOldInputDataSubscriber::storeData'
--> kernel.finish_request: 'Symfony\Component\HttpKernel\EventListener\LocaleListener::onKernelFinishRequest'
--> kernel.finish_request: 'Symfony\Component\HttpKernel\EventListener\SessionListener::onFinishRequest'
--> kernel.finish_request: 'Symfony\Component\HttpKernel\EventListener\TranslatorListener::onKernelFinishRequest'
--> kernel.finish_request: 'Symfony\Component\HttpKernel\EventListener\RouterListener::onKernelFinishRequest'
--> kernel.finish_request: 'Symfony\Bundle\SecurityBundle\Debug\TraceableFirewallListener::onKernelFinishRequest'
--> kernel.terminate: 'Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener::onTerminate'
--> kernel.terminate: 'Symfony\Component\HttpKernel\EventListener\ProfilerListener::onKernelTerminate'


// IT SHOULD NOT DO THIS REQUEST


####################################################################################################
#######################################  09/Aug/2018 18:05:48  #####################################
####################################################################################################
___ REQUEST ________________________________________________________________________________________
Matched route "login".
--> route: login
--> route_parameters:
      _route: login
      _controller: 'App\Application\Controller\AdminPanel\Auth\LogInController::authenticate'
      _locale: en
--> request_uri: 'https://test.loc/en/login'
--> method: GET
___ (!) SECURITY ___________________________________________________________________________________
Read existing security token from the session.
--> key: _security_admin_area
--> token_class: Symfony\Component\Security\Core\Authentication\Token\RememberMeToken
___ DOCTRINE _______________________________________________________________________________________
SELECT u0_.created_at AS created_at_0, u0_.updated_at AS updated_at_1, u0_.uuid AS uuid_2,
  u0_.nickname AS nickname_3, u0_.email AS email_4, u0_.password AS password_5, u0_.plain_password
  AS plain_password_6, u0_.salt AS salt_7, u0_.slug AS slug_8, u0_.activation_token AS
  activation_token_9, u0_.chips AS chips_10 FROM users u0_ WHERE u0_.email = ?
--> 'query params': [admin@email.com]
___ (!) SECURITY ___________________________________________________________________________________
User was reloaded from a user provider.
--> provider: App\Infrastructure\Security\Provider\UserEntityProvider
--> username: admin@email.com
___ (!) SECURITY ___________________________________________________________________________________
Checking for guard authentication credentials.
--> firewall_key: admin_area
--> authenticators: 1
___ (!) SECURITY ___________________________________________________________________________________
Calling getCredentials() on guard configurator.
--> firewall_key: admin_area
--> authenticator: App\Infrastructure\Security\Authentication\Authenticators\FormAuthenticator
___ NOTIFIED EVENTS ________________________________________________________________________________
--> sentry.set_user_context: 'App\Infrastructure\EventSourcing\Subscribers\SentryEventSubscriber::onSetUserContext'
--> kernel.request: 'Symfony\Component\HttpKernel\EventListener\DebugHandlersListener::configure'
--> kernel.request: 'Symfony\Component\HttpKernel\EventListener\ValidateRequestListener::onKernelRequest'
--> kernel.request: 'Nelmio\CorsBundle\EventListener\CorsListener::onKernelRequest'
--> kernel.request: 'Symfony\Component\HttpKernel\EventListener\TestSessionListener::onKernelRequest'
--> kernel.request: 'Symfony\Component\HttpKernel\EventListener\SessionListener::onKernelRequest'
--> kernel.request: 'Symfony\Component\HttpKernel\EventListener\RouterListener::onKernelRequest'
--> kernel.request: 'Symfony\Bundle\FrameworkBundle\EventListener\ResolveControllerNameSubscriber::onKernelRequest'
--> kernel.request: 'Symfony\Component\HttpKernel\EventListener\LocaleListener::onKernelRequest'
--> kernel.request: 'Symfony\Component\HttpKernel\EventListener\TranslatorListener::onKernelRequest'
--> kernel.request: 'Symfony\Bundle\SecurityBundle\Debug\TraceableFirewallListener::onKernelRequest'
--> kernel.request: 'Sentry\SentryBundle\EventListener\ExceptionListener::onKernelRequest'
--> kernel.request: 'App\Infrastructure\EventSourcing\Subscribers\LocalizedRouteRedirect::onKernelRequest'
--> kernel.request: 'App\Infrastructure\EventSourcing\Subscribers\RedirectAuthenticatedUserEventSubscriber::onKernelRequest'
--> kernel.request: 'App\Infrastructure\EventSourcing\Subscribers\RedirectAuthenticatedUserEventSubscriber::onKernelRequest'
--> kernel.request: 'App\Infrastructure\EventSourcing\Subscribers\TrimRequestSubscriber::trimString'
--> kernel.request: 'App\Infrastructure\EventSourcing\Subscribers\VerifyCsrfTokenEventSubscriber::onKernelRequest'
___ (!) SECURITY ___________________________________________________________________________________
Stored the security token in the session.
--> key: _security_admin_area
___ NOTIFIED EVENTS ________________________________________________________________________________
--> kernel.response: 'Symfony\Component\HttpKernel\EventListener\ResponseListener::onKernelResponse'
--> kernel.response: 'Symfony\Component\HttpKernel\DataCollector\RequestDataCollector::onKernelResponse'
--> kernel.response: 'Sensio\Bundle\FrameworkExtraBundle\EventListener\HttpCacheListener::onKernelResponse'
--> kernel.response: 'Symfony\Component\Security\Http\RememberMe\ResponseListener::onKernelResponse'
--> kernel.response: 'Symfony\Component\HttpKernel\EventListener\ProfilerListener::onKernelResponse'
--> kernel.response: 'Symfony\Component\HttpKernel\EventListener\TestSessionListener::onKernelResponse'
--> kernel.response: 'Symfony\Bundle\WebProfilerBundle\EventListener\WebDebugToolbarListener::onKernelResponse'
--> kernel.response: 'Symfony\Component\HttpKernel\EventListener\SessionListener::onKernelResponse'
--> kernel.response: 'Symfony\Component\HttpKernel\EventListener\StreamedResponseListener::onKernelResponse'
--> kernel.finish_request: 'App\Infrastructure\EventSourcing\Subscribers\StoreOldInputDataSubscriber::storeData'
--> kernel.finish_request: 'Symfony\Component\HttpKernel\EventListener\LocaleListener::onKernelFinishRequest'
--> kernel.finish_request: 'Symfony\Component\HttpKernel\EventListener\SessionListener::onFinishRequest'
--> kernel.finish_request: 'Symfony\Component\HttpKernel\EventListener\TranslatorListener::onKernelFinishRequest'
--> kernel.finish_request: 'Symfony\Component\HttpKernel\EventListener\RouterListener::onKernelFinishRequest'
--> kernel.finish_request: 'Symfony\Bundle\SecurityBundle\Debug\TraceableFirewallListener::onKernelFinishRequest'
--> kernel.terminate: 'Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener::onTerminate'
--> kernel.terminate: 'Symfony\Component\HttpKernel\EventListener\ProfilerListener::onKernelTerminate'


####################################################################################################
#######################################  09/Aug/2018 18:05:48  #####################################
####################################################################################################
___ REQUEST ________________________________________________________________________________________
Matched route "dashboard".
--> route: dashboard
--> route_parameters:
      _route: dashboard
      _controller: 'App\Application\Controller\AdminPanel\DashboardController::index'
      _locale: en
--> request_uri: 'https://test.loc/en/'
--> method: GET
___ (!) SECURITY __

This was unpredicted for me behavior, so wasted some time  day guessing why my users form can not submitted with email and password fields.
