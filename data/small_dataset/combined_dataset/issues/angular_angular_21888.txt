CWE-311: Missing Encryption of Sensitive Data


I'm submitting a...

[ ] Regression (a behavior that used to work and stopped working in a new release)
[x] Bug report  
[ ] Feature request
[ ] Documentation issue or request
[ ] Support request => Please do not submit support request here, instead see https://github.com/angular/angular/blob/master/CONTRIBUTING.md#question

Current behavior
I am note sure whether I should submit this item as a issue here or question at Stack Overflow. Please let me know if this should not be listed here.
We are using Angular 4 for a web portal, when submitting the portlet code for SAC, IBM AppScan reported the following high definitive findings:
CWE-311: Missing Encryption of Sensitive Data

Insecure HTTP Communication

if ("document" in self) {
// Full polyfill for browsers with no classList support
// Including IE < Edge missing SVGElement.classList
if (!("classList" in document.createElement("_"))
  || document.createElementNS && !("classList" in document.createElementNS("http://www.w3.org/2000/svg","g"))) {
(function (view) {
"use strict";


PostMessage To Any Target Origin

        var postMessageIsAsynchronous_1 = true;
        var oldOnMessage = root.onmessage;
        root.onmessage = function () {
            postMessageIsAsynchronous_1 = false;
        };
        root.postMessage('', '*');
        root.onmessage = oldOnMessage;
        return postMessageIsAsynchronous_1;
    }
    return false;
};

onGlobalMessage.instance = this;
root.addEventListener('message', onGlobalMessage, false);
var fn = function setImmediate() {
    var _a = setImmediate, messagePrefix = _a.messagePrefix, instance = _a.instance;
    var handle = instance.addFromSetImmediateArguments(arguments);
    instance.root.postMessage(messagePrefix + handle, '*');
    return handle;
};
fn.instance = this;
fn.messagePrefix = messagePrefix;
return fn;

Would like to check whether this is a real issue or false positive.
Expected behavior
Minimal reproduction of the problem with instructions
What is the motivation / use case for changing the behavior?
Environment

Angular version: 4.0.0


Browser:
- [ ] Chrome (desktop) version XX
- [ ] Chrome (Android) version XX
- [ ] Chrome (iOS) version XX
- [ ] Firefox version XX
- [ ] Safari (desktop) version XX
- [ ] Safari (iOS) version XX
- [ ] IE version XX
- [ ] Edge version XX
 
For Tooling issues:
- Node version: XX  
- Platform:  

Others:


