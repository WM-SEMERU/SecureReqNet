[Security] AccessDecisionManager decide function behaviour


In the current AccessDecisionManager the behaviour between the decide methods decideAffirmative() and decideUnanimous() vary.
So if you use the affirmative strategy for example access is granted through the RoleVoter if the user has at least one of the specified roles. If you use the unanimous strategy the access is denied through the RoleVoter if the current user has not all of the specified roles. So the same Voter grants different access for the two strategies.
The different behavior derives from the different usage of the Voter attributes in the two decide-methods. The decideUnanimous() methods gives, through the additional foreach-loop for the attributes (line 189), all attributes separate to the Voters contrary to the decideAffirmative() method which gives all attributes at once to the Voters.
According to the documentation http://symfony.com/doc/current/components/security/authorization.html one would expect the strategy to influence only how the voter results are combined, not how each voter works on its own.
We discovered this weird behaviour using the Secure-Annotation from the JMSSecurityExtraBundle.
Considering the following code
use JMS\SecurityExtraBundle\Annotation\Secure;

/**
* @Secure(roles="ROLE_A, ROLE_B")
*/
public function exampleAction()
{

The unanimous-strategy allows access for the user only if he has both of the roles (A and B), while the affirmative-strategy grants access even if the user has only one of the roles (A or B).
