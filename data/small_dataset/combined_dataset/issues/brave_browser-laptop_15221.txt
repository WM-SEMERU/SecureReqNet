Dapp detection is inaccurate


Description
Our site, Observable triggers a modal that says 'this site has a dapp available, do you want to install MetaMask?'
Steps to Reproduce

Open https://beta.observablehq.com/

Actual result:

Expected result:
There is no suggestion, because there is no dapp.
Reproduces how often:
Always
Brave Version
Brave: 0.24.0
V8: 6.9.427.23
rev: f657f15
Muon: 8.1.6
OS Release: 17.7.0
Update Channel: Release
OS Architecture: x64
OS Platform: macOS
Node.js: 7.9.0
Brave Sync: v1.4.2
libchromiumcontent: 69.0.3497.100
Reproducible on current live release:
Only relase
Additional Information
This tracks down to the dappListener.js file, which basically says that

If the content scripts declare window.web3
Or if they ever access window.web3

Then it's a dapp. That's a very fishy way to detect a dapp. For example, our site has this code, that triggers it:
const globals = new Set(
  Object.getOwnPropertyNames(window).filter(key => {
    try {
      return (
        !/^webkit/i.test(key) && // Avoid deprecation warnings.
        !blacklist.has(key) &&
        window[key] != null
      );
    } catch (e) {
      return false;
    }
  })
);
Minus the bulletproofing, this tiny snippet should be enough to trigger a false dapp message:
Object.getOwnPropertyNames(window).forEach(key => window[key])
A pretty reasonable thing for a website, and which should not accidentally trigger a false modal encouraging a user to install some bonus software. In our case, it's to power autocompletion and some static analysis in a code editor, but there are plenty of other cases that I can imagine that will also trigger a false message.
Hopefully there can be a better heuristic here: this one is very broad and inaccurate.
