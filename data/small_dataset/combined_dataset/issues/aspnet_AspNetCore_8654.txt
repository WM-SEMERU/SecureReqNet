WSFederation options.Validate() throws if ConfigurationManager is null even when configuration and metadata address are filled in


Describe the bug
WSFederation options.Validate() throws if ConfigurationManager is null even when configuration and metadata address are filled in. Looking at the source it just checks if ConfigurationManager is set or not and throws a very confusing error message if not.
The ConfigurationManager will be created automatically based on the MetadataAddress and Configuration if available which should mean that the options.Validate should not throw in this case.
To Reproduce
Steps to reproduce the behavior:


Using this version of ASP.NET Core '...'
2.2


Run this code


builder.AddWsFederation(authMethod.Id.ToString(), authMethod.Name, options =>
					{
						try
						{
							options.MetadataAddress = authMethod.IdPUrl;							
							options.CallbackPath = $"/signin-wsfed/{authMethod.Id}";
							options.RemoteSignOutPath = $"/signin-wsfed/{authMethod.Id}";
							options.Wtrealm = authMethod.Audience;
							options.RequireHttpsMetadata = false;
							options.SaveTokens = true;
							options.TokenValidationParameters = new TokenValidationParameters
							{
								ValidAudiences = new string[] { authMethod.Audience, $"spn:{authMethod.Audience}" },
								ValidateIssuerSigningKey = !string.IsNullOrEmpty(authMethod.Certificate),
								IssuerSigningKey = string.IsNullOrEmpty(authMethod.Certificate) ? null : new X509SecurityKey(KeyVaultService.GetCertificateFromString(authMethod.Certificate))
							};
							
							options.Validate();
						}
						catch (Exception ex)
						{
							logger.LogError(ex, $"Saml2 Provider configuration invalid: { authMethod.Name } with Id: { authMethod.Id }.");
						}

With these arguments

Doesn't matter. If the MetadataAddress, Wtrealm and callbackpath are set it shouldn't error on options.Validate()
Expected behavior
It should validate correctly based on what actually is needed per even the error message that it generates.
Additional context
This also causes issues if you're attempting to add a wsfederation endpoint at runtime which is still not documented properly.
