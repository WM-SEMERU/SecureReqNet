Plugin built with -mod=vendor cannot be loaded


What version of Go are you using (go version)?
$ go version
go version go1.12.1 linux/amd64

Does this issue reproduce with the latest release?
Yes.
What operating system and processor architecture are you using (go env)?
go env Output$ go env
GOARCH="amd64"
GOBIN=""
GOCACHE="/home/mem/.cache/go-build"
GOEXE=""
GOFLAGS=""
GOHOSTARCH="amd64"
GOHOSTOS="linux"
GOOS="linux"
GOPATH="/home/mem/go"
GOPROXY=""
GORACE=""
GOROOT="/home/mem/devel/go/go-1.12"
GOTMPDIR=""
GOTOOLDIR="/home/mem/devel/go/go-1.12/pkg/tool/linux_amd64"
GCCGO="gccgo"
CC="gcc"
CXX="g++"
CGO_ENABLED="1"
GOMOD="/home/mem/devel/go/plugin-modules/go-plugin-modules/go.mod"
CGO_CFLAGS="-g -O2"
CGO_CPPFLAGS=""
CGO_CXXFLAGS="-g -O2"
CGO_FFLAGS="-g -O2"
CGO_LDFLAGS="-g -O2"
PKG_CONFIG="pkg-config"
GOGCCFLAGS="-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build318788666=/tmp/go-build -gno-record-gcc-switches"

What did you do?
The code to reproduce the issue is available at https://github.com/mem/go-plugin-modules
You can use the makefile in there to build the code and run the tests using make test.
When building a program and a plugin using the -mod=vendor flag (and vendoring the corresponding packages in the respective modules using go mod vendor), the plugin code fails to load:
$ cd go-plugin-loader/ && go build -mod=vendor -o /home/mem/devel/go/plugin-modules/go-plugin-modules/go-plugin-loader/go-plugin-loader-vendor main.go

$ cd go-plugin-hook/ && go build -mod=vendor -buildmode=plugin -o /home/mem/devel/go/plugin-modules/go-plugin-modules/go-plugin-hook/go-plugin-hook-vendor.so main.go

And then running this program as:
$ go-plugin-loader/go-plugin-loader-vendor go-plugin-hook/go-plugin-hook-vendor.so

produces the error:
plugin.Open("go-plugin-hook/go-plugin-hook-vendor"): plugin was built with a different version of package golang.org/x/xerrors/internal

What did you expect to see?
The plugin is loaded and the code runs. This is demonstrated in the above code by running make test-no-vendor, which simply does not pass the -mod=vendor flag when building.
What did you see instead?
plugin.Open("go-plugin-hook/go-plugin-hook-vendor"): plugin was built with a different version of package golang.org/x/xerrors/internal

It seems the recorded import path when passing -mod=vendor is different.
This is related (duplicate?) of #28983, but I found that issue only until I was submitting this one, so I think there's missing documentation that explains what the issue is and how it should be dealt with.
