Client-side Blazor apps not compiling with latest SDKs


Not sure if this is being worked on elsewhere, but it's fairly urgent as we can only verify client-side Blazor properly once it works out of the box.
Steps:

Install latest .NET Core SDK 3.0.100-preview4-011074
dotnet new --install <path on disk to Microsoft.AspNetCore.Blazor.Templates.0.9.0-preview4-19204-04.nupkg>

Note that aspnet-AspNetCore CI drops to MyGet are broken since yesterday evening (I know why, and have emailed @dougbu with info), so you will have to download the 19204-04 packages from the dnc-internal build service and put them in some local directory and tell NuGet how to find them


dotnet new blazor -o MyStandaloneApp
cd MyStandaloneApp
dotnet build

Encounter error 1: The type or namespace name 'App' could not be found
This was already fixed by @pranavkm yesterday, but the fix didn’t make it into build 19204-04. So, replicate the fix by adding <RazorLangVersion>3.0</RazorLangVersion> to your csproj
BTW we could put the <RazorLangVersion>3.0</RazorLangVersion> into the .props inside the Blazor.Build package instead so it doesn’t have to show up in templates


dotnet build

Encounter error 2: The type or namespace name 'Mvc' does not exist in the namespace 'Microsoft.AspNetCore'
This is still an active issue, as far as I know.
I don’t know what is the intended way to make it understand this is not an MVC project, but one hack workaround I found was to add <GenerateRazorAssemblyInfo>false</GenerateRazorAssemblyInfo> to the csproj.
With this workaround, it builds and runs correctly. However, this feels like a hack instead of addressing the underlying issue, which is that the SDK thinks this is an MVC project
Rather than adding more flags to the user-visible csproj, it may be nicer to put any new props in the .Blazor.Build package.
Sidenote: When fixing this, do not change from the .Web SDK to the .Razor SDK. If we do that, it breaks the ability to launch Blazor-Standalone in IISExpress. We must stay on the .Web SDK.



