[Security][Guard] Add an option to try all authenticators before failing





Q
A




Branch?
master


Bug fix?
no


New feature?
yes


BC breaks?
no


Deprecations?
no


Tests pass?
yes


Fixed tickets
n/a


License
MIT


Doc PR
todo



With Guard, multiple authenticators can be configured on a firewall. In this case, the listener breaks the authentication at the first unsatisfied authenticator, calling onAuthenticationFailure() on this one which causes the (failure) response to be returned.
If it is a success then it does the same but with onAuthenticationSuccess(), that's fine.
Problem
If I want all of the authenticators configured on the firewall to be executed before the authentication fails (like using the chain provider), it's not possible or require some weird changes in the authenticators classes.
Imho it's useful (and quite common) to have two possible ways to be authenticated on a firewall, which is what Guard seems to ease at first.
Proposed solution
Adding an option to the GuardAuthenticationFactory. If set to true (default) the behavior stays the same as the current one. If set to false, all authenticators are executed before the authentication fails, calling onAuthenticationFailure() on the last authenticator if it doesn't succeed.
Naming was hard, I used break_on_failure but I'm open to change it if the feature looks good.
Tests will be added depending on feedbacks.
