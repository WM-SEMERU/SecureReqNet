'Gitlab API methods are authorized using a private_token param or header, which can be obtained by POSTing to /session (http://doc.gitlab.com/ce/api/session.html)

This method requires an app attempting to use the Gitlab API to ask the user for their username and password so that it can forward these on to /session to obtain the private token.

This method is less secure than current best practices (namely, OAuth) for a few reasons:
- the app is given the user's real username and password, which can be intercepted by a malicious app or intermediary to perform any action as that user. A malicious app could record usernames+passwords and creators of that app could log in as the user, delete repos, post malware/spam, etc., without any indication that it wasn't the original user doing these things
- /session is seemingly accessible over http, so passwords are transmitted in the clear
- there is no way to revoke a particular app's token without changing the password, thus revoking all app's authorizations

A much better alternative would be to use OAuth, where the user only provides a password to Gitlab.com (or a hosted instance), and an app-specific revokable token is returned to the app, potentially scoped to only be able to perform certain user-approved actions.

Many libraries exist in Ruby to allow Ruby services to be OAuth token providers.

Further reading: http://oauth.net/