ApiController redirects to login page


Describe the bug
When using ASP.NET Identity cookie authentication to protect a API controller that is decorated with the ApiController attribute and performing an unauthorized HTTP request, ASP.NET redirects to /Identity/Account/Login?ReturnUrl=%2Fapi%2FFoo instead of just returning a 401 Unauthorized status code and problem details in JSON format.
To Reproduce
Steps to reproduce the behavior:

Configure ASP.NET Core to use ASP.NET Identity with default identity and default UI which uses cookies.
Create a API controller that you decorate with the ApiController attribute.
Perform a HTTP request (Content-Type can even be application/json) against the controller.

Using ASP.NET 2.2.
    [ApiController] // <-- I want this controller to behave like an API. 
    [Authorize]     // <-- Authenticate using cookies.
    [Route("api/[controller]")]
    public class FooController : ControllerBase
    {
        [HttpGet]
        public string Get()
        {
            return "string";
        }
    }
        public void ConfigureServices(IServiceCollection services)
        {
            /// ...
            services.AddDefaultIdentity<IdentityUser>()
                .AddDefaultUI(UIFramework.Bootstrap4)
                .AddEntityFrameworkStores<ApplicationDbContext>();
            // ...
        }

        public void Configure(IApplicationBuilder app, IHostingEnvironment env)
        {
            // ...
            app.UseAuthentication();
            // ...
        }
Expected behavior
I expected the API to behave as an API since I explicitly decorated the controller with the ApiController attribute.
I expected it to return the status code 401 Unauthorized.
Maybe with a link to: https://httpstatuses.com/401
Additional context
My SPA authenticates using cookie authentication then uses fetch() to do HTTP requests against the API. The fetch call sets the credentials option to include cookies with the request.
