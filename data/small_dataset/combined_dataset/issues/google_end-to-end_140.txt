Semantics of inclusion of sender's key confusing


From coruus@gmail.com on July 06, 2014 23:35:24
Steps to reproduce:

Send a message to a recipient and delete the sent message
Have the recipient delete her public key, but not the received message

What happens? The recipient now has a copy of the message that the sender can decrypt. The sender does not have a copy of the message TO decrypt, but could decrypt the recipient's copy.
Some thoughts about the right semantics:
A. E2E used with Gmail (or other services with mail-semantics)
If a user is using E2E with Gmail, they know that they are identifiable as the sender of the message. It is therefore appropriate to maintain traditional email semantics by including a readable copy of the message.
It would be better, however, to do so by BCCing the sender on the message, and including a PKESK under the sender's key with this BCCed message -- but not with the message sent to the recipients.
(Otherwise, the situation is confusing: If the recipient deletes her public key, but not the message, and the sender deletes the sent message, but not his public key, the recipient has a copy of the message that the sender can decrypt.)
B. E2E in other browser contexts (cut-and-paste)
If a user is using E2E in another browser context, it should be assumed that they are not using a system with mailbox semantics. The message should not be encrypted to the sender's public key, without explicit indication that this is the desired behavior.
(In particular, consider a potential source anonymously emailing a reporter; it is very undesirable -- and potentially dangerous -- for the sender to be able to decrypt the message. At the moment, because the recipient's public key is included in all PKESK packets, anonymity is violated.)
Original issue: http://code.google.com/p/end-to-end/issues/detail?id=103
