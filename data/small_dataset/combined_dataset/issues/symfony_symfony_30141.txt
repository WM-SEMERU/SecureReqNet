[Security] Add an ability to detach user from TokenStorage


Description
The main issue that caused was described in stof/StofDoctrineExtensionsBundle#373 , but after some thinking, I decided that the best & universal solution would be to allow TokenStorage be marked as unmanaged/detached (maybe, via EventDispatcher). So, this way any Component/Code may listen to this event and update Token data if it becomes detached somehow.
Example
Example from the original issue, which uses Doctrine2, FOSUserBundle and StofDoctrineExtensionsBundle:
Assume i have an entity:
namespace Some\Bundle\Entity\Post;

use Doctrine\ORM\Mapping as ORM;
use Gedmo\Mapping\Annotation as Gedmo;
use Some\Bundle\Entity\User;

/**
 * Post
 *
 * @ORM\Table(name="post")
 */
class Post
{
    /**
     * @var integer
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    // ...

    /**
     * @var User
     *
     * @ORM\ManyToOne(targetEntity="Some\Bundle\Entity\User")
     * @ORM\JoinColumn(name="user_id", referencedColumnName="id", nullable=true, onDelete="SET NULL")
     *
     * @Gedmo\Blameable(on="create")
     */
    protected $user;
and somehwere in code:
// here i have an IS_AUTHENTICATED_FULLY role.
$post1 = new Post();
$em->persist($post1);
$em->flush(); // <-- here post will be created successfully, and user relation will be set
$em->clear(); // user in token storage and in blameable listener becomes unmanaged
$post2 = new Post();
$em->persist($post2);
$em->flush(); // <-- here would be an exception listed below
Exception:
A new entity was found through the relationship 'Some\Bundle\Entity\Post#user' that was not configured to cascade persist operations for entity: Some User. To solve this issue: Either explicitly call EntityManager#persist() on this unknown entity or configure cascade persist  this association in the mapping for example @ManyToOne(..,cascade={"persist"})

