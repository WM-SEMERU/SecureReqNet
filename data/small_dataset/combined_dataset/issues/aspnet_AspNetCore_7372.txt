AuthenticationHandler<TOptions> doesnt respect options passed to it


Describe the bug
Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions> never sets the public property Options in the constructor, instead just setting IOptionsMonitor OptionsMonitor. This means any custom settings initially passed down the constructor chain are ignored. This means the value of OptionsMonitor.Value is different to Options (which has all the defaults).
To Reproduce
Steps to reproduce the behaviour:

Using this version of ASP.NET Core '2.2.103'
Using this class

    public class DemoAuthenticationHandler : CookieAuthenticationHandler {
        private readonly IOptionsMonitor<CookieAuthenticationOptions> options;

        public DemoAuthenticationHandler (IOptionsMonitor<CookieAuthenticationOptions> options, ILoggerFactory logger, UrlEncoder encoder, ISystemClock clock) : base(options, logger, encoder, clock) {
            this.options = options;
        }

        protected override Task HandleForbiddenAsync(AuthenticationProperties properties) {
            return base.HandleForbiddenAsync(properties);
        }
    }

Add this to startup.cs
services.Configure<CookieAuthenticationOptions>(o => Configuration.GetSection("CookieAuthenticationOptions").Bind(o));

            services.AddAuthentication(o => {
                o.AddScheme<DemoAuthenticationHandler>("Demo", "Demo");
                o.DefaultScheme = "Demo";

Add this to appsettings.json
"CookieAuthenticationOptions": {
  "ClaimsIssuer": "demo",
  "Cookie": {
    "Name": "demoid",
    "SecurePolicy": 0, // CookieSecurePolicy.SameAsRequest
    "HttpOnly": true 
  },
  "AccessDeniedPath": "/accessdenied",
  "LoginPath": "/login",
  "LogoutPath": "/logout",
  "ReturnUrlParameter": "backto"
},


Put a break point in the class DemoAuthenticationHandler on the line

return base.HandleForbiddenAsync(properties);

Trigger a forbidden response and check the value of this.Options and this.OptionsMonitor.Value. They are different. They should be the same shouldn't they?

Expected behavior
this.Options and this.OptionsMonitor.Value should be the same.
