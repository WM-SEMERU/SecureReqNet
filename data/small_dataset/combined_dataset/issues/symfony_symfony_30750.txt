[Serializer] Object_To_Populate ignores data attribute types when deserializing


Symfony version(s) affected: 4.2
Description
Using Symfony Framework Bundle Serializer as configured per default data denormalization is behaving different depending on whether context has an Object_To_Populate set.
How to reproduce
Json:
{name: 'MyName', birthDate: '2000-01-01T00:00:00+01:00'}
Class:
public $name; /** @var \DateTime */ public $birthDate;
$this->serializer->deserialize($data, MyObject::class, 'json', [AbstractObjectNormalizer::OBJECT_TO_POPULATE => $object]);
is resulting in an error as the DateTimeNormalizer isn't used.
$this->serializer->deserialize($data, MyObject::class, 'json');
returns a new working object.
Possible Solution
AbstractNormalizer->instantiateObject immediately returns the object when context is set with OBJECT_TO_POPULATE, probably it shouldn't in any case?
