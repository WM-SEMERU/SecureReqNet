Introduce a new command to encode users passwords


The problem
Whenever I set up an in-memory user provider, I need to encode the plain password in order to safely store it in the configuration file.
The problem is that I don't know any simple mechanism to encode the password for the usual settings: lots of iterations, SHA algorithm, encode as base 64, etc.
At the end, I use the following quick-and-dirty script to encode the password using the command line:
$ php -r '$pass = "..."; $salt = "..."; $iterations=5000; $salted = $pass.$salt; $digest = hash("sha512", $salted, true); for($i=1; $i<$iterations; $i++) { $digest = hash("sha512", $digest.$salted, true); } echo base64_encode($digest);'

The solution
Introduce a simple command to encode the password for any given user/encoder.
I admit that the use of this command would be very limited:

Setting or updating the password of any in-memory user.
Encoding a password to check if the value stored in the database is correct.
General debug operations with encoded passwords.

However, in spite of its limited use, my biggest concern is that not having this command for the first use case is a total blocker for Symfony (and Silex) users.
