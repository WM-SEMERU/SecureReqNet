html/template: XSS risk with external JSON


Go version: go version go1.6 darwin/amd64
The following program highlights an XSS risk when injecting externally obtained JSON via template.JS:
package main

import (
    "html/template"
    "os"
)

func main() {
    validExternalJSON := `{field: "</script><script>alert('You have been pwned!');</script><script>"}`

    t := template.Must(template.New("").Parse(`<script>var x = {{.}}; alert(x.field);</script>`))
    if err := t.Execute(os.Stdout, template.JS(validExternalJSON)); err != nil {
        panic(err)
    }
}

This is somewhat unexpected, since the documentation of template.JS says "JS encapsulates a known safe EcmaScript5 Expression", which intuitively any valid JSON should fulfill. The documentation should at least include a warning about this use case. Even better for avoiding this situation would be a template.JSON type which automatically gets sanitized via json.HTMLEscape before rendering.
