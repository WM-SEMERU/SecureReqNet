[Token Storage] Calling setToken() with `null` throws an AuthenticationException





Q
A




Bug report?
yes


Feature request?
no


BC Break report?
?


RFC?
?


Symfony version
2.8.21



I noticed an issue with the setToken() function in \Symfony\Component\Security\Core\Authentication\Token\Storage. As described in the API the $token parameter of this function is allowed to be null, however when passing null to it I get the following exception:
request.CRITICAL: Uncaught PHP Exception Symfony\Component\Debug\Exception\FatalThrowableError:
Type error: Argument 1 passed to Symfony\Component\Security\Core\Exception\AuthenticationException::setToken() must implement interface Symfony\Component\Security\Core\Authentication\Token\TokenInterface, null given, called in ~/vendor/symfony/symfony/src/Symfony/Component/Security/Http/Firewall/ExceptionListener.php
on line 129" at ~/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/AuthenticationException.php line 41
{"exception":"[object] (Symfony\\Component\\Debug\\Exception\\FatalThrowableError(code: 0): Type error: Argument 1 passed to Symfony\\Component\\Security\\Core\\Exception\\AuthenticationException::setToken() must implement interface Symfony\\Component\\Security\\Core\\Authentication\\Token\\TokenInterface, null given, called in ~/vendor/symfony/symfony/src/Symfony/Component/Security/Http/Firewall/ExceptionListener.php on line 129 at ~/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/AuthenticationException.php:41)"} []

What I am attempting to pass null to this to force a sign out if a user doesn't have access to administrate a particular site in a multi-site environment with the following snippet.

User is our own entity class implementing the advanced user interface.
redirectWithMessage() is just a wrapper for redirectToRoute() and adding a flash message in 1 call.

public function setContainer(ContainerInterface $container = null)
{
    parent::setContainer($container);

    $user = $this->getUser();
    if (!($user instanceof User) || !$this->isUserAdminOfSite($user, $this->getSiteId())) {
        $this->get("security.token_storage")->setToken(null); // Exception thrown here
        $this->get("request")->getSession()->invalidate();
        $this->redirectWithMessage("user_admin_logout", [], "You are not permitted to administrate this site.", "danger");
    }
}

I've checked the source through my vendor folder, and the parameter is definitely defined as TokenInterface $token = null, so it's not this.
What seems to be happening is that \Symfony\Component\Security\Http\Firewall\ExceptionListener::handleAccessDeniedException() is reading the token and checking if it's "full fledged". If not a \Symfony\Component\Security\Core\Exception\AuthenticationException is thrown, however setToken() in this exception class does not allow null to be passed in.
I think that either the token should allowed to be null in \Symfony\Component\Security\Core\Exception\AuthenticationException, or \Symfony\Component\Security\Http\Firewall\ExceptionListener::handleAccessDeniedException() should not attempt to set a null token in the AuthenticationException. I'm not sure what implications a null token would have in the exception elsewhere.
If however you don't think that I should be forcing a sign out in this way let me know. üëç
