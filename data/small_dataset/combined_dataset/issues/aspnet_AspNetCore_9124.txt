IApplicationLifetime events not being hit when running ASP.NET Core with IIS using the out-of-process model


Context
I have an application which I am porting from ASP.NET to ASP.NET Core. The application used to leverage ASP.NET's IRegisteredObject API to perform custom shutdown logic (keeping the app alive while various bits of work complete), and with ASP.NET Core I'm transitioning this to the new IApplicationLifetime cancellation token events. I followed the instructions here to set up my app to run behind local IIS (not IIS Express) using the out-of-process model (we're still .NET Framework at this point in our transition so we can't use the in-process model yet).
Describe the bug
Despite having registered handlers for both ApplicationStopping and ApplicationStopped, when running behind IIS I can't seem to get these events to trigger. Instead, whenever I rebuild my app, IIS seems to just kill the old process immediately (this also aborts outstanding requests despite my having set UseShutdownTimeout to a high value).
To Reproduce
Steps to reproduce the behavior:

Using this version of ASP.NET Core '2.1.7'
Set up a default ASP.NET Core .NET framework site in VS2017. Add ApplicationStopping/Stopped handlers
Follow https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/iis/development-time-iis-support?view=aspnetcore-2.2 to set things up running behind IIS
Make a code change, rebuild => shutdown logic doesn't happen

Expected behavior
Shutdown logic should run. I would expect IIS to signal the current process to begin graceful shutdown and at the same time start up the new process to handle new incoming requests.
