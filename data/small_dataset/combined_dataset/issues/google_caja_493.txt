Identifier lengths not limited


Original issue 493 created by mikesamuel on 2008-06-11T02:04:45.000Z:
var a = 'a';
while (true) {
if (a.length !== eval(
'(function () { var o = { ' + a + ': 1 }; for (var k in o) { return
k.length; } })()'
)) {
print(a.length);
break;
}
a += a;
print('still running ' + a.length);
}
where print dumps to a log.
The above will stop when parse fails on a long identifier or when the
parser truncates a long identifier.
On Firefox 2.0.0.14, the limit is above 228, and on IE somewhere above
225.  Safari crashes hard.
Make sure that we reject any identifiers above some limit (1024 code units).
This will prevent attacks where an identifier close to some truncating
limit can't have a suffix added.
