'### Summary

When renaming a subgroup that has projects, uploads to that projects (for example to issues) are not moved correctly. 

The `Gitlab::UploadsTransfer`-class assumes the namespace to move for the group is on the [top level of the uploads dir](https://gitlab.com/gitlab-org/gitlab-ce/blob/6194db8c15d1acf9adedd2f90e2cb2f49f1c624a/lib/gitlab/uploads_transfer.rb#L4) (`public/uploads/<name-of-namespace>`). In the case of a subgroup the path is actually `public/uploads/<parent>/<name-of-namespace>`.

I believe this is a ~security issue: Let's say someone has a namespace like this: `evilco/gitlab-org` and renames the subgroup `gitlab-org` to `no-more-attachments`. Then none of the attachments for `gitlab-org` would load.

This bug happens on GitLab.com.

### Steps to reproduce

- Create a group (`parent`)
- Create a subgroup in `parent` (`child`)
- Create a project inside `child` 
- Create an issue for that project, and upload a file to that issue.
- Rename `child` to something else
- Go back to view the issue => You will get a 404 for the 

### What is the current *bug* behavior?

The folder is not correctly moved, it only moves folders on the top level.

### What is the expected *correct* behavior?

Folders on the level of the namespace should be moved.

### Possible fixes

I think we need to adjust the [`root_dir`](https://gitlab.com/gitlab-org/gitlab-ce/blob/6194db8c15d1acf9adedd2f90e2cb2f49f1c624a/lib/gitlab/uploads_transfer.rb#L3) of the `Gitlab::UploadsTransfer` class to include the path up to the parent namespace.

### Related

I discovered this when building a migration to rename all namespaces with a reserved name (#28917)