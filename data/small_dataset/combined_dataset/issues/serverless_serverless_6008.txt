Template validation error: Template format error: Unresolved resource dependencies [Routetable] in the Resources block of the template


when running in CLoudformation template designer it looks fine but when creating a stack i keep getting the same Error Here is the code
{
"AWSTemplateFormatVersion": "2010-09-09",
"Description": "",
"Metadata": {
},
"Parameters": {

},
"Mappings": {

},
"Conditions": {

},
"Resources": {
    "myVPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "ture",
        "Tags": [{ "Key": "Name", "Value":  "myVPC" }]
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [{ "Key": "Name", "Value":  "InternetGateway" }]
      }
    },
    "VPCGatewayAttachment": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": { "Ref": "myVPC" },
        "InternetGatewayId": { "Ref": "InternetGateway" }
      }
    },
    "EC2SubnetA": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": "us-east-2a",
        "MapPublicIpOnLaunch": "true",
        "VpcId": { "Ref": "myVPC" },
        "CidrBlock": "10.0.10.0/20",
        "Tags": [{ "Key": "Name", "Value":  "EC2SubnetA" }]
      }
    },
    "RDSSubnetA": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": "us-east-2b",
        "VpcId": { "Ref": "myVPC" },
        "CidrBlock": "10.0.43.0/20",
        "Tags": [{ "Key": "Name", "Value":  "RDSSubnetA" }]
      }
    },
    "RDSSubnetB": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": "us-east-2b",
        "VpcId": { "Ref": "myVPC" },
        "CidrBlock": "10.0.66.0/20",
        "Tags": [{ "Key": "Name", "Value":  "RDSSubnetB" }]
      }
    },
    "RDSDBSubnetGroupA": {
       "Type": "AWS::RDS::DBSubnetGroup",
       "Properties": {
          "DBSubnetGroupDescription": "This is the Gorup of Subnets",
          "SubnetIds": [
              { "Ref": "RDSSubnetA" },
              { "Ref": "RDSSubnetB" }
             ],
          "Tags": [ { "Key": "Name", "Value":  "RDSDBSubnetGroupA" } ]
       }
    },
    "RouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": { "Ref": "myVPC" },
        "Tags": [{ "Key": "Name", "Value": "RouteTable" }]
      }
    },
    "InternetRoute": {
      "Type": "AWS::EC2::Route",
      "DependsOn": "VPCGatewayAttachment",
      "Properties": {
        "RouteTableId": { "Ref": "RouteTable" },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": { "Ref": "InternetGateway" }
      }
    },
    "EC2SubnetARouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": { "Ref": "EC2SubnetA" },
        "RouteTableId": { "Ref": "RouteTable" }
      }
    },
    "RDSSubnetARouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": { "Ref": "RDSSubnetA" },
        "RouteTableId": { "Ref": "Routetable" }
      }
    },
    "RDSSubnetBRouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": { "Ref": "RDSSubnetB" },
        "RouteTableId": { "Ref": "Routetable" }
      }
    },
    "RDSSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "This is the SG for RDS",
        "SecurityGroupIngress" : [
          {
            "IpProtocol": "tcp",
            "FromPort": 3306,
            "ToPort": 3306,
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "SecurityGroupEgress" : [
          {
            "IpProtocol": "-1",
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "VpcId" : { "Ref": "myVPC" },
        "Tags" :  [ { "Key": "Name", "Value":  "RDSSecurityGroup" } ]
      }
    },
    "EC2SecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "This is the SG for EC2",
        "SecurityGroupIngress" : [
          {
            "IpProtocol": "tcp",
            "FromPort": 22,
            "ToPort": 22,
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "SecurityGroupEgress" : [
          {
            "IpProtocol": "-1",
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "VpcId" : { "Ref": "myVPC" },
        "Tags" :  [ { "Key": "Name", "Value":  "EC2SecurityGroup" } ]
      }
    },
    "RDSInstanceA": {
       "Type": "AWS::RDS::DBInstance",
       "Properties": {
         "AllocatedStorage": "7",
         "DBInstanceClass": "db.t2.micro",
         "AllowMajorVersionUpgrade": "false",
         "AutoMinorVersionUpgrade": "false",
         "BackupRetentionPeriod": "7",
         "DBInstanceIdentifier": "RDStest",
         "DBName": "thisRDS",
         "VPCSecurityGroups": [ { "Ref": "RDSSecurityGroup" } ],
         "DBSubnetGroupName":  { "Ref": "RDSDBSubnetGroupA" } ,
         "Engine": "MYSQL",
         "EngineVersion": "5.7.22",
         "MasterUsername": "Kevin",
         "MasterUserPassword": "kevin12345",
         "MultiAZ": "false",
         "Port": "3306",
         "PubliclyAccessible": "false",
         "StorageEncrypted": "false",
         "StorageType": "gp2",
         "Tags": [ { "Key": "Name", "Value":  "RDSDBInstanceA" } ]
      }
    },
    "EC2InstanceA": {
        "Type": "AWS::EC2::Instance",
        "Properties": {
            "KeyName": "mykey",
            "ImageId": "ami-02bcbb802e03574ba",
            "InstanceType": "t2.micro",
            "Monitoring": "false",
            "SecurityGroupIds" : [{ "Ref": "EC2SecurityGroup" }],
            "SubnetId" : {  "Ref": "EC2SubnetA" },
            "Tags": [
               {
                  "Key": "Name",
                  "Value": "EC2InstanceA"
              }
          ],
          "UserData": {
              "Fn::Base64": {
                  "Fn::Join": [
                      "",
                      [
                          "#!/bin/bash -ex\n",
                          "sudo yum install -y mysql\n",
                          "sudo yum install -y httpd\n"

                      ]
                  ]
              }
          }
  }
          }
},
"Outputs": {

}

}
