SES breaks WeakMap on Chrome 29.0.1547.41 beta w/ Experimental JavaScript


Original issue 1831 created by kpreid.switchb.org on 2013-08-05T23:45:49.000Z:
Test case:
<body>
<script>
var ses = {maxAcceptableSeverityName: 'NOT_OCAP_SAFE'};
</script>
<script src='src/com/google/caja/ses/logger.js'></script>
<script src='src/com/google/caja/ses/repairES5.js'></script>
<script src='src/com/google/caja/ses/whitelist.js'></script>
<script src='src/com/google/caja/ses/startSES.js'></script>
<script src='src/com/google/caja/ses/hookupSES.js'></script>
<script>
var w = new WeakMap();
var o = {};
w.set(o, true);
document.write((ses.ok && ses.ok()) + ' ' + w.get(o));
</script>
The expected output is "true true"; actual output is "true undefined".
In Caja, this misbehavior causes Caja to hang and consume memory inside of def() invoked by the Domado constructor, because it fails to break cycles. It also causes the promise system to misbehave, (causing caja.js to fail even if Domado is not loaded) and a spamming async loop in explicit.html.
Versions:
Does not fail in Chrome 28.0.1500.95 stable.
Fails in Chrome 29.0.1547.41 beta.
Fails in Chrome 30.0.1587.2 canary.
If hookupSES does not run, then WeakMap is fine (so repairES5 is not the problem), and we are not loading WeakMap.js in this test case.
