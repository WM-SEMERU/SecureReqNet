Caja code can swallow a StackOverflowError, potentially leaving the thrower in an inconsistent state


Original issue 460 created by tyler.close on 2008-06-10T17:35:30.000Z:
What steps will reproduce the problem?
function recurse() {
try {
recurse();
} catch (e) {
caja.log('caught stack overflow');
}
}
Please provide any additional information below.
Any object that mutates itself, calls a method and then expects to be able
to call another method, or do another mutation, before returning can be put
into an inconsistent state by a caller that eats all but one remaining
stack frame before calling the callee. It's just too hard to program
correctly in this model.
