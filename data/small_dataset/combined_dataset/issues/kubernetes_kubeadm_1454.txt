print-join-command should be machine readable


BUG REPORT
Versions
kubeadm version (use kubeadm version): 1.14.0-rc.1 f5ee25e22987e51192b32b0c727458809e1a767c
Environment:

Kubernetes version (use kubectl version): 1.14.0-rc.1
Cloud provider or hardware configuration: https://github.com/displague/terraform-linode-k8s/blob/feature/k8s-1.14/modules/masters/scripts/local/kubeadm-token.sh#L13
OS (e.g. from /etc/os-release): debian9
Kernel (e.g. uname -a): 5.0.2
Others:

What happened?
Starting in the v1.14.0 betas, kubeadm token create --print-join-command began emitting additional lines of output, including a text description of how the two join commands emitted could be used for joining worker or control-plane nodes.
In rc1 the output was again changed to no longer include the text output and control-plane output, but it now emits a literal \ to wrap the text.
In Terraform scripts that I use (for the terraform-linode-k8s module) and similar scripts like it, this output has been machine readable as a single line command which was safe to execute.
This is no longer the case, requiring modification to these scripts.
For example, to accommodate older output formats and the v1.14.0 beta and the rc1 formats:
kubeadm token create --print-join-command | awk '/\\$/ { printf "%s", substr($0, 1, length($0)-1); next }; /kubeadm/ && ! /control-plane/ {gsub(/^[ \t]/, "", $0); print $0}'
What you expected to happen?
I would expect the output format to remain consistent between versions of Kubernetes. Specifically I expect a single line command that can be executed.
How to reproduce it (as minimally and precisely as possible)?
$ kubeadm token create --print-join-command 
kubeadm join ...:6443 --token .... \
    --discovery-token-ca-cert-hash sha256:...

Anything else we need to know?
I believe kubeadm token create --print-join-command arguments such as the following could be added to allow for the new output changes while making the effort to adapt minimal:

--control-plane - include the experimental control plane arguments in the output
--batch - single line of output (toggled automatically based on environment?)
and perhaps --human - provide full human readable text

