syscall: ParseDirent is unsafe


syscall.ParseDirent does not sufficiently validate its inputs to avoid crashes or returning uninitialized memory to the caller (via unsafe use of unsafe).
e.g., from syscall_linux.go:
func ParseDirent(buf []byte, max int, names []string) (consumed int, count int, newnames []string) {
        origlen := len(buf)
        count = 0
        for max != 0 && len(buf) > 0 { // <-- should check to see if len(buf) >= sizeof(Dirent) 
                dirent := (*Dirent)(unsafe.Pointer(&buf[0]))
                buf = buf[dirent.Reclen:] // <-- should validate dirent.Reclen isn't out of bound 
                if dirent.Ino == 0 { // File absent in directory.
                        continue
                }
                bytes := (*[10000]byte)(unsafe.Pointer(&dirent.Name[0]))
                var name = string(bytes[0:clen(bytes[:])]) // <-- should make sure this doesn't read more than dirent.Reclen
                if name == "." || name == ".." { // Useless names
                        continue
                }
                max--
                count++
                names = append(names, name)
        }
        return origlen - len(buf), count, names
}
