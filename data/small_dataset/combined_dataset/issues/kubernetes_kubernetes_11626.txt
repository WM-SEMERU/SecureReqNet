Proposal: Plugin to integrate with keystone for authentication and authorization


Keystone is an identity and token management system in Openstack. It is used to authenticate and authorize users, maintains project user relationships. It is an abstraction on top of directory services like LDAP and supports various authentication mechanisms like username-password, token-based and AWS EC2 type credentials.
Proposal
Authentication
Use keystone to validate the identity of a user using his username-password, API key or an authentication token. Plan to create a new authentication plugin to talk to keystone and validate the user's credentials
Workflow:

User gets an un-scoped keystone token using the keystone api directly.
The user then sets this token as his password in kubeconfig, and he uses this for all his requests sent to the apiserver
Kube's authentication plugin would then validate this token against keystone to see if it is valid.
If the token is validated, authentication passes, else it fails

Authorization:
Map Kubernetes' namespaces to keystone projects and used ACLs based on keystone to validate if a user has access to resources within the namespace. This enables us to have multi-tenant clusters, which don't actually require network isolation as of now (to keep it simple). We plan to create a new authorization plugin to do this.
Workflow

The object and its attributes (object type, name, namespace etc) and the user name is passed on to the authorization module
Do a keystone user-list --tenant <namespace> (an equivalent HTTP request) and check if the user belongs to the tenant
If the above step passes, authorize the user, else fail the request

Any feedback is highly appreciated.
