x/tools/internal/lsp: support (or ignore) build tags


What version of Go are you using (go version)?
$ go version
go version go1.12 linux/amd64

Does this issue reproduce with the latest release?
Yes
What operating system and processor architecture are you using (go env)?
go env Output$ go env
GOARCH="amd64"
GOBIN=""
GOCACHE="/home/diegs/.cache/go-build"
GOEXE=""
GOFLAGS=""
GOHOSTARCH="amd64"
GOHOSTOS="linux"
GOOS="linux"
GOPATH="/home/diegs"
GOPROXY=""
GORACE=""
GOROOT="/usr/local/go"
GOTMPDIR=""
GOTOOLDIR="/usr/local/go/pkg/tool/linux_amd64"
GCCGO="gccgo"
CC="gcc"
CXX="g++"
CGO_ENABLED="1"
GOMOD=""
CGO_CFLAGS="-g -O2"
CGO_CPPFLAGS=""
CGO_CXXFLAGS="-g -O2"
CGO_FFLAGS="-g -O2"
CGO_LDFLAGS="-g -O2"
PKG_CONFIG="pkg-config"
GOGCCFLAGS="-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build320516596=/tmp/go-build -gno-record-gcc-switches"

What did you do?
Installed latest gopls. Set it up with vim-ale. Works great!
Opened a (test) file that has the following build tag at the top:
// build +integration

What did you expect to see?
Completions and diagnostics in that file.
What did you see instead?
No completions or diagnostics in that file. If I remove the build tag, I start getting diagnostics. Oddly enough, if I add the tag back, I still get diagnostics. Perhaps there's some caching happening then?
It would be great to have completion and diagnostics for every file I'm editing. I imagine this might be difficult for arch tags and such, but it would be good to customize this. For example, golangci-lint lets you set build tags to pass when running it.
