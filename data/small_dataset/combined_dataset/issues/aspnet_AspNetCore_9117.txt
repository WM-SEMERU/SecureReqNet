[Blazor server-side] Better server-side limits



We rely on signalr for handling delivery and order of messages.
Currently we continue rendering when a client disconnects in case the client connects back and simply queue pending batches.
We should have a limit on the number of batches that we are willing to produce once a client disconnect and "pause" the rendering
after that.

Pausing the rendering process means:

We stop processing the render queue and instead we place render requests into a separate pause queue.
We process the pause queue only when the client reconnects (by dispatching the paused elements into the regular queue).
When a component requests a new render:

We place it on the queue if there is no existing pending request for that component.




We replace the old render request with the new one if it is already on the queue.


Pausing the rendering has the following advantages:

We don't keep adding batches and increasing the consumed memory as a consequence.
We don't do unnecessary work when the client is not connected.
We limit the memory consumed per client to at most the number of components rendered in the app.
We can pause the rendering during prerendering to produce the output without buffering it before.



