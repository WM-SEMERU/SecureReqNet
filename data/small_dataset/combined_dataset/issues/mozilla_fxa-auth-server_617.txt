Integrate npm-shrinkwrap validator for possibly vulnerable modules


This is just a placeholder...
Re: http://blog.nodesecurity.io/post/75342048303/new-feature-validate-modules-with-npm-shrinkwrap
Comments: https://twitter.com/adam_baldwin/status/444163784794329088
Adam Baldwin (@evilpacket) is working on an easier to use solution.
Currently I can get something crude working if I add this to package.json's scripts block:
"shrinkwrap-validate": "curl -X POST https://nodesecurity.io/validate/shrinkwrap -d @npm-shrinkwrap.json -H \"content-type: application/json\" --insecure"

And then we could write a Grunt task which uses child_process.spawn() to call npm run shrinkwrap-validate and throw errors if the returned JSON is a non-empty array. The following works, but I'd rather wait to see what Adam's solution is and use that instead of my janky homegrown solution below:
// curl -X POST https://nodesecurity.io/validate/shrinkwrap -d @npm-shrinkwrap.json -H "content-type: application/json"

var spawn = require('child_process').spawn;

var shrinkwrap = spawn('npm', ['run', 'shrinkwrap-validate']);

shrinkwrap.stdout.on('data', function (data) {
  'use strict';
  data = JSON.parse(data.toString());
  data.forEach(function (module) {
    console.log(module.title);
  });
});
Ultimately, I'd like this to end up in a Grunt task which can fail the build if one of the modules is found to have a vulnerability, since that's pretty lame -- and the world is a scary, scary place.
