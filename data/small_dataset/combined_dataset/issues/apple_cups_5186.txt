squash non-UTF-8 strings into ASCII on plain IPP level


Currently if users submit jobs with non UTF-8 strings, these invalid strings will be detected in
ippValidateAttribute, and the job will be rejected.
Specifically for a non-UTF-8 requesting-user-name this happens with commit 49fa498
The scenario of users submitting jobs with a non-UTF-8 requesting-user-name has been observed in production systems. These users would not want their jobs to be rejected obviously.
Is it possible to implement squashing / conversion of such non-UTF-8 strings into ASCII? This way jobs
with such string can proceed. E.g. when cupsd receives a sequence of bytes that are not UTF-8, all non-ASCII bytes (i.e. all bytes with highest bit set) can be converted (actually "squashed") into an ASCII byte.
Such "squashing non-UTF-8 into ASCII" should probably not be done for all IPP values cupsd receives. For example print queue names and default print job option values that are non-UTF-8 should not be changed, because than cupsd would be guessing valid print queue names and options.
I think that in scheduler/ipp.c ippValidateAttribute() calls and job rejection on invalid string detection happen currently only for:
requesting-user-name
job-name
So for these IPP values and perhaps others that are only informative (i.e. where the actual value does not really matter for processing the print job) cupsd could squash non-UTF-8 into ASCII?
Thoughts / comments?
