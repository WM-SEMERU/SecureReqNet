Column1,Column2,Column3,Column4,Column5,Column6,Column7
Type,Key,Priority,Text,Daniel,David,Decision
Description,FD-755,Medium,A user should be able to use the 3rd Party Feature to ingest a BlackDuck BoM to IP Central as lightweight components.     Acceptance Criteria  Build similar functionality to the direct push of Corona BoM to IPC  Should be created as SL and Plugin at the same time(no conversion by separate team member),non-SR,SR,
Description,FD-748,Medium,A new or seasoned user should be able to visit the FAST SACP Wiki to find information on how to set up the CSB CICD Report and view a video demo as well.     DoD:    Updated Wiki page for CSB CICD Report  All language should be consistent (always CSB CICD Report).   Updated Demo video uploaded to a wiki page. It should be attached as a file and embedding via box.  Documentation and demo should be available in github as well  Please ensure that all links in the below document are correct for this story;  Due date of Friday November 2nd,non-SR,non-SR,
Description,FD-747,Medium,A new or seasoned user should be able to visit the FAST SACP Wiki to find information on how to set up the Static Scan feature and view a video demo as well.     DoD:    Updated Wiki page for Static Scan Feature  All language should be consistent (always Static Scan feature).   Updated Demo video uploaded to a wiki page. It should be attached as a file and embedding via box and link (in blue) added to the release page below  The documentation and demo should also be available in the github repo.  Please ensure that all links in the below document are correct for this story;  Due date of Friday November 2nd,non-SR,non-SR,
Description,FD-746,Medium,A new or seasoned user should be able to visit the FAST SACP Wiki to find information on how to set up the 3rd party feature and view a video demo as well.     DoD:    Updated Wiki page for 3rd Party Feature  All language should be consistent (always 3rd party feature). Call out in the first mentioned of 3rd Party that is was previously called Binary.  Updated Demo video uploaded to a wiki page. It should be attached as a file and embedding via box and link (in blue) added to the release page below  Please ensure that all links in the below document are correct for this story;  Due date of Friday November 2nd,non-SR,non-SR,
Description,FD-733,Medium,"As a consumer of CSB CICD Pipeline Edition, I want to consume a stable version of the shared library, and not have my pipelines break. At the same time I want to make use of updated functionality as it becomes available.    Detail:    There is already a ï¿½ï¿½greenï¿½ï¿½ tag that is maintained automatically for commits that pass the unit tests, however we donï¿½ï¿½t have great code coverage, so green is not a guarantee of reliability. A ï¿½ï¿½latest-releaseï¿½ï¿½ tag should be maintained in git, and updated to refer to the most recent official release.    That way consumers of the library can either consume specific release, the latest release, or ï¿½ï¿½greenï¿½ï¿½ for bleeding edge integrations    e.g. The CICD repo can be updated to include a release build job (or extra optional step to the existing Jenkins file) that creates a new release tag from stable master build , and also updates the ï¿½ï¿½latest-releaseï¿½ï¿½ tag to the most recent release.        Acceptance Criteria:    An automated release process is put in place that creates a new release tag, and maintains the ï¿½ï¿½latest-releaseï¿½ï¿½ tag.",SR,SR,
Description,FD-731,Medium,"As a Consumer of the CSB CICD Pipeline Edition I do not want my build farm executors to be consumed waiting for external services to finish lengthy tasks as this risks resource starvation    Detail:    At present the wait for Corona Scan in the CSB CICD Pipeline Edition is done in a python script. This does not give Jenkins any visibility that the script is just in an idle loop, and unnecessarily consumes an executor.    Jenkins pipeline supplies a waitUntil step that can be run on the lightweight executor, and does not consume a real ececutor, except during the actual checks.     It does an exponential backoff, so is not constantly polling the external service    Binary Scan is split into a before and after phase (e.g. upload and report), and the wait in the python script removed or allowed to be skipped.    An isCoronaScanComplete pipeline step should be defined that just checks if the corona scan is complete returning true if it is, false otherwise    A waitForCoronaScan step taking a maximum timeout, and a node label should be defined that calls isCoronaScanComplete inside a waitUntil block, allocating a node with the appropriate label for running the check.        Pseudo code:    def waitForCoronaScan (scan, duration, label) {    timeout (duration) {    waitUntil {    node (label) {    isCoronaScanComplete (scan)    }    }    }    }        Acceoptance Criteria:    isCoronaScanComplete pipeline step is implemented and unit tested.    waitForCoronaScan pipeline step is implemented and unit tested.    Integration test run against an actual Corona scan with a short timeout, to verify the timeout works    Integration test run against an actual Corona scan with a long timeout, to verify the backoff and node allocation/release works as intended",SR,SR,
Summary,FD-730,Medium,Filter for which images are picked up,non-SR,non-SR,
Description,FD-729,Medium,User should have information on separate errors that are thrown by Binary Feature. User should be able to see where and why something is failing.     DoD:  Detailed and informational error handling available in Binary Feature,SR,SR,
Summary,FD-728,Medium,3rd party Feature unit testing,SR,SR,
Description,FD-727,Medium,"1. IP Central Upload should handle same component with multiple versions:    As a Consumer of the CSB CICD Pipeline Edition I need the IP Central sync to be able to handle where my image contains the same component with multiple different versions included.    Detail:    In builds itï¿½ï¿½s possible to have the same third party component present with multiple different versions. At present this is not handled correctly by the IP Central script, it only includes one of the versions, and on subsequent runs may generate erroneous add or remove actions because the version itï¿½ï¿½s looking at is not present.    The script should have unit test written to test this functionality (and ideally to preserver other functionality)    A fix should be made so that the test passes, and all current versions of a component get registered, and all non-current versions get removed.        Acceptance Criteria    Implementations is made, and unit tests pass    A service with this situation is found (WebExTeams feature service is a candidate, at time of writing it has several Multiple Version assets in its Bom    The IP Central scan for that service is triggered and the IP Central record confirmed to now include all versions of its multiple version assets.",SR,SR,
Description,FD-726,Medium,"More than just project name, collaborating with Vinay and Rory on things we might want to include in this.",non-SR,non-SR,
Summary,FD-722,Medium,Corner Case and Unit testing for Direct Upload to IPC,SR,non-SR,
Description,FD-716,Medium,"Essentially the work created in 655 needs to accommodate for any changes Aniketh makes to his code and be fully converted to shared libraries.     DoD  Final product from Aniketh, fully converted and functional in Shared Libraries format.",non-SR,SR,
Summary,FD-658,Medium,Comparison of IP Central projects using automation versus manual versus project created in FD-655,SR,non-SR,
Description,FD-657,Medium,"FAST Team should have expected outcomes, response times, communication, and information from the Corona team when issues arise in the CSB CICD Pipeline Edition plugin related to the Corona integration in the Binary Feature.     DoD:  Service Level Agreement documentation to reference or escalate from in future  Agreement and commitment from both FAST and Corona on SLA",SR,SR,
Description,FD-656,Medium,Compare and contrast the manual flow of IPCentral versus the automation the FAST team can provide.,non-SR,non-SR,
Description,FD-655,Medium,"User should be able to push components into IP Central as lightweight, through direct upload of the Corona generate BoM through IPC APIs (compared to pushing the results from Corona specifically).   Replicate BD work in Corona feature  Take the Bom fetched from Corona, and use the scripts to directly upload the components to IP Central.  Rename ""Synchronize assets from build to IP Central"" to ""Synchronize assets from build to IP Central via Corona""  Create a checkbox in the plugin config that says ""Direct upload to IP Central"" which is an alternative option to the ""Synchronize assets from build to IP Central via corona""        DoD  Lightweight projects and components correctly pushed to IP Central  Configuration based on multiple team and use case requirements",non-SR,non-SR,
Summary,FD-606,Medium,EngIT Support and Tracking,SR,non-SR,
Summary,FD-605,Medium,Integrate Binary Plugin in 5+ Teams Pipelines,SR,non-SR,
Description,FD-576,Medium,"Download the BoM from BlackDuck, and use this BoM artifact to upload to IPCentral. Leverage the python script we got from one of the Spark team (Sanjana gave this to us).    Extend the IPCentral feature to go this way or the Corona auto registration way.",non-SR,SR,
Summary,FD-575,Medium,"[Placeholder Story] Aggregator Consumes BlackDuck Metrics (BoM, CVE Score, Licensing Risk)",non-SR,non-SR,
Description,FD-574,Medium,"Let's analyze the plugin and see how much functionality of it is similar to the Binary Plugin we built, and see how we can extend it to match.    We should have the Bill Of Material, CVE Report, Licensing Reports downloaded into our build artifacts, and the appropriate Actions defined so that users can view their reports for a given build.",SR,non-SR,
Description,FD-553,Medium,Binary PlugIn demo to the Streamline team,non-SR,non-SR,
Description,FD-491,Medium,"Processing the CVE report fetched in the plugin, and generating the sectional score based on the scoring model.   The output of the function should be in JSON so that it can be read by the final report generation function.",SR,SR,
Summary,FD-446,Medium,Binary Plugin - JIRA Integration,non-SR,non-SR,
Summary,FD-444,Medium,Binary Plugin - Update IP Central Documentation,non-SR,non-SR,
Summary,FD-442,Medium,Binary Plugin - Deploy Plugin in 2+ Spark Team Pipeline,non-SR,non-SR,
Summary,FD-410,Medium,Binary Plugin - Add IP Central synch,SR,non-SR,
Description,FD-407,Medium,- Spark team is primary,non-SR,non-SR,
Summary,FD-406,Medium,Binary Plugin - Package Current Plugin Deliver to Spark Team,non-SR,non-SR,
Description,FD-405,Medium,- Connect with Corona team with current tooling state.   - IP Central integration.,non-SR,non-SR,
Summary,FD-391,Medium,Discuss end-user SLA agreement & bug-tracking with Corona team with respect to Corona plugin.,SR,SR,
Description,FD-390,Medium,"Find out how soon BlackDuck (BD) will be integrated within Corona.  If ""long pole"", offer that SACP team will help accelerate by providing results to Corona and ask Corona team to consolidate BD results.",non-SR,SR,
Description,FD-389,Medium,"Reschedule meeting with Rory Moynihan, and add Shane Keville, and Jason Swager (Jason is from platform team) regarding:    Norad  Cloud Native tools  SACP/Cisco Spark Base (CSB) integration:  Appears not to be part of our present WDM efforts  Nevertheless, seems the best place for SACP to target efforts to maximize adoption of security plugins and benefit more users",SR,non-SR,
Summary,FD-378,Medium,Documentation for Binary Plugin,non-SR,non-SR,
Summary,FD-350,Medium,Implement a Jenkins Plugin for Corona Scan,non-SR,non-SR,
Description,FD-344,Medium,DoD: try out their python code. Compare theirs and ours (capability wise) in a document in Jive.,non-SR,non-SR,
Description,FD-342,Medium,"Setup meeting with one of several teams that use the SP CTO CI/CD security plugins to learn about their experiences with such plugins to ascertain viability as ""leveragable"".",SR,SR,
Description,FD-341,Medium,"Setup meeting with one of several teams that use the SP CTO CI/CD security plugins to learn about their experiences with such plugins to ascertain viability as ""leveragable"".",SR,SR,
Description,FD-335,Medium,For Corona and BlackDuck.,non-SR,SR,
Description,FD-330,Medium,- Check if Corona APIs BOM  - Licensing with BlackDuck team,non-SR,SR,
Summary,FD-319,Medium,Analyze Binary Results from All the Pilot Teams and create an Analysis Document - Security Scoring,SR,SR,
Summary,FD-315,Medium,Spike: Port the existing Corona Binary Code Plug-in to Java,non-SR,non-SR,
Summary,FD-289,Medium,Corona and IP central Enhancements with STO teams,non-SR,non-SR,
Summary,FD-286,Medium,Create functionality to get diff in BoM (between Corona scan and IP Central),non-SR,non-SR,
Summary,FD-285,Medium,Explore IP Central APIs to get project details,non-SR,non-SR,
Summary,FD-284,Medium,BlackDuck Poc Setup in the CICD environment (comparison against Spark and Streamline Corona results),non-SR,non-SR,
Description,FD-283,Medium,DoD  1. Get access to jenkins and SCM  2. Get access to Cisco NFS location and access it from jenkins  3. Get corona ProductID and Ipcentral ID for the Team  4. Corona integration from Jenkins  5. Document progress in Pilot Teams Jive Page,SR,non-SR,
Summary,FD-200,Medium,Write Jenkins plugin to trigger Corona scan,non-SR,non-SR,
Description,FD-157,Medium,DoD    1. Gather details on the existing Spark pipeline and identify binary code analysis automation opportunity.  2. Leverage Corona/AppCheck/UCCE plugin to get BoM.  3. Integration with IpCentral.,non-SR,non-SR,
Description,FD-156,Medium,DoD    1. UCCE plugins is implemented in the test CI-CD pipeline.  2. PlugIn is able to integrate with AppCheck/Corona  3. Steps are documented .,non-SR,non-SR,
Description,CIC-241,High,"As a PO, I would like to have BlackDuck integration capability design similar to Corona integration, decouple BlackDuck scan and IPCentral registration of BlackDuck scan results     Acceptance Criteria :   1. BlackDuck scan and IPCentral registration of BlackDuck scan results are enabled via separate groovy calls.",non-SR,SR,
Description,CIC-226,High,"As a user of the 3rd party feature, if the session times out and fails, I want the image to be deleted from the Corona queue as well.     Acceptance Criteria:  1. Review with Brad to get the delete api  2. Document what information we can glean from the queue in that api",SR,non-SR,
Description,CIC-221,High,"As a PO, I want all Release 1.0 documentation internally reviewed to confirm it is complete.     Acceptance Criteria:   -Consider all enhancements, added capabilities, and configuration options to make sure there are no gaps.   -Confirm the documentation can be followed by tenants   -Confirm the demo video makes sense",non-SR,non-SR,
Description,CIC-213,High,"As a PO, I want our Release 1.0 documentation to be validated by the associated engineer, before sending it off to peer review.     Acceptance Criteria:   Review and Update Documentation   Review and Update the Demonstration Video",non-SR,non-SR,
Description,CIC-203,High,"As a PO, I would like to enable hash check and capture last scan date for the 3rd party libs/binaries for Corona scan so that if hash check matches and last scan date is less than rescan duration, then it's very likely that the 3rd party libs/binaries are intact and we don't have to trigger the scan again.    Acceptance Criteria:  1. Enable hash check on 3rd party libs/binaries in shared lib code  2. Provide configurable setting to enter rescan duration (example 1 week etc)  3. If hash check matches and last scan date is < rescan duration, then don't trigger the scan",non-SR,non-SR,
Description,CIC-184,High,"As a user of the CSB CICD pipeline edition, I would like to merge my TPL list generated by Maven plugin with the BOM taken from 3rd party scan and push to IPC.     *Direct upload used here can only work for Lightweight     Acceptance Criteria:   Consolidate the list of TPL with version, name, and license   Verify that results are appearing in IPC",non-SR,SR,
Description,CIC-183,Critical,"As a PO, I would like to enable binary upload / scan capability as part of end-to-end solution so that users can not only pull the scan reports but also should be able to upload binaries for scan in BD hub as the first step     Acceptance Criteria :   1. CSB CICD pipeline edition - BlackDuck feature (plugin and shared lib) should have the capability to scan source code and supported binaries in BD hub, this is in addition to the current capability of pulling the scanned results from BD hub and push it into infosec Jira.",non-SR,SR,
Description,CIC-182,Critical,"As a PO, I would like to explore the possibility of using blackduck - jenkins plugin/script to upload binaries for scanning in blackduck hub as well so that we can cover end-to-end capability for enabling 3rd party lib scanning feature using BlackDcuk     Acceptance Criteria :   1. Validate Blackduck - jenkins plugin/script to upload binaries for scanning in blackduck hub   2. Based on step # 1, create a reference architecture to enable end-to-end solution that not only upload binaries in BD hub for scanning purpose but also pull the the scanned results and push it to infosec Jira.",non-SR,SR,
Description,CIC-177,Medium,"As a user of the BD capability of the CSB CICD pipeline edition, I would like accurate and detailed documentation and a demonstration video to help me understand the capability better and how to implement it.     Acceptance Criteria:   Create wiki page on the CICD wiki to document the capability   Create a demonstration video and make it available on the CICD wiki",non-SR,non-SR,
Description,CIC-128,High,Investigate and extract the CVE information from BlackDuck Projects and utilize this information for generating CSB reports.,SR,SR,
Description,CIC-115,Medium,"As a service owner, I would like to view aggregated report and register the findings in IPCentral and publish PSB-JSON format report in InfoSec Jira project so that it can facilitate CATO review/approval process    Acceptance Criteria:  1. Apply CSB scoring mechanism on the findings and print aggregated report on Jenkins interface (CSB-CICD Report)  2. Translate BlackDuck report output into PSB-JSON format and publish in InfoSec Jira project",non-SR,SR,
Description,CIC-103,Medium,"As a user, I would like to use the supplier information provided by BlackDuck BoM for IP Central LW registration.    Acceptance criteria:  Investigate BoM, is the information complete?  If the information is complete and acceptable:  --Supplier information is enabled for IP Central LW registration",non-SR,SR,
Description,CIC-92,Critical,As a WebEx pipeline I want to re-use the global Idï¿½ï¿½s authentication token if its active.ï¿½   Acceptance Criteria:   ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ Update scripts to accommodate the ability to re-use global credentials token(if active) for Corona API calls.,SR,SR,
Description,CIC-83,Medium,"As a consumer of SAP plugin/ shared library, I would like to have an option of providing an NFS Location from where to pick up my build images/artifacts to run the third party scan.     This would be an alternative to the Master Branch/Project field we already have in our plugin. So instead of picking up artifacts from a job/pipeline in Jenkins the user provides an NFS location where the image is already available, the plugin/sl uses that image to run the scan and bring the results back to Jenkins.     Acceptance criteria:   1. A field to provide the image location(NFS), should be able to provide multiple images.   2. Master Branch field is required right now when this option is used the Master Branch field would not be used so in this use case it should not be a required field.   3. Manual testing is done to make sure that the plugin/sl is working after this option is added.   4. change all internal name references from Binary to 3rd party scanning.   5. Add help information in plugin, update the help text file for shared library and update the Readme in Github, ICX page.",non-SR,SR,
Description,CIC-78,Medium,"As a Consumer of the CSB CICD Pipeline Edition,   I do not want my build executors to be consumed waiting for external services to finish lengthy tasks as this risks resource starvation.     In 3rd Party Library Scanning, the current implementation calls a python sleep function to wait and poll for the scan to complete, this keeps the Jenkins executor occupied. The suggested implementation from the Spike story is to use 'waituntil' function that frees up the executor till the next time the scan status is polled.   The implementation guide:    Acceptance Criteria:   1. changes are made in both Plugin and Shared library implementation such that the execution of the plugin does not break. i.e. Manual end to end testing must be performed to ensure that the scans are running and that the Jenkins executor is free when the Job is waiting for the scan to complete on Corona",SR,SR,
Description,CIC-68,Medium,"A user should be able to use the 3rd Party Feature to ingest a BlackDuck BoM to IP Central as lightweight components.     Acceptance Criteria   Build similar functionality to the direct push of Corona BoM to IPC   Should be created as SL and Plugin at the same time(no conversion by separate team member)     Aniketh:   Completed LW Capability for Black Duck Plugin. And Identified the code changes for creating SL.     To-Do for SL:   1. Create Python and Groovy classes for BD LW registration.   2. Add **kwargs to python class, so that we can call this keyword method from the groovy file.   3. For config options retrieve the hub credentials similar to Corona/IP central credentials. Additionally, pipeline arguments need to pass BD Hub URL for retrieving the report.   4. Add publish IP central status view.   5. Add supplier info",non-SR,SR,
Description,CIC-64,Medium,"*Dependency on Approval from Jason Swager*  As a WebExTeams consumer of the CSB CICD Pipeline Edition I need to generate and archive a THIRD-PARTY.txt file for the deploy artifact of my service, so that it can be supplied as input the the IP Central stage of the security automation.    Detail:  Modify the CSB (Cisco Spark Base, not Cisco Security Buddy) pom.xml to include the needed plugins to run the step mvn license:add-third-party  Modify the sparkPipeline to generate the license for the service. This should be behind a flag so as not to break services that have not yet consumed the updated CSB.        Acceptance Criteria  The trial pipelines (hello-world, acl, feature) are updated to consume the CiscoSparkBase version with the changes.  The trial pipelines supply the THIRD-PARTY.txt to the JSON converter, and the IP Central step.  The trial pipelines IP Central record is updated with the more accurate vendor/license/version information  Update the process documentation so that WebExTeams teams know how to enable the flag for this.",non-SR,SR,
