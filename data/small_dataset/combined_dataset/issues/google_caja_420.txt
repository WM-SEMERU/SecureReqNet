enforceMatchable() in caja.js doesn't ensure that a non-regexp is a string.


Original issue 420 created by erights on 2008-06-09T02:03:46.000Z:
enforceMatchable() in caja.js is defined as
/**

Verifies that regexp is something that can appear as a
parameter to a Javascript method that would use it in a match.
<p>
If it is a RegExp, then this match might mutate it, which must
not be allowed if regexp is frozen.
*/
function enforceMatchable(regexp) {
if (regexp instanceof RegExp) {
if (isFrozen(regexp)) {
fail("Can't match with frozen RegExp: ", regexp);
}
}
}

It is used in the call-handler-wrapper around various built-in string
methods (replace, search, split) to ensure that these built ins do not
mutate a frozen regexp.
However, the above code does not ensure that, if the value isn't a regexp,
that it is instead a string. If it is neither, but its valueOf() is a
regexp, then this might be a way to evade the test and get the primitive to
mutate a supposedly frozen regexp object.
Since regexps should be considered constructed objects, it is unclear
whether it is currently possible for Caja code to freeze one. If it is,
then this bug must be fixed. If we decide that regexps can't be frozen, the
enforceMatchable becomes unnecessary and should be removed.
