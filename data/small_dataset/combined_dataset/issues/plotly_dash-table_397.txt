[WIP] Improve Filtering



isolate lexemes from lexicons and grammar/syntax
support multiple lexicons (single column, multiple columns, full query)
allow lexicons termination and validation logic for lexemes based on previous lexeme(s) (essentially a deterministic finite state-machine with these state transitions -- copy of table below)

Basics

 enable short filter criteria on column filters (e.g. <binary op> <expression>, <unary op>, <expression>)
 update operand syntax to expect {field} instead of field or "field", [{}] can be escaped with {\\{\\\\}field}, see unit tests for details
 additional unit tests on all lexicons to test syntax / edge cases
 refactor multi column AST's transformation into and from single column AST
 rework expression lexeme to be consistent with changes made to operand lexeme
 increase lexicon's granularity (one lexeme per binary operation, etc.) -- will make handling the structured cases simpler

Plus Plus

 support column types implicitly
 expose query as structure (lhs, rhs, pivot, block, etc.) on derived prop -- consumable programmatically
 support for contextual conditionals (e.g. if in style_**_conditional -- allow expressing column_type, row_id, etc. as a filter instead of a structure)

Items with x are valid, nest refers to the level of nesting of the query up to that point -- each block open (open parentheses) increases the nesting by 1, each block close reduces the nesting by 1.

