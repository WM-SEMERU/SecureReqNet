Getting started guides lack security, leading to information leaks and open remote code execution


Steps to reproduce (as per the guide):

Set up cluster:
env KUBERNETES_PROVIDER=ubuntu nodes="<nodes>" role="<roles>" NUM_NODES=<num> SERVICE_CLUSTER_IP_RANGE=<ip range> FLANNEL_NET=<flannel net> ./kube-up.sh
(note: I used public IP addresses here since I'm deploying to a cloud and don't have a host within it, I think this is a reasonable use case)
Set up addons:
cd ubuntu && env KUBERNETES_PROVIDER=ubuntu nodes="<nodes>" role="<roles>" NUM_NODES=<num> SERVICE_CLUSTER_IP_RANGE=<ip range> FLANNEL_NET=<flannel net> ./deployAddons.sh
On a completely different host, unrelated to the setup host (i.e. doesn't have ~/.kube/config and the HTTP basic auth credentials therein):
kubectl -s <URL from setup> create -f examples/guestbook/all-in-one/guestbook-all-in-one.yaml
Again, on a completely different host, access the UI at http://<url>/ui/ and create a new service.

Expected behaviour: Access is denied as kubectl is being run on an unauthenticated host on the public internet, with no credentials. Same goes for the UI.
Actual behaviour: The guestbook service is created on the cluster.
