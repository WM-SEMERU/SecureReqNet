gopls doesn't write its log


What version of Go are you using (go version)?
$ go version
go version go1.12.1 linux/amd64

Does this issue reproduce with the latest release?
Yes.
What operating system and processor architecture are you using (go env)?
go env Output$ go env
GOARCH="amd64"
GOBIN=""
GOCACHE="/home/bstaletic/.cache/go-build"
GOEXE=""
GOFLAGS=""
GOHOSTARCH="amd64"
GOHOSTOS="linux"
GOOS="linux"
GOPATH="/home/bstaletic/go"
GOPROXY=""
GORACE=""
GOROOT="/usr/lib/go"
GOTMPDIR=""
GOTOOLDIR="/usr/lib/go/pkg/tool/linux_amd64"
GCCGO="gccgo"
CC="gcc"
CXX="g++"
CGO_ENABLED="1"
GOMOD=""
CGO_CFLAGS="-g -O2"
CGO_CPPFLAGS=""
CGO_CXXFLAGS="-g -O2"
CGO_FFLAGS="-g -O2"
CGO_LDFLAGS="-g -O2"
PKG_CONFIG="pkg-config"
GOGCCFLAGS="-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build434682588=/tmp/go-build -gno-record-gcc-switches"

What did you do?
This is basically a continuation of #31194. This time I'm having troubles getting to gopls' log.
Steps to reproduce:

Follow all but the final two steps in #31194 (basically, setup ycmd and open a go file).
Currently, the gopls command line is gopls -logfile /tmp/gopls_$PID_$RANDOM.log

The file and its name is generated by ycmd.


If the log path is hardcoded (to somthing like /home/bstaletic/go.log), the empty log file gets created but nothing is written to the file.

What did you expect to see?
Some content in the log, to help me debug things.
What did you see instead?
Empty log whose size was 0bytes.
