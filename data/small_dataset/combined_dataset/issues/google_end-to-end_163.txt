RSA public exponents not validated


From coruus@gmail.com on August 02, 2014 22:26:33
Is this report about the crypto library or the extension? Library.
(Note: This is a check that, at least as of the last beta of 2.1.0 I checked, GnuPG does not do. If you accept this patch, I'll try to nudge some Gnu.)
What is the security bug? RSA public key exponents are not validated.
How would someone exploit it? DoS, perhaps (see https://www.imperialviolet.org/2012/03/16/rsae.html). Other attacks that don't violate unforgeability. Various e=3 attacks that do, for some potential library users. (The last is the most significant concern, since you've -- of necessity -- implemented PKCSv1.5.)
Patch attached.
Stats from SKS keyserver dump to justify:
total RSA keys = 1,633,117
of keys e
1,591,764 5
34,065 41
2,011 11
1,818 3
842 17
484 35
164 85
19 7
35 and 85 have been excluded because they aren't prime. 7 would be fine, but only 19 keys use it.
65537 doesn’t show up at all in SKS, but it’s widely recommended for RSA, generally: for other cryptosystems, it’s the most frequently occurring public exponent. (So it’s desirable to include it in case someone rips out the RSA code to implement something else; if the exponent check fails, someone’s first impulse might be to remove the check completely.)
(The complete list of RSA public exponents occurring in SKS is attached as well.)
Attachment: rsa-pub-e.patch rsae-count.txt
Original issue: http://code.google.com/p/end-to-end/issues/detail?id=126
