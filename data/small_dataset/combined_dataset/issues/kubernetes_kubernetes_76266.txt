Source Code Read Question: what is kube-proxy run method do?


Forgive me.I do not have a google/facebook account logging in stackoverflow.
I have read the kube-proxy code,since i am new to golang.There is a question:
In kube-proxy code new a ProxyServer:
type ProxyServer struct {
Client                 clientset.Interface
EventClient            v1core.EventsGetter
IptInterface           utiliptables.Interface
IpvsInterface          utilipvs.Interface
IpsetInterface         utilipset.Interface
execer                 exec.Interface
Proxier                proxy.ProxyProvider
Broadcaster            record.EventBroadcaster
Recorder               record.EventRecorder
ConntrackConfiguration kubeproxyconfig.KubeProxyConntrackConfiguration
Conntracker            Conntracker // if nil, ignored
ProxyMode              string
NodeRef                *v1.ObjectReference
CleanupAndExit         bool
CleanupIPVS            bool
MetricsBindAddress     string
EnableProfiling        bool
OOMScoreAdj            *int32
ResourceContainer      string
ConfigSyncPeriod       time.Duration
ServiceEventHandler    config.ServiceHandler
EndpointsEventHandler  config.EndpointsHandler
HealthzServer          *healthcheck.HealthzServer
}
But the calling of this struct in cmd is Run() method:
func (o *Options) Run() error {
defer close(o.errCh)
if len(o.WriteConfigTo) > 0 {
return o.writeConfigFile()
}
proxyServer, err := NewProxyServer(o)
if err != nil {
	return err
}
o.proxyServer = proxyServer
return o.runLoop()

}
// runLoop will watch on the update change of the proxy server's configuration file.
// Return an error when updated
func (o *Options) runLoop() error {
if o.watcher != nil {
o.watcher.Run()
}
// run the proxy in goroutine
go func() {
	err := o.proxyServer.Run()
	o.errCh <- err
}()

for {
	select {
	case err := <-o.errCh:
		if err != nil {
			return err
		}
	}
}

}
I have not found any Run method implement in struct ProxyServer.
So my question is what is the action when calling Run method on struc ProxyServer
