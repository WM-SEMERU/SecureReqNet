Display better security error messages in profiler logs


In short:
In case the entity class that is referenced in security.yml as provider is not implementing UserInterface and \Serializable (as it should), there is no trace of the problem in Profiler logs, beyond the generalized "safe" (and intentionally vague) message.
More details:
Symfony docs on form login setup provide us by default with a message shown in a template:
{{ error.messageKey|trans(error.messageData, 'security') }}
which is generally fine, and once you see there's a problem, you can go ahead and echo error.message to get a meaningful "The user provider must return a UserInterface object." message.
However, I don't think it should be unreasonable to assume when only a "safe" message is printed, that in dev environment we'd also get the more useful and meaningful error.message logged in Profiler logs.
As it stands it's just: "Authentication request could not be processed due to a system problem." in logs, and a newbie, like me, will be confused by the lack of anything more detailed in the Profiler logs.
Proposed solution:
The idea would be to include "uncensored" error.message in Profiler logs in dev environment, when it's appropriate, so that the general assumption of "if there's a problem, useful info should be found in the Profiler logs" would hold in this case as it does in so many others.
