[Security/Http] Make UserValueResolver accept any subtype of UserInterface





Q
A




Branch?
master/4.3


Bug fix?
no


New feature?
yes


BC breaks?
no (not sure)


Deprecations?
no


Tests pass?
yes


License
MIT



With a controller we can inject the UserInterface object like this:
public function index(Request $request, UserInterface $user = null): Response
{
    // ...
}
However, this has a drawback: it hides the domain user for actions that need the right type-hint, else, it means we're "blind", which means that we must add if ($user instanceof MyUserObject) { /* ... */} to execute our logic.
The goal of this PR is to allow this:
use App\Entity\User;
// ...
public function index(Request $request, User $user = null): Response
{
    // ...
}
This is just a basic suggestion that is quite straightforward (so if it's not suitable, feel free to tell me, if you know the component better than me üëç )!
If it's not possible, I also thought about creating a SecurityTokenValueResolver, also probably straightforward üëç (will probably work on a separate PR for this)
