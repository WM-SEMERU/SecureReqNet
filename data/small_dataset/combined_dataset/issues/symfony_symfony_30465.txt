DI: different instances of the same service during a single execution?


Symfony version(s) affected: 3.4.22
Description
I found out that it is possible to get different instances of the same service (eg: entity manager) during a single execution.
How to reproduce
class MyDoctrineSubscriber implements \Doctrine\Common\EventSubscriber
{
    protected $myService;

    public function __construct(MyService $myService)
    {
        $this->myService = $myService;
    }

    public function preFlush(PreFlushEventArgs $args)
    {
        // an instance of the entity manager
        $entityManager = $args->getEntityManager();

        $this->myService->doSomething();
    }

    public function getSubscribedEvents()
    {
        return [
            Events::preFlush,
        ];
    }
}


class MyService
{
    protected $entityManager;

    public function __construct(EntityManagerInterface $entityManager)
    {
        // another instance of the same entity manager (!?)
        $this->entityManager = $entityManager;
    }
	
    public function doSomething()
    {
        $myEntity = new MyEntity();

        // entity is not persisted as persist and flush are called on different instances
        $this->entityManager->persist($myEntity); 
    }
}

Is that an expected behavior?
