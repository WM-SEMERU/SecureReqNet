When an account is disabled in LDAP it is rightly blocked from logging in to the GitLab web interface as well as performing any actions on Git repositories via SSH. However, the user's SSH public key is not removed from the GitLab account's authorized_keys file.

While this isn't in itself a security issue, in that my brief testing appears to confirm that no access to repositories is provided for disabled accounts, I still think it's undesirable, as it increases the potential attack surface of GitLab by allowing disabled accounts to open an authenticated SSH session to the server, from which they could potentially exploit vulnerabilities that may be found in gitlab-shell. It also of course results in a increasingly large authorized_keys file if disabled accounts aren't manually pruned from GitLab. For many organisations I've worked with that use GitLab, while the web interface isn't publicly accessible, the SSH server is, allowing users to remotely pull/push to Git repositories as well as facilitating easier integration with production infrastructure. As such, I think going out of our way to minimise the attack surface of GitLab as exposed via SSH is worthwhile.

I'm not sure how best to implement this; there's several options. At least initially, some sort of rake task that could be run on-demand or via a Cron task for users that care might be relatively easy to implement? Some more sophisticated and automated solution could be delivered in future.