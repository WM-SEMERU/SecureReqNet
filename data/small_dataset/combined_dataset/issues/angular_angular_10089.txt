Is it really necessary to put track|src in the resource url security context?


I'm submitting a ...  (check one with "x")
[ ] bug report
[X ] feature request
[ ] support request => Please do not submit support request here, instead see https://github.com/angular/angular/blob/master/CONTRIBUTING.md#question

What is the motivation / use case for changing the behavior?
I was trying to create a component that includes a <video> element where you can bind to the various string URLs from the outside (mp4, webm, poster, vtt). So I bound to <video [poster]="">, <source [src]=""/>, and <track [src]=""/>.
Current behavior
The first two work as expected (they are in the URL security context), the latter fails at runtime, because track|src is in the Resource URL security context which doesn't allow bare strings.
Expected/desired behavior
For consistency and ease of use, I'd love to see the track|src in the URL security context.
Please tell us about your environment:

Angular version: 2.0.0-rc.4
Browser: [all | Chrome XX | Firefox XX | IE XX | Safari XX | Mobile Chrome XX | Android X.X Web Browser | iOS XX Safari | iOS XX UIWebView | iOS XX WKWebView ]
Language: [all | TypeScript X.X | ES6/7 | ES5 | Dart]

The only security problem I can see (though I'm not even remotely an expert) are the embedded styles in a VTT file (background-image: url(alert('XSS'));, however I'm not sure if these types of attacks are even possible here. The specification itself claims to have no XSS security considerations other than implementation errors.
