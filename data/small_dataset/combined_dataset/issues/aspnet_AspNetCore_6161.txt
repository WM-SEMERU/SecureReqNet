It is impossible to set a failure exception in an AuthorizationHandler like you can in an AuthenticationHandler


Is your feature request related to a problem? Please describe.
At the moment it is impossible to set a failure exception in an AuthorizationHandler like you can in an AuthenticationHandler.
Consider this code:
var policy = await context.HttpContext.RequestServices.GetRequiredService<IAuthorizationPolicyProvider>().GetPolicyAsync(_policyName);
var policyEvaluator = context.HttpContext.RequestServices.GetRequiredService<IPolicyEvaluator>();
var authenticateResult = await policyEvaluator.AuthenticateAsync(policy, context.HttpContext);
var authorizeResult = await policyEvaluator.AuthorizeAsync(policy, authenticateResult, context.HttpContext, context);
When doing Resource-based authorization  you have no idea why AuthZ failed.
For AuthN I can just do authenticateResult.Failure
Describe the solution you'd like
Make the pattern the same for Failure for both AuthorizationHandler and AuthenticationHandler.
Describe alternatives you've considered
I can see by the intent of the design that you don't want custom responses for ForbidResult() and ChallengeResult() - but at a minimum giving devs doing Resource-based authorization an option to inspect failure so they have an option to set a appropriate response body to the user.
Not doing this devs are inventing weird and wonderful ways of setting failures in AuthorizationHandler's, which is dangerous.
