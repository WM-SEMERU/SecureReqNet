fix(platform-browser): Make different SafeValue types incompatible values in TypeScript


Previously, because all SafeValues were empty marker interfaces, users could
accidentally assign safe values into each other:
let myUrl: SafeUrl = ...;
let myHtml: SafeHtml = myUrl;

While this would fail at runtime (safety is enforced based on the values,
independent of TypeScript types), this can lead to very confusing code that
seems to pass around values of one type, which actually is of another type.
This change adds a readonly kind field that makes sure such accidental
assignments are compile time errors.
