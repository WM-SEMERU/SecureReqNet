Unit tests failure in vendor/k8s.io/apiserver/pkg/storage/tests


What happened:
Unit tests are failing with the latest golang(1.12)
root@localhost:~/k8s_ws/src/k8s.io/kubernetes# make check WHAT=./vendor/k8s.io/apiserver/pkg/storage/tests GOFLAGS=-v
+++ [0407 02:15:29] Building go targets for linux/ppc64le:
    ./vendor/k8s.io/code-generator/cmd/deepcopy-gen
Running tests for APIVersion: v1,admissionregistration.k8s.io/v1beta1,admission.k8s.io/v1beta1,apps/v1,apps/v1beta1,apps/v1beta2,auditregistration.k8s.io/v1alpha1,authentication.k8s.io/v1,authentication.k8s.io/v1beta1,authorization.k8s.io/v1,authorization.k8s.io/v1beta1,autoscaling/v1,autoscaling/v2beta1,autoscaling/v2beta2,batch/v1,batch/v1beta1,batch/v2alpha1,certificates.k8s.io/v1beta1,coordination.k8s.io/v1beta1,coordination.k8s.io/v1,extensions/v1beta1,events.k8s.io/v1beta1,imagepolicy.k8s.io/v1alpha1,networking.k8s.io/v1,networking.k8s.io/v1beta1,node.k8s.io/v1alpha1,node.k8s.io/v1beta1,policy/v1beta1,rbac.authorization.k8s.io/v1,rbac.authorization.k8s.io/v1beta1,rbac.authorization.k8s.io/v1alpha1,scheduling.k8s.io/v1alpha1,scheduling.k8s.io/v1beta1,scheduling.k8s.io/v1,settings.k8s.io/v1alpha1,storage.k8s.io/v1beta1,storage.k8s.io/v1,storage.k8s.io/v1alpha1,
+++ [0407 02:16:02] Running tests without code coverage
# k8s.io/kubernetes/vendor/k8s.io/apiserver/pkg/storage/tests
vendor/k8s.io/apiserver/pkg/storage/tests/cacher_test.go:718:3: Fatalf format %t has arg pl of wrong type *k8s.io/kubernetes/vendor/k8s.io/apiserver/pkg/apis/example.PodList
vendor/k8s.io/apiserver/pkg/storage/tests/cacher_test.go:747:3: Fatalf format %t has arg limit1 of wrong type *k8s.io/kubernetes/vendor/k8s.io/apiserver/pkg/apis/example.PodList
vendor/k8s.io/apiserver/pkg/storage/tests/cacher_test.go:761:3: Fatalf format %t has arg limit2 of wrong type *k8s.io/kubernetes/vendor/k8s.io/apiserver/pkg/apis/example.PodList
FAIL	k8s.io/kubernetes/vendor/k8s.io/apiserver/pkg/storage/tests [build failed]
Makefile:184: recipe for target 'check' failed
make: *** [check] Error 1
root@localhost:~/k8s_ws/src/k8s.io/kubernetes#

What you expected to happen:
Tests should pass without any fauilures.
How to reproduce it (as minimally and precisely as possible):
Anything else we need to know?:
Environment:

Kubernetes version (use kubectl version):
Cloud provider or hardware configuration:
OS (e.g: cat /etc/os-release):
Kernel (e.g. uname -a):
Install tools:
Others:

