Wrong parameters at AbstractSessionHandler - destroy - setcookie


Symfony version(s) affected: 4.2.3
Description
User authentication causing this error:
request.CRITICAL: Uncaught PHP Exception ErrorException: "Warning: setcookie() expects parameter 3 to be int, array given" at /.../vendor/symfony/http-foundation/Session/Storage/Handler/AbstractSessionHandler.php line 133 {"exception":"[object] (ErrorException(code: 0): Warning: setcookie() expects parameter 3 to be int, array given at /.../vendor/symfony/http-foundation/Session/Storage/Handler/AbstractSessionHandler.php:133)"} []
How to reproduce
I'm following the docs (4.2 version of course) and wanted to create super simple skeleton with simple login/registration functionality. I did not implement any experimental code and was just following the docs.
So for example. I've run the
bin/console make:registration-form
and chose the yes for "Do you want to automatically authenticate the user after registration?"
In the generated controller at the bottom of the register action we have the
return $guardHandler->authenticateUserAndHandleSuccess(...)
When this method is working, at some point, I believe, there is somewhere in the stack a call of the destroy method in the AbstractSessionHandler.php which is causing the error.
I can see exactly same error when I'm trying to proceed with login (providing correct credentials).
If we will look into the AbstractSessionHandler.php
we can see the issue:
//this obviously returns an array
$params = session_get_cookie_params();
unset($params['lifetime']);
// and here we are passing this array to the setcookie in the 3rd parameter
// which is of course causing the error
setcookie($this->sessionName, '', $params);
Additional context
I'm not sure if this can help, but additionally to generating login/registration forms I (following the docs) configured my session to be stored in the db.
And session indeed successfully stored in the db, there's no issues with that.
P.S. Let me know if you need any other details.
But it looks to me that issue is pretty obvious when you just look on the code above.
P.S.2. I can see that this issue is present since v4.2.0-BETA1
In the v4.1.11
that par of destroy method is fine
