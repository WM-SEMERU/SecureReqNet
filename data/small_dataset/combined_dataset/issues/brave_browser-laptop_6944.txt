Misuse of Math.random() to generate random integers


In



browser-laptop/app/extensions/brave/content/scripts/adInsertion.js


        Lines 74 to 75
      in
      57e6965






 var segments = ['IAB2', 'IAB17', 'IAB14', 'IAB21', 'IAB20'] 



 var segment = segments[Math.floor(Math.random() * 4)] 





That is:
var segments = ['IAB2', 'IAB17', 'IAB14', 'IAB21', 'IAB20']
var segment = segments[Math.floor(Math.random() * 4)]
The last value 'IAB20' is excluded from the range of random() and will never be chosen.
Here's another bug:



browser-laptop/tools/lib/transactionHelpers.js


         Line 48
      in
      57e6965






 const count = Math.round(Math.random() * 100) 





 const count = Math.round(Math.random() * 100)
In this case, both 0 and 100 are part of the results, but only occur half as frequently as the other numbers. To see why this happens consider:
 const zeroOneTwo = Math.round(Math.random() * 2)
all numbers from 0 to 0.49999 will return 0
all numbers from 0.5 to 1.4999 will return 1
all numbers from 1.5 to 1.9999 will return 2
So 1 occurs with probbility 1/2 and 0 and 2 are returned with probability 1/4 each.
This is very different from the expected uniform distribution (1/3,1/3,1/3).
The problem here is the flooring or rounding of floating point random numbers to obtain integers.
I think the "proper" way to obtain random integers in a given range is to use randomInt from random-lib
There are many more instances of this in the code. Just do a search for random() to find them.
