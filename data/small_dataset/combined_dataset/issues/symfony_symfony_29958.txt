introducing native php serialize() support for Messenger transport





Q
A




Branch?
master


Bug fix?
yes and no


New feature?
yes and no


BC breaks?
maybe (yes if we change the default)


Deprecations?
no


Tests pass?
yes


Fixed tickets
#29163


License
MIT


Doc PR
TODO!



Messenger currently uses the Serialize to serialize to JSON and then unserialize. This creates a lot of issues:


The default serializer requires you to have getter & setter method (or public properties) for them to be serialized. This makes it easy for data to disappear. I've seen several really smart people have this problem.


Related to the above, the forced getters/setters (and no required constructor args) force you to design your message classes around this.


It's not that the serializer is doing a bad job - it's just not the right use-case for it.
This PR proposes simply using serialize() and unserialize(). This is the behavior we want: we want to put objects to sleep and wake them back up.
I believe the original reason we did not do this was so that we could export "generic JSON", in case we wanted other workers (not our Symfony app) to consume the messages. But, that's an edge case, and could still be accomplished by creating your own serializer.
Btw, Laravel uses serialize() as does Enqueue for (un)serializing Event objects. We're making our life more difficult for no benefit.
Cheers!
