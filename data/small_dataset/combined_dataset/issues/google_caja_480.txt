Local variable named Array (for example) allows calling functions directly


Original issue 480 created by davidsarah.hopwood on 2008-06-10T23:23:58.000Z:
(function() {var Array = function() { alert('xyz'); }; [];})();
This alerts 'xyz' in Firefox 2.0.0.x (not Firefox 3 or IE), when run in
squarefree shell or in an HTML page. The '[]' literal acts as a shallow
reference to 'Array' in the local scope, i.e. effectively as syntactic
sugar for 'Array()'.
If we cajole the following:
var Array = loadModule('keystoneKop').f;
[];
then we get something which appears as though it should be an exploit:
_.loadModule(function (, IMPORTS__) {
{
var loadModule = _.readImport(IMPORTS, 'loadModule');
var x0__;
var Array = (x0___ =
_.asSimpleFunc(loadModule)('keystoneKop'), x0.f_canRead__? x0___.f:
_.readPub(x0, 'f'));
IMPORTS__[ 'yield' ]([ ]);
}
});
For some reason that is not understood, this does not actually alert in the
testbed applet (it would be good to understand why not).
In any case, we need to prevent use of Array as a local variable name.
Object, Function, String and RegExp don't seem to be exploitable in the
same way, but we should prevent use of those as local variable names as
well, and arguably the same for all of the other constructors (e.g. *Error)
available in the global scope.
