Not sure if this is by design, but we're finding that whenever a merge request is opened, the web hook output shows the last committing author's ID in the `author` field, instead of the user who's actually creating the Merge Request...

As a quick test, we modified `to_hook_data` in `app/models/concerns/issuable.rb` to be:

```
  def to_hook_data(current_user)
    object = {
      object_kind: self.class.name.underscore,
      object_attributes: self.attributes,
      object_author: current_user.id
    }
  end
```

And altered the call from `execute_hooks` in `app/services/merge_requests/base_service.rb` to pass through the `current_user` and got the following:


```
{
    "object_kind": "merge_request",
    "object_attributes": {
        "id": 24,
        "target_branch": "test",
        "source_branch": "master",
        "source_project_id": 5,
        "author_id": 4,
        "assignee_id": null,
        "title": "Testing Merge",
        "created_at": "2014-05-16T10:45:42.000Z",
        "updated_at": "2014-05-21T11:04:57.458Z",
        "milestone_id": null,
        "state": "closed",
        "merge_status": "can_be_merged",
        "target_project_id": 5,
        "iid": 7,
        "description": "Merge Test"
    },
    "object_author": 2
}
```

(where ID 4 was the ID of the last person to commit to branch `test`, and ID 2 was the ID of the user who clicked the 'create merge request' button within Gitlab).

Not 100% sure if I've got this right, but in `app/services/merge_requests/create_service.rb` it looks like the `merge_request.author` should be the current logged in user... but in practice that doesn't seem to be the case!

I might just be wrong about this, so any clarification greatly appreciated!