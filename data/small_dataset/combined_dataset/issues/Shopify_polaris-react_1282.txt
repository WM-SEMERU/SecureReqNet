[Frame] Legacy context api and extra rendering


Issue summary
Frame.tsx uses legacy context api and it causes extra rendering for children components when updating context.
References:
Avoiding unnecessary renders with React context

The new context API’s <Context.Provider> components is a bit smarter about re-rendering than your average component. In fact, there is only a single scenario in which it will re-render its children:
<Context.Provider> will only re-render if its children prop does not share reference equality with its previous children prop.
Notably, <Context.Provider> will not re-render if its value changes while its children stay the same. In this case, only the associated <Context.Consumer> components will re-render. This makes it possible to update a context’s consumers without requiring that the entire app be re-rendered.

Expected behavior

Making the form dirty triggered nav bar to update context of Frame
Only components that consume frame context should render again (EX: ContextBar)

Actual behavior
Updating frame context causes children to render again.

Making the form dirty triggered nav bar to update context of Frame
It rendered children components that didn't change


Steps to reproduce the problem

Use frame to wrap components
Update context
All children not consuming context render again

Reduced test case
Legacy context: https://codesandbox.io/s/r7j229norq
New context: https://codesandbox.io/s/42x6p4v2x0
Legacy context rerender children
New context only render children when its not equal by reference
Specifications

Are you using the React components? (Y/N): Y
Polaris version number: 3.11.0
Browser: Chrome
Device: Mac Pro
Operating System: macOS 10.14.4

