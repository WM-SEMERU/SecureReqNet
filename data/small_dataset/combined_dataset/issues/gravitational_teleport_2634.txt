Node cant join the trusted cluster


Hi, I try to create a trusted cluster with:
Teleport version: v2.3.5

Cluster A
Cluster B
Node C
B have connect to trusted cluster A
Cluster A: /etc/teleport/teleport.yaml

teleport:
    # nodename allows to assign an alternative name this node can be reached by.
    # by default it's equal to hostname
    nodename: master
    data_dir: /var/lib/teleport
    auth_token: jYektagNTmhjv9Dh
    advertise_ip: 3.82.67.233
    auth_servers:
        - 0.0.0.0:3025
        - 0.0.0.0:3025
    connection_limits:
        max_connections: 1000
        max_users: 250
    log:
        output: stderr
        severity: ERROR
auth_service:
    enabled: yes
    cluster_name: "main"

    authentication:
        type: local
        second_factor: off
    listen_addr: 0.0.0.0:3025
    tokens:
        - "proxy,node:jYektagNTmhjv9Dh"
        - "auth:jYektagNTmhjv9Dh"
        - "trusted_cluster:xiomwWcrKinFw4Vs"
    session_recording: "node"
ssh_service:
    enabled: yes
    listen_addr: 0.0.0.0:3022
    labels:
        role: master
    commands:
    - name: rpm
      command: ['/bin/uname', '-p']
      period: 1h0m0s
    permit_user_env: false

# This section configures the 'proxy service'
proxy_service:
    enabled: yes
    listen_addr: 0.0.0.0:3023
    tunnel_listen_addr: 0.0.0.0:3024
    web_listen_addr: 0.0.0.0:3080
    #https_key_file: /var/lib/teleport/webproxy_key.pem
    #https_cert_file: /var/lib/teleport/webproxy_cert.pem


Cluster B: /etc/teleport/teleport.yaml

teleport:
    # nodename allows to assign an alternative name this node can be reached by.
    # by default it's equal to hostname
    nodename: mritd.node1
    data_dir: /var/lib/teleport
    auth_token: jYektagNTmhjv9Dh
    advertise_ip: 10.0.1.154
    auth_servers:
        - 10.0.1.154:3025
        - 10.0.1.154:3025
    connection_limits:
        max_connections: 1000
        max_users: 250
    log:
        output: stderr
        severity: ERROR
auth_service:
    enabled: yes
    cluster_name: "main"

    authentication:
        type: local
        second_factor: off
    listen_addr: 10.0.1.154:3025
    tokens:
        - "proxy,node:jYektagNTmhjv9Dh"
        - "auth:jYektagNTmhjv9Dh"
        - "node:jYektagNTmhjv9Dg"
    session_recording: "node"
    cluster_name: "nat"
ssh_service:
    enabled: yes
    listen_addr: 10.0.1.154:3022
    labels:
        role: master
    commands:
    - name: rpm
      command: ['/bin/uname', '-p']
      period: 1h0m0s
    permit_user_env: false

# This section configures the 'proxy service'
proxy_service:
    enabled: yes
    listen_addr: 10.0.1.154:3023
    tunnel_listen_addr: 10.0.1.154:3024
    web_listen_addr: 10.0.1.154:3080
    #https_key_file: /var/lib/teleport/webproxy_key.pem
    #https_cert_file: /var/lib/teleport/webproxy_cert.pem

Trusted cluster file in Cluster B /etc/teleport/cluster.yaml
# cluster.yaml
kind: trusted_cluster
version: v2
metadata:
  # the trusted cluster name MUST match the 'cluster_name' setting of the
  # cluster
  name: local_cluster
spec:
  # this field allows to create tunnels that are disabled, but can be enabled later.
  enabled: true
  # the token expected by the "main" cluster:
  token: xiomwWcrKinFw4Vs
  # the address in 'host:port' form of the reverse tunnel listening port on the
  # "master" proxy server:
  tunnel_addr: 3.82.67.233:3024
  # the address in 'host:port' form of the web listening port on the
  # "master" proxy server:
  web_proxy_addr: 3.82.67.233:3080

When i done to setup trusted cluser, it ok, in web console i can access both two node A and B
But when i starting to add node C with commad:
/usr/local/bin/teleport start --roles=node,proxy --token=jYektagNTmhjv9Dh --auth-server=10.0.1.154
C cannot to join cluster B. I have read #896 to refer but not clear about my version.
When start teleport in node C, i check process with systemctl status teleport it active with there log:
Apr 01 07:07:15 ip-10-0-1-153 systemd[1]: Started Teleport SSH Service.
Apr 01 07:07:15 ip-10-0-1-153 teleport[2440]: level=warning msg="[CONFIG] NO TLS Keys provided, using self signed certificate" file="service.go:912" func=service.initSelfSignedHTTPSCert
Apr 01 07:07:15 ip-10-0-1-153 teleport[2440]: level=warning msg="[CONFIG] Generating self signed key and cert to /var/lib/teleport/webproxy_cert.pem" file="service/service.go:928" func=service.initSelfSignedHTTPSCert

Please help.

Update: i have checked the listen port, there are no teleport port active in node C
Update2: checked listen port in cluster B: auth port 3025 is active but if run tctl nodes ls the response:

[CLIENT]  Cannot connect to the auth server: Get https://teleport.cluster.local/v2/configuration/name: dial tcp 127.0.0.1:3025: connect: connection refused.
Is the auth server running on 127.0.0.1:3025?


Update3: fixed update2 when change listen_addr of cluster B to 0.0.0.0. The bellow debug log is from node C after start join cluster B command:

root@ip-10-0-1-153:/home/ubuntu/teleport# ./teleport start --roles=node,proxy --token=jYektagNTmhjv9Dh --auth-server=10.0.1.154 --debug
INFO Using auth server: tcp://10.0.1.154:3025      file="config/configuration.go:664" func=config.Configure
DEBU Access: null
AdvertiseIP: ""
Auth:
  Authorities: null
  ClusterName: null
  Enabled: false
  Limiter:
    Clock: null
    MaxConnections: 1000
    MaxNumberOfUsers: 250
    Rates: null
  NoAudit: false
  Preference:
    kind: ""
    metadata:
      name: ""
    spec:
      second_factor: otp
      type: local
    version: ""
  Roles: null
  SSHAddr:
    addr: 0.0.0.0:3025
    network: tcp
  StaticTokens:
    kind: static_tokens
    metadata:
      name: static-tokens
    spec:
      static_tokens: []
    version: v2
  StorageConfig:
    Params:
      data_dir: /var/lib/teleport
      path: /var/lib/teleport
    Type: bolt
AuthServers:
- addr: 10.0.1.154:3025
  network: tcp
CachePolicy:
  Enabled: false
  NeverExpires: false
  TTL: 0
Ciphers:
- aes128-ctr
- aes192-ctr
- aes256-ctr
- aes128-gcm@openssh.com
- arcfour256
- arcfour128
Console: 0
DataDir: /var/lib/teleport
HostUUID: ""
Hostname: ip-10-0-1-153
Identities: null
Identity: null
KEXAlgorithms:
- curve25519-sha256@libssh.org
- ecdh-sha2-nistp256
- ecdh-sha2-nistp384
- ecdh-sha2-nistp521
- diffie-hellman-group14-sha1
- diffie-hellman-group1-sha1
Keygen: null
MACAlgorithms:
- hmac-sha2-256-etm@openssh.com
- hmac-sha2-256
- hmac-sha1
- hmac-sha1-96
OIDCConnectors: null
PIDFile: ""
Presence: null
Provisioner: null
Proxy:
  DisableReverseTunnel: false
  DisableWebInterface: false
  DisableWebService: false
  Enabled: true
  Limiter:
    Clock: null
    MaxConnections: 1000
    MaxNumberOfUsers: 250
    Rates: null
  PublicAddr:
    addr: ""
  ReverseTunnelListenAddr:
    addr: 0.0.0.0:3024
    network: tcp
  SSHAddr:
    addr: 0.0.0.0:3023
    network: tcp
  TLSCert: ""
  TLSKey: ""
  WebAddr:
    addr: 0.0.0.0:3080
    network: tcp
ReverseTunnels: null
SSH:
  Addr:
    addr: 0.0.0.0:3022
    network: tcp
  CmdLabels: null
  Enabled: true
  Labels: null
  Limiter:
    Clock: null
    MaxConnections: 1000
    MaxNumberOfUsers: 250
    Rates: null
  Namespace: ""
  PermitUserEnvironment: false
  Shell: /bin/bash
Token: jYektagNTmhjv9Dh
Trust: null
  file="common/teleport.go:178" func=common.Run
DEBU [SUPERVISOR] Service 0xdf6300 added (1)       file="service/supervisor.go:108" func="service.(*LocalSupervisor).Register"
DEBU [SUPERVISOR] Service 0xdf5420 added (2)       file="service/supervisor.go:108" func="service.(*LocalSupervisor).Register"
WARN [CONFIG] NO TLS Keys provided, using self signed certificate  file="service/service.go:912" func=service.initSelfSignedHTTPSCert
DEBU [SUPERVISOR] Service 0xdf6300 added (3)       file="service/supervisor.go:108" func="service.(*LocalSupervisor).Register"
DEBU [SUPERVISOR] Service 0xdf6ce0 added (4)       file="service/supervisor.go:108" func="service.(*LocalSupervisor).Register"
DEBU [SUPERVISOR] Service 0xdf6ce0 started (4)     file="service/supervisor.go:144" func="service.(*LocalSupervisor).serve.func2"
DEBU [SUPERVISOR] Service 0xdf6300 started (4)     file="service/supervisor.go:144" func="service.(*LocalSupervisor).serve.func2"
DEBU [INIT] Reading keys from disk: Key: "/var/lib/teleport/node.key", Cert: "/var/lib/teleport/node.cert"  file="auth/init.go:581" func=auth.ReadIdentity
INFO [Node] Node joining the cluster with a token jYektagNTmhjv9Dh  file="service/service.go:618" func="service.(*TeleportProcess).RegisterWithAuthServer.func1"
DEBU NewTunClient(auth.client.register) with auth: [{10.0.1.154:3025 tcp }]  file="auth/tun.go:805" func=auth.NewTunClient
DEBU TunClient[auth.client.register].Dial()        file="auth/tun.go:896" func="auth.(*TunClient).Dial"
DEBU TunClient[auth.client.register].authServers: [{10.0.1.154:3025 tcp }]  file="auth/tun.go:1021" func="auth.(*TunClient).getClient"
DEBU TunClient[auth.client.register].Dial(to=10.0.1.154:3025, attempt=1)  file="auth/tun.go:1045" func="auth.(*TunClient).dialAuthServer"
DEBU [SUPERVISOR] Service 0xdf5420 started (4)     file="service/supervisor.go:144" func="service.(*LocalSupervisor).serve.func2"
DEBU [SUPERVISOR] Service 0xdf6300 started (4)     file="service/supervisor.go:144" func="service.(*LocalSupervisor).serve.func2"
DEBU [INIT] Reading keys from disk: Key: "/var/lib/teleport/proxy.key", Cert: "/var/lib/teleport/proxy.cert"  file="auth/init.go:581" func=auth.ReadIdentity
INFO [Node] Proxy joining the cluster with a token jYektagNTmhjv9Dh  file="service/service.go:618" func="service.(*TeleportProcess).RegisterWithAuthServer.func1"
DEBU NewTunClient(auth.client.register) with auth: [{10.0.1.154:3025 tcp }]  file="auth/tun.go:805" func=auth.NewTunClient
DEBU TunClient[auth.client.register].Dial()        file="auth/tun.go:896" func="auth.(*TunClient).Dial"
DEBU TunClient[auth.client.register].authServers: [{10.0.1.154:3025 tcp }]  file="auth/tun.go:1021" func="auth.(*TunClient).getClient"
DEBU TunClient[auth.client.register].Dial(to=10.0.1.154:3025, attempt=1)  file="auth/tun.go:1045" func="auth.(*TunClient).dialAuthServer"

