Redirection Error by using OpenId Connect behind a reverse proxy


Hello,
I'm using an OpenId Connect Authentication (with office365) in ASP.NET Core 2. Like this issue (aspnet/Security#1508) on my production server, I’m using a reverse proxy.
https://myserserverintranet.domain.org/area/controler/index -->
https://myserserverinternet.domain.org/asp/area/controler/index
In my apache config of the internet server I have:
ProxyPass /asp/ https://myserserverintranet.domain.org/
ProxyPassReverse /asp/  https://myserserverintranet.domain.org/
The url response in my Administration Center of Azure Active Directory, I have this url
https://myserserverinternet.domain.org/asp/signin-oidc
I’ve got this error :

Message: AADSTS50011: The reply url specified in the request does not match the reply urls configured for the application: '01f94ad6-9e05-4217-bdbf-b0dc3644bf64'.

I corrected by intercepting the event « OnRedirectToIdentityProvider »
public void ConfigureServices(IServiceCollection services)
{
   .AddOpenIdConnect(opts =>
   {
        Configuration.GetSection("Authentication").Bind(opts);
        opts.Events.OnRedirectToIdentityProvider = async context =>
        {
            context.ProtocolMessage.RedirectUri = "https://myserserverinternet/asp/signin-oidc";
            await Task.FromResult(0);
        };
        opts.CallbackPath = new PathString("/asp/area/controler/index");
        opts.AuthenticationMethod = OpenIdConnectRedirectBehavior.RedirectGet;
        opts.ResponseMode = "form_post";
        opts.ResponseType = "id_token";
        opts.TokenValidationParameters = new TokenValidationParameters
        {
           NameClaimType = "name",
           RoleClaimType = "role"
        };
   
        opts.RequireHttpsMetadata = false;
   });

   services.Configure<ForwardedHeadersOptions>(options =>
   {
     options.ForwardedHeaders =
                   ForwardedHeaders.XForwardedFor | ForwardedHeaders.XForwardedProto;
   });


Unfortunately now I get a 404 error,
I do not see what I did wrong and I despair of finding a solution. If anyone has an idea,
I'll take it.
Thank you all for your attention to this issue.
