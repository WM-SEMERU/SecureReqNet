RequestContext ignores headers, query and request


Symfony version(s) affected: 4.2.3
symfony/routing                     v4.2.3  Symfony Routing Component
symfony/http-foundation             v4.2.3  Symfony HttpFoundation Component
symfony/http-kernel                 v4.2.3  Symfony HttpKernel Component
symfony/expression-language         v4.2.3  Symfony ExpressionLanguage Component
sensio/framework-extra-bundle       v5.2.4  This bundle provides a way to configure your controllers with annotations

  Symfony
  Version                 4.2.3
  End of maintenance      07/2019
  End of life             01/2020

Description
When using conditional matching for a specific route, the complete query, request and header ParameterBag is being ignored, ergo empty. The following has no adoption for these parameters whatsoever.
The underneath is from vendor/symfony/routing/Matcher/UrlMatcher.php.
/**
 * @internal
 */
protected function createRequest($pathinfo)
{
    if (!class_exists('Symfony\Component\HttpFoundation\Request')) {
        return null;
    }

    return Request::create($this->context->getScheme().'://'.$this->context->getHost().$this->context->getBaseUrl().$pathinfo, $this->context->getMethod(), $this->context->getParameters(), [], [], [
        'SCRIPT_FILENAME' => $this->context->getBaseUrl(),
        'SCRIPT_NAME' => $this->context->getBaseUrl(),
    ]);
}

In result, I am not able to the following:
<?php

namespace App\Controller;

use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route;

/** @Route("/api", name="api-") */
class TestController extends Controller
{

	/**
	 * @Route(
	 *     "/test",
	 *     name="test", 
	 *     condition="request.headers.has('x-api-version') and request.headers.get('x-api-version') === '101'"
	 * )
	 */
	public function index()
	{
		return $this->json(['success' => true]);
	}

}


Various iterations of the above, with lets say "matching" or "==" has no result. Debugged the cache via checkCondition and all ParameterBags are empty.
How to reproduce
The above is enough to reproduce.
Additional context
I think it has something to do with the RequestContext not being filled properly.
Also a StackOverflow question has been created: https://stackoverflow.com/questions/54687908/conditional-routing-in-symfony-4
