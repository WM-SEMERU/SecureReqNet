[Form] Added support for caching choice lists based on options





Q
A




Branch?
master


Bug fix?
no


New feature?
yes


BC breaks?
no


Deprecations?
yes


Tests pass?
yes


Fixed tickets
~


License
MIT


Doc PR
TODO



Currently, the CachingFactoryDecorator is responsible for unnecessary memory usage, anytime a choice option is set with a callback option defined as an anonymous function or any invokable instance creating, or a loader, then a new hash is generated for the choice list, while we may expect the list to be reused once "finally" configured in a form type or choice type extension.
A simple case is when using one of the core intl choice types in a collection:
// src/Form/Type/PersonType.php
// ...

$builder
    ->add('addresses', CollectionType::class, [
        'entry_type' => AddressType::class,
    ])
    // ...

// src/Form/Type/AddressType.php
// ...
$builder
    // ...
    ->add('country', CountryType::class)
    // ...
In such cases, we would expect every entries to use the same cached intl choice list, but not, as many list and views as entries will be kept in cache. This is even worse if some callback options like choice_label, choice_value, choice_attr, choice_name, preferred_choices or group_by are used.
This PR helps making cache explicit when needed and deprecate unexpected implicit caching of choice list for most simple cases responsible for unnecessary overhead.
I've done some nice profiling with Blackfire and the simple example above in a fresh skeleton and two entries. If any one wants to give a try to that branch to test it with more complex form that would be awesome.

TODO:

 Docs
 More profiling
 Add some tests

#EUFOSSA
