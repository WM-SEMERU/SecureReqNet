'### Summary

I have Gitlab v 8.12.6 omnibus installation and when I load it I have found that cookie "request_method" hasn't "secure" flag.

### Output of checks

#### Results of GitLab application Check
Checking GitLab Shell ...

GitLab Shell version >= 3.6.1 ? ... OK (3.6.1)
Repo base directory exists?
default... yes
Repo storage directories are symlinks?
default... no
Repo paths owned by git:git?
default... yes
Repo paths access is drwxrws---?
default... yes
hooks directories in repos are links: ...
2/1 ... ok
5/2 ... repository is empty
7/5 ... ok
.....
1526/1266 ... ok
1526/1267 ... ok
383/1268 ... ok
Running /opt/gitlab/embedded/service/gitlab-shell/bin/check
Check GitLab API access: OK
Access to /var/opt/gitlab/.ssh/authorized_keys: OK
Send ping to redis server: OK
gitlab-shell self-check successful

Checking GitLab Shell ... Finished

Checking Sidekiq ...

Running? ... yes
Number of Sidekiq processes ... 1

Checking Sidekiq ... Finished

Checking Reply by email ...

Reply by email is disabled in config/gitlab.yml

Checking Reply by email ... Finished

Checking LDAP ...

LDAP users with access to your GitLab server (only showing the first 100 results)
Server: ldapmain
	DN: CN=Exchange Servers,OU=Microsoft Exchange Security Groups,DC=server,DC=com	 sAMAccountName: Exchange Servers
	DN: CN=Exchange Organization Administrators,OU=Microsoft Exchange Security Groups,DC=server,DC=com	 sAMAccountName: Exchange Organization Administrators
	DN: CN=Exchange Recipient Administrators,OU=Microsoft Exchange Security Groups,DC=server,DC=com	 sAMAccountName: Exchange Recipient Administrators
	DN: CN=Exchange View-Only Administrators,OU=Microsoft Exchange Security Groups,DC=server,DC=com	 sAMAccountName: Exchange View-Only Administrators
	DN: CN=Exchange Public Folder Administrators,OU=Microsoft Exchange Security Groups,DC=server,DC=com	 sAMAccountName: Exchange Public Folder Administrators
	DN: CN=ExchangeLegacyInterop,OU=Microsoft Exchange Security Groups,DC=server,DC=com	 sAMAccountName: ExchangeLegacyInterop
	DN: CN=Exchange Trusted Subsystem,OU=Microsoft Exchange Security Groups,DC=server,DC=com	 sAMAccountName: Exchange Trusted Subsystem
	DN: CN=Hygiene Management,OU=Microsoft Exchange Security Groups,DC=server,DC=com	 sAMAccountName: Hygiene Management
	DN: CN=Organization Management,OU=Microsoft Exchange Security Groups,DC=server,DC=com	 sAMAccountName: Organization Management
	DN: CN=Public Folder Management,OU=Microsoft Exchange Security Groups,DC=server,DC=com	 sAMAccountName: Public Folder Management
	DN: CN=Recipient Management,OU=Microsoft Exchange Security Groups,DC=server,DC=com	 sAMAccountName: Recipient Management
	DN: CN=View-Only Organization Management,OU=Microsoft Exchange Security Groups,DC=server,DC=com	 sAMAccountName: View-Only Organization Management
	DN: CN=UM Management,OU=Microsoft Exchange Security Groups,DC=server,DC=com	 sAMAccountName: UM Management
	DN: CN=Delegated Setup,OU=Microsoft Exchange Security Groups,DC=server,DC=com	 sAMAccountName: Delegated Setup
	DN: CN=Exchange Windows Permissions,OU=Microsoft Exchange Security Groups,DC=server,DC=com	 sAMAccountName: Exchange Windows Permissions
	DN: CN=Exchange All Hosted Organizations,OU=Microsoft Exchange Security Groups,DC=server,DC=com	 sAMAccountName: Exchange All Hosted Organizations
	DN: CN=Help Desk,OU=Microsoft Exchange Security Groups,DC=server,DC=com	 sAMAccountName: Help Desk
	DN: CN=Records Management,OU=Microsoft Exchange Security Groups,DC=server,DC=com	 sAMAccountName: Records Management
	DN: CN=Discovery Management,OU=Microsoft Exchange Security Groups,DC=server,DC=com	 sAMAccountName: Discovery Management
	DN: CN=Server Management,OU=Microsoft Exchange Security Groups,DC=server,DC=com	 sAMAccountName: Server Management
	DN: CN=user2,OU=DEL,OU=Disabled_Users,OU=Disabled Objects,DC=server,DC=com	 sAMAccountName: user2

Checking LDAP ... Finished

Checking GitLab ...

Git configured with autocrlf=input? ... yes
Database config exists? ... yes
All migrations up? ... yes
Database contains orphaned GroupMembers? ... no
GitLab config exists? ... yes
GitLab config outdated? ... no
Log directory writable? ... yes
Tmp directory writable? ... yes
Uploads directory setup correctly? ... yes
Init script exists? ... skipped (omnibus-gitlab has no init script)
Init script up-to-date? ... skipped (omnibus-gitlab has no init script)
projects have namespace: ...
2/1 ... yes
5/2 ... yes
7/5 ... yes
10/6 ... yes
.....
237/150 ... yes
238/151 ... yes
202/152 ... yes
383/1268 ... yes
Redis version >= 2.8.0? ... yes
Ruby version >= 2.1.0 ? ... yes (2.3.1)
Your git bin path is "/opt/gitlab/embedded/bin/git"
Git version >= 2.7.3 ? ... yes (2.7.4)
Active users: 1347

Checking GitLab ... Finished

#### Results of GitLab environment info
System information
System:
Current User:	git
Using RVM:	no
Ruby Version:	2.3.1p112
Gem Version:	2.6.6
Bundler Version:1.13.2
Rake Version:	10.5.0
Sidekiq Version:4.1.4

GitLab information
Version:	8.12.6
Revision:	fa20b51
Directory:	/opt/gitlab/embedded/service/gitlab-rails
DB Adapter:	postgresql
URL:		https://site.com/gitlab
HTTP Clone URL:	https://site.com/gitlab/some-group/some-project.git
SSH Clone URL:	git@site.com:some-group/some-project.git
Using LDAP:	yes
Using Omniauth:	no

GitLab Shell
Version:	3.6.1
Repository storage paths:
- default: 	/var/opt/gitlab/git-data/repositories
Hooks:		/opt/gitlab/embedded/service/gitlab-shell/hooks/
Git:		/opt/gitlab/embedded/bin/git


### Possible fixes

(If you can, link to the line of code that might be responsible for the problem)

this 
```
 Gitlab::Application.config.session_store :cookie_store, key: '_gitlab_session',
                                                       secure: Gitlab::Application.config.force_ssl,
                                                       httponly: true
```
should be present on my file /opt/gitlab/embedded/service/gitlab-rails/config/initializers/session_store.rb but it doesn't.
Took from https://gitlab.com/gitlab-org/gitlab-ce/commit/a58d3112620a62240c5f98f1cc0111e89de6b543