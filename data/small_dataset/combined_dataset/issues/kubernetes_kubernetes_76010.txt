encrypting etcd breaks default-token-xxxxx


I set kubernetes cluster by kubeadm on my local ubuntu server. I tried to encrypt etcd by the same way as https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/ , then it breaks /registry/secrets/default/default-token-xxxxx
here is my encryption configuration file.
    kind: EncryptionConfiguration
    apiVersion: apiserver.config.k8s.io/v1
    resources:
      - resources:
        - secrets
        providers:
        - aescbc:
            keys:
            - name: key1
              secret: F3rax7e5B/gGbAR8LLLLbPAp+R4W8KGXKjXfhTp8bb0=
            - name: key2
              secret: yuat0/ntgNh8d4NJwkWWSCdi7/WCYJ7AGfjTSU1XKHE=
and after created it, I configured my kube-apiserver.yaml like below.
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    component: kube-apiserver
    tier: control-plane
  name: kube-apiserver
  namespace: kube-system
spec:
  containers:
  - command:
    - kube-apiserver
    - --advertise-address=xx.x.xxx.xxx
    - --allow-privileged=true
    - --authorization-mode=Node,RBAC
    - --client-ca-file=/path/to/my/ca.crt
    - --enable-admission-plugins=NodeRestriction
    - --enable-bootstrap-token-auth=true
    - --etcd-cafile=/path/to/my/etcd/ca.crt
    - --etcd-certfile=/path/to/my/apiserver-etcd-client.crt
    - --etcd-keyfile=/path/to/my/apiserver-etcd-client.key
    - --etcd-servers=https://127.0.0.1:2379
    - --encryption-provider-config=/path/to/enc/encryption_conf.yaml
    - --insecure-port=0
    - --kubelet-client-certificate=/path/to/myapiserver-kubelet-client.crt
    - --kubelet-client-key=/path/to/my/apiserver-kubelet-client.key
    - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
    - --proxy-client-cert-file=/path/to/my/front-proxy-client.crt
    - --proxy-client-key-file=/path/to/my/front-proxy-client.key
    - --requestheader-allowed-names=front-proxy-client
    - --requestheader-client-ca-file=/path/to/my/front-proxy-ca.crt
    - --requestheader-extra-headers-prefix=X-Remote-Extra-
    - --requestheader-group-headers=X-Remote-Group
    - --requestheader-username-headers=X-Remote-User
    - --secure-port=6443
    - --service-account-key-file=/path/to/my/sa.pub
    - --service-cluster-ip-range=10.96.0.0/12
    - --tls-cert-file=/path/to/my/apiserver.crt
    - --tls-private-key-file=/path/to/my/apiserver.key
    image: k8s.gcr.io/kube-apiserver:v1.14.0
    imagePullPolicy: IfNotPresent
    livenessProbe:
      failureThreshold: 8
      httpGet:
        host: xx.x.xxx.xxx
        path: /healthz
        port: 6443
        scheme: HTTPS
      initialDelaySeconds: 15
      timeoutSeconds: 15
    name: kube-apiserver
    resources:
      requests:
        cpu: 250m
    volumeMounts:
    - mountPath: /path/to/enc
      name: encryption-conf
      readOnly: true
  ...
  hostNetwork: true
  priorityClassName: system-cluster-critical
  volumes:
  - hostPath:
      path: /path/to/enc
      type: DirectoryOrCreate
    name: encryption-conf
 ...
status: {}
after restarting apiserver, unable to transform key "/registry/secrets/default/default-token-xxx": no matching prefix found appeared.
environment

Ubuntu Server 18.04
build cluster by using kubeadm(v1.14.0)
kubectl version: v1.14.0
cni:  Calico(v3.5)

/kind bug
