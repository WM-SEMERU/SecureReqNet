Missing stdout from PyO3


What happened:
A rust program invoking Python function thru PyO3 received no printout from Python side of the code.
~/Code/sturdy-engine(master*) » kubectl create -f main.yml
job.batch/debug-stdout-qp8sd created
~/Code/sturdy-engine(master*) » kubectl logs job.batch/debug-stdout-qp8sd -n bluecheese -f
==============
Acquire GIL
Modifying sys.path
Importing
call_method1()
flush_stdio()
==============

What you expected to happen:
Same result as running the container standalone.
~/Code/sturdy-engine(master*) » docker run -it --rm aleozlx/sturdy-engine target/debug/sturdy-engine
==============
Acquire GIL
Modifying sys.path
Importing
call_method1()
0
1
2
3
4
flush_stdio()
Flushing I/O
==============

How to reproduce it (as minimally and precisely as possible):
Find the example yml from the following URL and kubectl create -f.
https://github.com/aleozlx/sturdy-engine/tree/4dacbf6ed9f2b6c56bf0ac58436b2546a979b367
Anything else we need to know?:
Tried to have PYTHONUNBUFFERED turned on as well, which is usually the fix for Python.
Tried to flush I/O everywhere I can think of.
Tried the following cases:
local machine (5.0.4-arch1-1-ARCH+3.7.2+rustc 1.34.0-nightly (097c04cf4 2019-02-24)) + pyO3 => ok
docker image (ubuntu:18.04 on above system) + pyO3 => ok
k8s (see versions below) + pyO3 => fail
k8s + rust => can print
k8s + python => can print
Environment:

Kubernetes version version.Info{Major:"1", Minor:"12", GitVersion:"v1.12.4", GitCommit:"f49fa022dbe63faafd0da106ef7e05a29721d3f1", GitTreeState:"clean", BuildDate:"2018-12-14T06:59:37Z", GoVersion:"go1.10.4", Compiler:"gc", Platform:"linux/amd64"}
Cloud provider or hardware configuration: Some vCenter VM
OS (e.g: cat /etc/os-release): CentOS7 3.10.0-957.5.1.el7.x86_64
Kernel (e.g. uname -a): see above
Install tools: NVIDIA plugin
Others: Python version: 3.6.7

See also: PyO3/pyo3#428
