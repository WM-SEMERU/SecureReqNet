Critical PHP Encoding Error from JSON Response creation


Symfony version(s) affected: v3.4.21
Description
I am creating a JSON response to show a table in frontend by drawing the data via AJAX. The following DB field causes an error:
2mm & 3mm V2A; Rechnungsadresse: Maximilian Stanglmayr
Technische Universität Dresden
Institut für Automobiltechnik Dresden - IAD
Lehrstuhl Kraftfahrzeugtechnik
George-Baehr-Straße 1c
01069 Dresden

Enoding this into a the JSON response leads to a
request.CRITICAL: Uncaught PHP Exception InvalidArgumentException: "Malformed UTF-8 characters, possibly incorrectly encoded" at /mnt/web302/d1/08/58522508/htdocs/spezle_app/vendor/symfony/symfony/src/Symfony/Component/HttpFoundation/JsonResponse.php line 168 {"exception":"[object] (InvalidArgumentException(code: 0): Malformed UTF-8 characters, possibly incorrectly encoded at /mnt/web302/d1/08/58522508/htdocs/spezle_app/vendor/symfony/symfony/src/Symfony/Component/HttpFoundation/JsonResponse.php:168)"} []

So the error comes from the setData function:
/**
 * Sets the data to be sent as JSON.
 *
 * @param mixed $data
 *
 * @return $this
 *
 * @throws \InvalidArgumentException
 */
public function setData($data = array())
{
    if (\defined('HHVM_VERSION')) {
        // HHVM does not trigger any warnings and let exceptions
        // thrown from a JsonSerializable object pass through.
        // If only PHP did the same...
        $data = json_encode($data, $this->encodingOptions);
    } else {
        if (!interface_exists('JsonSerializable', false)) {
            set_error_handler(function () { return false; });
            try {
                $data = @json_encode($data, $this->encodingOptions);
            } finally {
                restore_error_handler();
            }
        } else {
            try {
                $data = json_encode($data, $this->encodingOptions);
            } catch (\Exception $e) {
                if ('Exception' === \get_class($e) && 0 === strpos($e->getMessage(), 'Failed calling ')) {
                    throw $e->getPrevious() ?: $e;
                }
                throw $e;
            }
        }
    }

    if (JSON_ERROR_NONE !== json_last_error()) {
        throw new \InvalidArgumentException(json_last_error_msg());
    }

    return $this->setJson($data);
}

The word which seems to cause the problems is "für" in the third line. But it's not the word itself. I could resolve this issue by adding a space infront of the word. It's also causing no problems in other fields or rows or even at a different position. Also "fuer" at that same position doesn't cause any problems.
How to reproduce
The composer.lock file is attatched. composer.lock.txt
PHP Version is 7.2
MySQL Version is 5.6.42
The table structure is attatched as a phpMyAdmin print.
DB3069299 : assignment | STRATO phpMyAdmin 4.8.5.pdf
The text is located in the comment column.
The error doesn't occur with "fur" at the very same position but it also occurs with "för". So I guess its a combination of the umlaut and the specific position or surrounding chars.
Possible Solution
As said: adding one space before "für" was enogh to solve the problem. I am nevertheless interested in how this could happen. Especially because the error seems to so overwhelming specific and strange to me.
