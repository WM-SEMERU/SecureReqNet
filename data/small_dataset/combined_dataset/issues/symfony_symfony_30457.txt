[Serializer] Feature/embedded serialization





Q
A




Branch?
master


Bug fix?
no


New feature?
yes 


BC breaks?
no     


Deprecations?
no 


Tests pass?
yes    


Fixed tickets
#...   


License
MIT


Doc PR
TODO 



Description
For a better Separating Concern, we sometime split our models with submodel.
class MyObject {
   /**
    * @var string
    */
   public $name;
	
    /**
     * @var Coordinate
     */
    public $coordinate;
}

class Coordinate {
    public $latitude;
    public $longitude;
}
However, when we must deal with data from another API, we can receive something like this :
{
    "name": "Hello",
    "latitude": "1,2230",
    "longitude": "47,2098"
}
Without creating a custom normalizer, we cannot directly denormalize this in MyObject.
This propose to add an @Embedded annotation, that indicate some properties are carried by a sub object
class MyObject {
   /**
    * @var string
    */
   public $name;
	
    /**
     * @var Coordinate
     * @Embedded()
     */
    public $coordinate;
}
With this, the denormalization process will fill the Coordinate object with correct values.
The normalization process will do the same jobs.
What do you think ? Does it seem like a relevant addition to the component ?
To do

 add XML attribute and YAML key
 add a CHANGELOG.md entry
 add a doc PR

