Add generics for DebugNode / DebugElement


ðŸš€ feature request
Relevant Package
This feature request is for @angular/core
Description
Querying DebugElements is a normal task and sometimes you are querying by specifying a concrete type.
To get better auto completion support it would be nice if the generic allows to specify the componentInstance type.
Otherwise you have to use type assertions:
    const elements = debugElement.queryAll(By.directive(ElementIdDirective));
    expect((elements[0].componentInstance as ElementIdDirective).elementId).toBe('glas');

Describe the solution you'd like
The same code without assertions:
    const elements = debugElement.queryAll(By.directive(ElementIdDirective));
    expect(elements[0].componentInstance.elementId).toBe('glas');

I could imagine following changes:
export interface DebugNode<T = any> {
    readonly listeners: EventListener[];
    readonly parent: DebugElement | null;
    readonly nativeNode: any;
    readonly injector: Injector;
    readonly componentInstance: T;
    readonly context: any;
    readonly references: {
        [key: string]: any;
    };
    readonly providerTokens: any[];
}

static directive<T = any>(type: Type<T>): Predicate<DebugElement<T>>;

Describe alternatives you've considered
See the first code example.
