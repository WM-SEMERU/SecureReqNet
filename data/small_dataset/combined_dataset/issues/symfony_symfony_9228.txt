AccessListener always get a non-authenticated Token


Hi,
I’m developing a custom LDAP authentication provider with an entity user provider, everything works fine except one thing I noticed that might be a bug in the “AccessListener” class (or it’s just me missing something).
To follow along please open the following files:
../Security/Core/Authentication/Token/UsernamePasswordToken.php
../Security/Http/Firewall/UsernamePasswordFormAuthenticationListener.php
../Component/Security/Http/Firewall/AbstractAuthenticationListener.php
../Component/Security/Http/Firewall/AccessListener.php
../Component/Security/Core/Authentication/Provider/DaoAuthenticationProvider.php
../Component/Security/Core/Authentication/Provider/UserAuthenticationProvider.php
You can reproduce the following scenario with a basic form_login using an entity user provider.
I noticed this behavior when I was doing the following steps:
1-  A User enters his valid credentials username/password into a login form.
2-  GetResponseEvent is fired
3-  The “handle” method of “UsernamePasswordFormAuthenticationListener” is called, and it checks if the request requires authentication [line 123 of “AbstractAuthenticationListener”].
4-  At this point the request requires authentication, so it calls the attemptAuthentication($request) in “UsernamePasswordFormAuthenticationListener” to get an authenticated token.
5-  “UsernamePasswordFormAuthenticationListener” creates a “UsernamePasswordToken” and calls authenticate(new LdapToken($username, $password, $this->providerKey) in “DaoAuthenticationProvider”
6-  “DaoAuthenticationProvider” verify the User credentials and returns an authenticated Token.
7-  The “onSuccess()” method of “AbstractAuthenticationListener” to set the authenticated Token to the SecurityContext [line 206].
8-  After the authentication is successful, the user is redirected to the home page, and this is the interesting part.
9-  When symfony asks for the home page route, GetResponseEvent is fired again.
10-  Then “AbstractAuthenticationListener” calls the “handle” method, it checks if the request requires authentication [line 123].
11- This time the request doesn’t require authentication, so “AbstractAuthenticationListener” hand over the request to the “AccessListener”.
12- In the “AccessListener” class [line 55], “$token” should contain the authenticated Token created previously, but the problem is that “$token” is not-authenticated and the condition in line 68 is always met, and also $token->getCredentials() returns null.
So my question is, why is the “AccessListener” class getting a non-authenticated Token?
Another thing I noticed in the “AccessListener” class is that the condition in line 68 is NOT met only when SecurityContext is populated with an anonymous Token.
Thank you.
Best regards,
iftah
