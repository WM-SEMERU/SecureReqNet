Kubeadm HA Join Confusing Etcd CA with apiserver CA


What keywords did you search in kubeadm issues before filing this one?

“invalid authority”
there is the issue with the guy who was manually creating certs without newlines which is what gave me the idea to actually check cacert inside admin.conf

Is this a BUG REPORT or FEATURE REQUEST?
BUG REPORT
Versions
kubeadm version (use kubeadm version):
kubeadm version: &version.Info{Major:"1", Minor:"13", GitVersion:"v1.13.4", GitCommit:"c27b913fddd1a6c480c229191a087698aa92f0b1", GitTreeState:"clean", BuildDate:"2019-02-28T13:35:32Z", GoVersion:"go1.11.5", Compiler:"gc", Platform:"linux/amd64"}
Environment:

Kubernetes version (use kubectl version):

Client Version: version.Info{Major:"1", Minor:"13", GitVersion:"v1.13.4", GitCommit:"c27b913fddd1a6c480c229191a087698aa92f0b1", GitTreeState:"clean", BuildDate:"2019-02-28T13:37:52Z", GoVersion:"go1.11.5", Compiler:"gc", Platform:"linux/amd64"}
Server Version: version.Info{Major:"1", Minor:"13", GitVersion:"v1.13.4", GitCommit:"c27b913fddd1a6c480c229191a087698aa92f0b1", GitTreeState:"clean", BuildDate:"2019-02-28T13:30:26Z", GoVersion:"go1.11.5", Compiler:"gc", Platform:"linux/amd64"}


Cloud provider or hardware configuration: kvm (ssdnodes)
OS (e.g. from /etc/os-release): ubuntu 18.04
Kernel (e.g. uname -a): Linux montreal-8gb-01 4.15.0-46-generic #49-Ubuntu SMP Wed Feb 6 09:33:07 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux
Others:

What happened?
Second stacked control plane node failed to join.
Copied PKI files + admin.conf from initial stacked control plane node as per docs, my tree /etc/kubernetes after copying:
/etc/kubernetes/
â��â��â�� admin.conf
â��â��â�� pki
    â��â��â�� ca.crt
    â��â��â�� ca.key
    â��â��â�� etcd
    â��Â Â  â��â��â�� ca.crt
    â��Â Â  â��â��â�� ca.key
    â��â��â�� front-proxy-ca.crt
    â��â��â�� front-proxy-ca.key
    â��â��â�� sa.key
    â��â��â�� sa.pub

Failed to join HA with --experimental-control-plane.
The original CA (retrieved with cat /etc/kubernetes/admin.conf | grep certificate-authority-data | awk '{print $2}' | base64 --decode > original.cert)

Certificate:
    Data:
        Version: 3 (0x2)
        Serial Number: 0 (0x0)
    Signature Algorithm: sha256WithRSAEncryption
        Issuer: CN = kubernetes
        Validity
            Not Before: Mar 17 03:56:45 2019 GMT
            Not After : Mar 14 03:56:45 2029 GMT
        Subject: CN = kubernetes
        Subject Public Key Info:
            Public Key Algorithm: rsaEncryption
                Public-Key: (2048 bit)
                Modulus:
                    00:ba:71:bb:2c:79:d4:87:3b:8f:74:0b:eb:bb:6d:
                    b3:d4:08:34:02:ea:e8:8e:c4:e8:05:65:c1:90:9e:
                    db:2d:8c:e2:53:76:5f:8c:bd:e6:f0:8f:6e:43:a2:
                    3a:34:fc:44:0e:f3:b6:a8:d1:d8:b7:0c:92:75:95:
                    a7:66:85:bc:41:2e:85:6c:6d:36:48:16:ac:56:26:
                    7f:64:28:ad:83:eb:54:7a:f8:1e:f0:b8:40:6b:4b:
                    2b:2d:18:46:3f:be:f6:dc:d5:87:9b:0d:c9:94:ff:
                    67:c7:7d:b0:63:97:5f:a7:3d:0a:39:77:1c:6d:01:
                    85:3c:86:df:ef:5d:a6:af:05:f2:84:09:4b:f4:8c:
                    e2:c6:d3:1c:b5:a6:23:f3:1f:9c:73:6c:cd:a2:fc:
                    2e:d9:d5:5d:43:82:9a:b2:02:78:28:4f:4e:d3:3b:
                    f5:af:a8:6e:5f:09:cb:7d:d7:54:41:7a:4f:dd:0a:
                    90:e1:93:d3:2b:6d:56:20:2c:79:09:92:13:00:ab:
                    74:35:94:ce:31:06:7d:07:f7:ee:29:a5:98:a8:46:
                    02:03:12:bf:29:f6:c9:92:f2:56:10:2c:98:b6:86:
                    ab:28:6d:c0:18:91:d4:15:bf:62:17:ba:15:ca:28:
                    82:35:ae:ea:a9:b0:88:82:c1:83:2a:0a:f5:9b:1f:
                    e0:5b
                Exponent: 65537 (0x10001)
        X509v3 extensions:
            X509v3 Key Usage: critical
                Digital Signature, Key Encipherment, Certificate Sign
            X509v3 Basic Constraints: critical
                CA:TRUE
    Signature Algorithm: sha256WithRSAEncryption
         99:a6:d1:50:57:d1:53:82:8d:4f:ad:0e:a2:f9:55:0c:9b:cf:
         21:f4:08:ae:26:e5:69:e1:72:f1:22:70:7f:f3:b8:e1:0d:08:
         c7:bb:6f:9f:78:a8:ed:fb:85:6e:c4:6b:9d:b3:d8:2a:49:ca:
         e0:ce:f1:3d:b4:d3:26:f3:0b:0c:8a:f1:83:07:89:d6:97:31:
         1d:bc:08:9c:f5:f7:90:d0:d2:b3:18:f1:f2:8e:5b:7d:df:d6:
         c5:f7:64:78:cb:1b:f2:cf:e9:82:38:ba:29:46:4d:73:76:c9:
         f9:61:f1:2b:df:4d:9e:32:00:91:07:8b:3b:2c:34:a3:7e:d5:
         42:17:81:fb:ae:c3:d8:b0:69:79:5c:4e:b0:8c:43:75:42:b5:
         e6:8a:19:25:bf:c0:3a:3b:32:86:f7:90:06:6f:53:30:30:47:
         7b:55:c9:77:0f:5b:aa:70:4c:0b:69:d3:15:db:0d:73:4c:3f:
         2c:68:79:50:01:b2:62:d5:40:02:a3:07:82:77:5b:64:ae:27:
         f0:52:8f:78:c2:54:8b:ec:d8:5a:e4:52:e5:65:08:5b:06:be:
         22:f1:47:07:53:21:56:a6:f1:fe:b4:6a:3a:d0:57:60:1b:34:
         4e:13:10:0c:bd:ca:29:f3:82:ae:46:2f:14:09:47:8d:99:5e:
         10:bd:d4:61


If using the above admin.conf (as per docs), get this error on join:
error generating kubeconfig files: a kubeconfig file "/etc/kubernetes/admin.conf" exists already but has got the wrong CA cert

Full log with --v 5:

I0317 12:24:36.823583   30812 join.go:299] [join] found NodeName empty; using OS hostname as NodeName
I0317 12:24:36.823668   30812 join.go:303] [join] found advertiseAddress empty; using default interface's IP address as advertiseAddress
I0317 12:24:36.823986   30812 interface.go:384] Looking for default routes with IPv4 addresses
I0317 12:24:36.824007   30812 interface.go:389] Default route transits interface "ens3"
I0317 12:24:36.824313   30812 interface.go:196] Interface ens3 is up
I0317 12:24:36.824397   30812 interface.go:244] Interface "ens3" has 2 addresses :[66.70.222.102/24 fe80::21c:42ff:fe1b:1132/64].
I0317 12:24:36.824419   30812 interface.go:211] Checking addr  66.70.222.102/24.
I0317 12:24:36.824427   30812 interface.go:218] IP found 66.70.222.102
I0317 12:24:36.824462   30812 interface.go:250] Found valid IPv4 address 66.70.222.102 for interface "ens3".
I0317 12:24:36.824475   30812 interface.go:395] Found active IP 66.70.222.102
[preflight] Running pre-flight checks
I0317 12:24:36.824553   30812 join.go:328] [preflight] Running general checks
I0317 12:24:36.824628   30812 checks.go:245] validating the existence and emptiness of directory /etc/kubernetes/manifests
I0317 12:24:36.824701   30812 checks.go:283] validating the existence of file /etc/kubernetes/kubelet.conf
I0317 12:24:36.824717   30812 checks.go:283] validating the existence of file /etc/kubernetes/bootstrap-kubelet.conf
I0317 12:24:36.824734   30812 checks.go:104] validating the container runtime
I0317 12:24:37.004126   30812 checks.go:130] validating if the service is enabled and active
I0317 12:24:37.028058   30812 checks.go:332] validating the contents of file /proc/sys/net/bridge/bridge-nf-call-iptables
I0317 12:24:37.028777   30812 checks.go:332] validating the contents of file /proc/sys/net/ipv4/ip_forward
I0317 12:24:37.028961   30812 checks.go:644] validating whether swap is enabled or not
I0317 12:24:37.029241   30812 checks.go:373] validating the presence of executable ip
I0317 12:24:37.029464   30812 checks.go:373] validating the presence of executable iptables
I0317 12:24:37.029738   30812 checks.go:373] validating the presence of executable mount
I0317 12:24:37.029966   30812 checks.go:373] validating the presence of executable nsenter
I0317 12:24:37.030202   30812 checks.go:373] validating the presence of executable ebtables
I0317 12:24:37.030384   30812 checks.go:373] validating the presence of executable ethtool
I0317 12:24:37.031060   30812 checks.go:373] validating the presence of executable socat
I0317 12:24:37.031077   30812 checks.go:373] validating the presence of executable tc
I0317 12:24:37.031092   30812 checks.go:373] validating the presence of executable touch
I0317 12:24:37.031114   30812 checks.go:515] running all checks
        [WARNING SystemVerification]: this Docker version is not on the list of validated versions: 18.09.3. Latest validated version: 18.06
I0317 12:24:37.122214   30812 checks.go:403] checking whether the given node name is reachable using net.LookupHost
        [WARNING Hostname]: hostname "montreal-8gb-02" could not be reached
        [WARNING Hostname]: hostname "montreal-8gb-02": lookup montreal-8gb-02 on 8.8.8.8:53: no such host
I0317 12:24:37.197977   30812 checks.go:613] validating kubelet version
I0317 12:24:37.326561   30812 checks.go:130] validating if the service is enabled and active
I0317 12:24:37.390988   30812 checks.go:208] validating availability of port 10250
I0317 12:24:37.391180   30812 checks.go:430] validating if the connectivity type is via proxy or direct
I0317 12:24:37.391231   30812 join.go:334] [preflight] Fetching init configuration
I0317 12:24:37.391241   30812 join.go:603] [join] Discovering cluster-info
[discovery] Trying to connect to API Server "k8s-ssdnodes-montreal.jmazz.ca:6443"
[discovery] Created cluster-info discovery client, requesting info from "https://k8s-ssdnodes-montreal.jmazz.ca:6443"
[discovery] Requesting info from "https://k8s-ssdnodes-montreal.jmazz.ca:6443" again to validate TLS against the pinned public key
[discovery] Cluster info signature and contents are valid and TLS certificate validates against pinned roots, will use API Server "k8s-ssdnodes-montreal.jmazz.ca:6443"
[discovery] Successfully established connection with API Server "k8s-ssdnodes-montreal.jmazz.ca:6443"
I0317 12:24:37.501253   30812 join.go:610] [join] Retrieving KubeConfig objects
[join] Reading configuration from the cluster...
[join] FYI: You can look at this config file with 'kubectl -n kube-system get cm kubeadm-config -oyaml'
I0317 12:24:37.526331   30812 interface.go:384] Looking for default routes with IPv4 addresses
I0317 12:24:37.526398   30812 interface.go:389] Default route transits interface "ens3"
I0317 12:24:37.526793   30812 interface.go:196] Interface ens3 is up
I0317 12:24:37.526868   30812 interface.go:244] Interface "ens3" has 2 addresses :[66.70.222.102/24 fe80::21c:42ff:fe1b:1132/64].
I0317 12:24:37.526892   30812 interface.go:211] Checking addr  66.70.222.102/24.
I0317 12:24:37.526907   30812 interface.go:218] IP found 66.70.222.102
I0317 12:24:37.526919   30812 interface.go:250] Found valid IPv4 address 66.70.222.102 for interface "ens3".
I0317 12:24:37.526927   30812 interface.go:395] Found active IP 66.70.222.102
I0317 12:24:37.527077   30812 join.go:341] [preflight] Running configuration dependant checks
[join] Running pre-flight checks before initializing the new control plane instance
I0317 12:24:37.527989   30812 checks.go:572] validating Kubernetes and kubeadm version
I0317 12:24:37.528020   30812 checks.go:171] validating if the firewall is enabled and active
I0317 12:24:37.539807   30812 checks.go:208] validating availability of port 6443
I0317 12:24:37.539917   30812 checks.go:208] validating availability of port 10251
I0317 12:24:37.539947   30812 checks.go:208] validating availability of port 10252
I0317 12:24:37.539976   30812 checks.go:283] validating the existence of file /etc/kubernetes/manifests/kube-apiserver.yaml
I0317 12:24:37.539991   30812 checks.go:283] validating the existence of file /etc/kubernetes/manifests/kube-controller-manager.yaml
I0317 12:24:37.539999   30812 checks.go:283] validating the existence of file /etc/kubernetes/manifests/kube-scheduler.yaml
I0317 12:24:37.540009   30812 checks.go:283] validating the existence of file /etc/kubernetes/manifests/etcd.yaml
I0317 12:24:37.540020   30812 checks.go:430] validating if the connectivity type is via proxy or direct
I0317 12:24:37.540047   30812 checks.go:466] validating http connectivity to first IP address in the CIDR
I0317 12:24:37.540073   30812 checks.go:466] validating http connectivity to first IP address in the CIDR
I0317 12:24:37.540081   30812 checks.go:104] validating the container runtime
I0317 12:24:37.687665   30812 checks.go:130] validating if the service is enabled and active
I0317 12:24:37.724840   30812 checks.go:332] validating the contents of file /proc/sys/net/bridge/bridge-nf-call-iptables
I0317 12:24:37.724968   30812 checks.go:332] validating the contents of file /proc/sys/net/ipv4/ip_forward
I0317 12:24:37.725016   30812 checks.go:644] validating whether swap is enabled or not
I0317 12:24:37.725070   30812 checks.go:373] validating the presence of executable ip
I0317 12:24:37.725147   30812 checks.go:373] validating the presence of executable iptables
I0317 12:24:37.725187   30812 checks.go:373] validating the presence of executable mount
I0317 12:24:37.725223   30812 checks.go:373] validating the presence of executable nsenter
I0317 12:24:37.725250   30812 checks.go:373] validating the presence of executable ebtables
I0317 12:24:37.725278   30812 checks.go:373] validating the presence of executable ethtool
I0317 12:24:37.725307   30812 checks.go:373] validating the presence of executable socat
I0317 12:24:37.725336   30812 checks.go:373] validating the presence of executable tc
I0317 12:24:37.725363   30812 checks.go:373] validating the presence of executable touch
I0317 12:24:37.725392   30812 checks.go:515] running all checks
        [WARNING SystemVerification]: this Docker version is not on the list of validated versions: 18.09.3. Latest validated version: 18.06
I0317 12:24:37.829139   30812 checks.go:403] checking whether the given node name is reachable using net.LookupHost
        [WARNING Hostname]: hostname "montreal-8gb-02" could not be reached
        [WARNING Hostname]: hostname "montreal-8gb-02": lookup montreal-8gb-02 on 8.8.8.8:53: no such host
I0317 12:24:37.853299   30812 checks.go:613] validating kubelet version
I0317 12:24:38.072703   30812 checks.go:130] validating if the service is enabled and active
I0317 12:24:38.096458   30812 checks.go:208] validating availability of port 10250
I0317 12:24:38.096594   30812 checks.go:208] validating availability of port 2379
I0317 12:24:38.096641   30812 checks.go:208] validating availability of port 2380
I0317 12:24:38.096685   30812 checks.go:245] validating the existence and emptiness of directory /var/lib/etcd
I0317 12:24:38.096718   30812 certs.go:37] creating PKI assets
[certs] Generating "front-proxy-client" certificate and key
[certs] Generating "etcd/peer" certificate and key
[certs] etcd/peer serving cert is signed for DNS names [montreal-8gb-02 localhost] and IPs [66.70.222.102 127.0.0.1 ::1]
[certs] Generating "etcd/healthcheck-client" certificate and key
[certs] Generating "apiserver-etcd-client" certificate and key
[certs] Generating "etcd/server" certificate and key
[certs] etcd/server serving cert is signed for DNS names [montreal-8gb-02 localhost] and IPs [66.70.222.102 127.0.0.1 ::1]
[certs] Generating "apiserver" certificate and key
[certs] apiserver serving cert is signed for DNS names [montreal-8gb-02 kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local k8s-ssdnodes-montreal.jmazz.ca k8s-ssdnodes-montreal.jmazz.ca] and IPs [10.96.0.1 66.70.222.102]
[certs] Generating "apiserver-kubelet-client" certificate and key
[certs] valid certificates and keys now exist in "/etc/kubernetes/pki"
I0317 12:24:41.017121   30812 certs.go:72] creating a new public/private key files for signing service account users
[certs] Using the existing "sa" key
error generating kubeconfig files: a kubeconfig file "/etc/kubernetes/admin.conf" exists already but has got the wrong CA cert


So then, figured I might try deleting admin.conf before joining:
kubeadm reset
# copy files into /etc/kubernetes, but delete /etc/kubernetes/admin.conf

This produces error
Get https://k8s-ssdnodes-montreal.jmazz.ca:6443/api/v1/namespaces/kube-system/configmaps/kubeadm-config: x509: certificate signed by unknown authority

Full log:

I0317 12:31:22.391889   30959 join.go:299] [join] found NodeName empty; using OS hostname as NodeName
I0317 12:31:22.392212   30959 join.go:303] [join] found advertiseAddress empty; using default interface's IP address as advertiseAddress
I0317 12:31:22.392577   30959 interface.go:384] Looking for default routes with IPv4 addresses
I0317 12:31:22.392708   30959 interface.go:389] Default route transits interface "ens3"
I0317 12:31:22.393035   30959 interface.go:196] Interface ens3 is up
I0317 12:31:22.393258   30959 interface.go:244] Interface "ens3" has 2 addresses :[66.70.222.102/24 fe80::21c:42ff:fe1b:1132/64].
I0317 12:31:22.393388   30959 interface.go:211] Checking addr  66.70.222.102/24.
I0317 12:31:22.393466   30959 interface.go:218] IP found 66.70.222.102
I0317 12:31:22.393580   30959 interface.go:250] Found valid IPv4 address 66.70.222.102 for interface "ens3".
I0317 12:31:22.393657   30959 interface.go:395] Found active IP 66.70.222.102
[preflight] Running pre-flight checks
I0317 12:31:22.393833   30959 join.go:328] [preflight] Running general checks
I0317 12:31:22.394016   30959 checks.go:245] validating the existence and emptiness of directory /etc/kubernetes/manifests
I0317 12:31:22.394147   30959 checks.go:283] validating the existence of file /etc/kubernetes/kubelet.conf
I0317 12:31:22.394230   30959 checks.go:283] validating the existence of file /etc/kubernetes/bootstrap-kubelet.conf
I0317 12:31:22.394328   30959 checks.go:104] validating the container runtime
I0317 12:31:22.525855   30959 checks.go:130] validating if the service is enabled and active
I0317 12:31:22.626388   30959 checks.go:332] validating the contents of file /proc/sys/net/bridge/bridge-nf-call-iptables
I0317 12:31:22.626724   30959 checks.go:332] validating the contents of file /proc/sys/net/ipv4/ip_forward
I0317 12:31:22.626773   30959 checks.go:644] validating whether swap is enabled or not
I0317 12:31:22.626853   30959 checks.go:373] validating the presence of executable ip
I0317 12:31:22.626933   30959 checks.go:373] validating the presence of executable iptables
I0317 12:31:22.626983   30959 checks.go:373] validating the presence of executable mount
I0317 12:31:22.627044   30959 checks.go:373] validating the presence of executable nsenter
I0317 12:31:22.627088   30959 checks.go:373] validating the presence of executable ebtables
I0317 12:31:22.627133   30959 checks.go:373] validating the presence of executable ethtool
I0317 12:31:22.627178   30959 checks.go:373] validating the presence of executable socat
I0317 12:31:22.627234   30959 checks.go:373] validating the presence of executable tc
I0317 12:31:22.627279   30959 checks.go:373] validating the presence of executable touch
I0317 12:31:22.627323   30959 checks.go:515] running all checks
        [WARNING SystemVerification]: this Docker version is not on the list of validated versions: 18.09.3. Latest validated version: 18.06
I0317 12:31:22.814159   30959 checks.go:403] checking whether the given node name is reachable using net.LookupHost
        [WARNING Hostname]: hostname "montreal-8gb-02" could not be reached
        [WARNING Hostname]: hostname "montreal-8gb-02": lookup montreal-8gb-02 on 8.8.8.8:53: no such host
I0317 12:31:22.911749   30959 checks.go:613] validating kubelet version
I0317 12:31:23.042730   30959 checks.go:130] validating if the service is enabled and active
I0317 12:31:23.103726   30959 checks.go:208] validating availability of port 10250
I0317 12:31:23.104134   30959 checks.go:430] validating if the connectivity type is via proxy or direct
I0317 12:31:23.104200   30959 join.go:334] [preflight] Fetching init configuration
I0317 12:31:23.104215   30959 join.go:603] [join] Discovering cluster-info
[discovery] Trying to connect to API Server "k8s-ssdnodes-montreal.jmazz.ca:6443"
[discovery] Created cluster-info discovery client, requesting info from "https://k8s-ssdnodes-montreal.jmazz.ca:6443"
[discovery] Requesting info from "https://k8s-ssdnodes-montreal.jmazz.ca:6443" again to validate TLS against the pinned public key
[discovery] Cluster info signature and contents are valid and TLS certificate validates against pinned roots, will use API Server "k8s-ssdnodes-montreal.jmazz.ca:6443"
[discovery] Successfully established connection with API Server "k8s-ssdnodes-montreal.jmazz.ca:6443"
I0317 12:31:23.295474   30959 join.go:610] [join] Retrieving KubeConfig objects
[join] Reading configuration from the cluster...
[join] FYI: You can look at this config file with 'kubectl -n kube-system get cm kubeadm-config -oyaml'
I0317 12:31:23.332296   30959 interface.go:384] Looking for default routes with IPv4 addresses
I0317 12:31:23.332328   30959 interface.go:389] Default route transits interface "ens3"
I0317 12:31:23.333947   30959 interface.go:196] Interface ens3 is up
I0317 12:31:23.334071   30959 interface.go:244] Interface "ens3" has 2 addresses :[66.70.222.102/24 fe80::21c:42ff:fe1b:1132/64].
I0317 12:31:23.334110   30959 interface.go:211] Checking addr  66.70.222.102/24.
I0317 12:31:23.334132   30959 interface.go:218] IP found 66.70.222.102
I0317 12:31:23.334145   30959 interface.go:250] Found valid IPv4 address 66.70.222.102 for interface "ens3".
I0317 12:31:23.334167   30959 interface.go:395] Found active IP 66.70.222.102
I0317 12:31:23.334296   30959 join.go:341] [preflight] Running configuration dependant checks
[join] Running pre-flight checks before initializing the new control plane instance
I0317 12:31:23.335705   30959 checks.go:572] validating Kubernetes and kubeadm version
I0317 12:31:23.335738   30959 checks.go:171] validating if the firewall is enabled and active
I0317 12:31:23.359469   30959 checks.go:208] validating availability of port 6443
I0317 12:31:23.359641   30959 checks.go:208] validating availability of port 10251
I0317 12:31:23.359707   30959 checks.go:208] validating availability of port 10252
I0317 12:31:23.359753   30959 checks.go:283] validating the existence of file /etc/kubernetes/manifests/kube-apiserver.yaml
I0317 12:31:23.359773   30959 checks.go:283] validating the existence of file /etc/kubernetes/manifests/kube-controller-manager.yaml
I0317 12:31:23.359789   30959 checks.go:283] validating the existence of file /etc/kubernetes/manifests/kube-scheduler.yaml
I0317 12:31:23.359962   30959 checks.go:283] validating the existence of file /etc/kubernetes/manifests/etcd.yaml
I0317 12:31:23.360017   30959 checks.go:430] validating if the connectivity type is via proxy or direct
I0317 12:31:23.360120   30959 checks.go:466] validating http connectivity to first IP address in the CIDR
I0317 12:31:23.360181   30959 checks.go:466] validating http connectivity to first IP address in the CIDR
I0317 12:31:23.360191   30959 checks.go:104] validating the container runtime
I0317 12:31:23.508981   30959 checks.go:130] validating if the service is enabled and active
I0317 12:31:23.591618   30959 checks.go:332] validating the contents of file /proc/sys/net/bridge/bridge-nf-call-iptables
I0317 12:31:23.591754   30959 checks.go:332] validating the contents of file /proc/sys/net/ipv4/ip_forward
I0317 12:31:23.591877   30959 checks.go:644] validating whether swap is enabled or not
I0317 12:31:23.591949   30959 checks.go:373] validating the presence of executable ip
I0317 12:31:23.592007   30959 checks.go:373] validating the presence of executable iptables
I0317 12:31:23.592056   30959 checks.go:373] validating the presence of executable mount
I0317 12:31:23.592203   30959 checks.go:373] validating the presence of executable nsenter
I0317 12:31:23.592247   30959 checks.go:373] validating the presence of executable ebtables
I0317 12:31:23.592277   30959 checks.go:373] validating the presence of executable ethtool
I0317 12:31:23.592306   30959 checks.go:373] validating the presence of executable socat
I0317 12:31:23.592338   30959 checks.go:373] validating the presence of executable tc
I0317 12:31:23.592433   30959 checks.go:373] validating the presence of executable touch
I0317 12:31:23.592476   30959 checks.go:515] running all checks
        [WARNING SystemVerification]: this Docker version is not on the list of validated versions: 18.09.3. Latest validated version: 18.06
I0317 12:31:23.734825   30959 checks.go:403] checking whether the given node name is reachable using net.LookupHost
        [WARNING Hostname]: hostname "montreal-8gb-02" could not be reached
        [WARNING Hostname]: hostname "montreal-8gb-02": lookup montreal-8gb-02 on 8.8.8.8:53: no such host
I0317 12:31:23.831556   30959 checks.go:613] validating kubelet version
I0317 12:31:24.037950   30959 checks.go:130] validating if the service is enabled and active
I0317 12:31:24.095701   30959 checks.go:208] validating availability of port 10250
I0317 12:31:24.095838   30959 checks.go:208] validating availability of port 2379
I0317 12:31:24.095883   30959 checks.go:208] validating availability of port 2380
I0317 12:31:24.095955   30959 checks.go:245] validating the existence and emptiness of directory /var/lib/etcd
I0317 12:31:24.095988   30959 certs.go:37] creating PKI assets
[certs] Generating "apiserver-kubelet-client" certificate and key
[certs] Generating "apiserver" certificate and key
[certs] apiserver serving cert is signed for DNS names [montreal-8gb-02 kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local k8s-ssdnodes-montreal.jmazz.ca k8s-ssdnodes-montreal.jmazz.ca] and IPs [10.96.0.1 66.70.222.102]
[certs] Generating "etcd/server" certificate and key
[certs] etcd/server serving cert is signed for DNS names [montreal-8gb-02 localhost] and IPs [66.70.222.102 127.0.0.1 ::1]
[certs] Generating "etcd/peer" certificate and key
[certs] etcd/peer serving cert is signed for DNS names [montreal-8gb-02 localhost] and IPs [66.70.222.102 127.0.0.1 ::1]
[certs] Generating "etcd/healthcheck-client" certificate and key
[certs] Generating "apiserver-etcd-client" certificate and key
[certs] Generating "front-proxy-client" certificate and key
[certs] valid certificates and keys now exist in "/etc/kubernetes/pki"
I0317 12:31:27.178027   30959 certs.go:72] creating a new public/private key files for signing service account users
[certs] Using the existing "sa" key
[kubeconfig] Writing "admin.conf" kubeconfig file
[kubeconfig] Writing "controller-manager.conf" kubeconfig file
[kubeconfig] Writing "scheduler.conf" kubeconfig file
I0317 12:31:28.588132   30959 manifests.go:42] [control-plane] creating static Pod files
I0317 12:31:28.588173   30959 manifests.go:97] [control-plane] getting StaticPodSpecs
I0317 12:31:28.601277   30959 manifests.go:113] [control-plane] wrote static Pod manifest for component "kube-apiserver" to "/etc/kubernetes/manifests/kube-apiserver.yaml"
I0317 12:31:28.602885   30959 manifests.go:113] [control-plane] wrote static Pod manifest for component "kube-controller-manager" to "/etc/kubernetes/manifests/kube-controller-manager.yaml"
I0317 12:31:28.603678   30959 manifests.go:113] [control-plane] wrote static Pod manifest for component "kube-scheduler" to "/etc/kubernetes/manifests/kube-scheduler.yaml"
[etcd] Checking etcd cluster health
I0317 12:31:28.605508   30959 local.go:69] creating etcd client that connects to etcd pods
I0317 12:31:28.605534   30959 etcd.go:135] checking etcd manifest
Get https://k8s-ssdnodes-montreal.jmazz.ca:6443/api/v1/namespaces/kube-system/configmaps/kubeadm-config: x509: certificate signed by unknown authority


Dumping that cert out, looks like it is the etcd-ca, and that is why failing to validate authority of apiserver:

Certificate:
    Data:
        Version: 3 (0x2)
        Serial Number: 0 (0x0)
    Signature Algorithm: sha256WithRSAEncryption
        Issuer: CN = etcd-ca
        Validity
            Not Before: Mar 17 03:56:46 2019 GMT
            Not After : Mar 14 03:56:46 2029 GMT
        Subject: CN = etcd-ca
        Subject Public Key Info:
            Public Key Algorithm: rsaEncryption
                Public-Key: (2048 bit)
                Modulus:
                    00:bf:4d:05:51:fd:c3:4c:8f:a8:69:a8:c8:96:9c:
                    a6:cc:ba:82:7e:98:97:56:01:60:52:fa:d9:f7:41:
                    1c:e5:45:ea:cd:a6:d4:95:ef:ae:8c:1d:c9:5c:62:
                    3b:70:00:89:4c:72:82:41:a8:b8:61:7d:11:0c:fa:
                    a8:56:25:51:ce:c9:dd:18:ec:bc:65:03:27:3a:7b:
                    0b:b2:1d:33:3d:36:c1:df:bc:fe:42:b3:18:a2:98:
                    1b:43:58:c2:f4:19:90:ca:7f:20:99:37:e0:d4:1b:
                    d7:b8:b7:b9:74:e5:58:b3:fe:7a:be:28:6b:3e:9b:
                    a9:bf:34:42:c4:93:05:53:16:d2:07:49:c9:53:fe:
                    03:4d:d3:73:19:7b:1a:c6:61:86:e4:cf:dd:83:fd:
                    54:7c:7d:e1:8c:c8:53:c2:30:d7:31:bf:74:14:69:
                    bd:87:47:13:1e:8c:18:ce:71:84:dd:b6:4e:d3:7b:
                    d5:44:db:5d:6f:84:01:80:b5:52:c1:8a:76:b7:fb:
                    d7:a0:b0:7d:43:03:25:fa:91:69:3c:93:27:9f:e2:
                    5f:1a:43:6e:85:47:5c:78:ec:62:52:25:ca:da:2a:
                    06:33:07:0c:ad:89:2a:f8:38:f2:a5:3a:5b:8e:b3:
                    1a:ec:09:a1:17:4c:03:45:bd:51:40:df:61:1f:48:
                    56:97
                Exponent: 65537 (0x10001)
        X509v3 extensions:
            X509v3 Key Usage: critical
                Digital Signature, Key Encipherment, Certificate Sign
            X509v3 Basic Constraints: critical
                CA:TRUE
    Signature Algorithm: sha256WithRSAEncryption
         7c:a9:3b:d7:b4:b5:60:28:a8:dc:bf:0a:76:53:cf:8d:59:41:
         3d:fa:0c:15:95:54:8f:31:fc:3f:4c:6c:ef:ac:e7:ee:6a:08:
         80:e9:d6:75:3a:1f:db:b1:bf:ab:47:89:65:b3:2f:19:89:d6:
         4b:68:bc:e6:b1:98:82:0b:60:1a:85:59:46:69:6d:3f:2e:14:
         03:90:23:d8:ba:44:77:de:c8:53:d3:2b:6e:ea:c2:58:be:b3:
         3d:2c:d9:d1:c9:8d:0f:b1:b9:3e:5c:27:c5:7e:37:ee:50:aa:
         c9:f8:f0:02:17:6f:ee:0e:63:04:e3:45:73:51:cf:b8:ff:71:
         74:27:d9:1c:ba:71:8e:00:75:a4:fb:ea:0d:94:7d:8d:d1:4f:
         4a:4b:14:eb:90:a6:65:49:6d:40:95:f4:ea:72:52:00:47:f0:
         9c:68:40:b9:15:00:e8:2d:22:99:13:2a:91:df:b1:dd:0c:75:
         54:e1:66:d2:e4:05:37:9f:7c:d2:9c:85:5b:0d:f6:b7:48:dc:
         a6:e4:ca:1b:cd:26:14:66:8a:e5:1d:3f:6b:0e:fa:ca:07:2e:
         ce:2a:8d:02:38:0c:98:07:44:ce:4c:8a:5d:ab:02:15:b6:06:
         90:88:ed:bf:81:35:5c:3f:96:82:c5:cc:47:ad:36:3a:89:5a:
         fc:99:88:4a


What you expected to happen?
Second stacked control plane node joins successfully.
How to reproduce it (as minimally and precisely as possible)?
Detailed above.
Anything else we need to know?
Using Cloudflare DNS load balancing as load balancer,  it checks to TCP 6443 on the nodes and returns only healthy IP in DNS response. Cloudflare proxy is disabled; I’ve verified its using K8s CA certs and not Cloudflare’s.
