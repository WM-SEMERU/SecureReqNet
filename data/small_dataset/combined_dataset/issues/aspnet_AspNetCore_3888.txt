Cookie auth, client redirect on expiration


I have been using built in cookies auth since the previews and it has been great to date.  Recently I thought it would be nice to implement a feature that prompt the user a few minutes before their session will expire and assumed it would be a trivial task.  It turned out to be anything but that and the only approaches I could come up with were the following...

Hack CookieManager to add a clear text cookie with nothing more than the expiration so I can get to it from the client via js
Hack an instance of DataProtector from a controller method and access it and decrypt it from the client like an API
Use context.AuthorizeAsync to get at the ticket as an API

I was able to get this working but it feels sloppy as the entire way AuthBuilders work ends up newing all of their dependencies so you can’t just DI the component you need to extend functionality like this easily.  Additionally I think I ran into a bug where when implementing an ITicketStore the CookieAuthHandler retrieves the current ticket, then invokes various middleware and matched routes and only after that is the ticket renewed.  This is problematic because when I access the ticket in middleware or an api or controller the value I get is potentially stale and different from what is actually in the current ticket so I had to make a second request to make sure it is in sync.
So my questions are....

Is this a bug?
Is there a better way to do this?
Any consideration to letting the framework inject some script into the client to do most of this for us?
Was this a consideration during design or am I missing something?  It seems like redirecting the client on expiration would be a common use case instead of having the user clicking about wondering why all those buttons they click firing requests to APIs and hubs aren’t doing anything.

