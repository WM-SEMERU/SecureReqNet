[Process] Running PHP's internal webserver asynchronously yields no output


Symfony version(s) affected: 4.2.2
Description
When I try to run PHP's internal webserver asynchronously using the symfony/process package no output is forwarded to registered callback-functions even though the webserver is started in the background and works properly.
How to reproduce
<?php

require_once __DIR__ . '/../vendor/autoload.php';

$process = new \Symfony\Component\Process\Process([
    PHP_BINARY,
    '-S', 'localhost:8000',
]);
$process->start(function() {

    // never called

    var_dump(func_get_args());
});
$process->waitUntil(function($type, $output) {

    // also never called

    var_dump(func_get_args());

    return $output === "Press Ctrl-C to quit.\n";
});

// never reached as waitUntil() blocks until timeout reached
// ...

$process->stop();
Possible Solution
When I replace the php-command with another long-running process like ["watch", "ls"] the script works as expected.
Additional context
PHP 7.2.10-0ubuntu0.18.04.1 (cli) (built: Sep 13 2018 13:45:02) ( NTS )
Copyright (c) 1997-2018 The PHP Group
Zend Engine v3.2.0, Copyright (c) 1998-2018 Zend Technologies
    with Zend OPcache v7.2.10-0ubuntu0.18.04.1, Copyright (c) 1999-2018, by Zend Technologies
    with Xdebug v2.6.0, Copyright (c) 2002-2018, by Derick Rethans

