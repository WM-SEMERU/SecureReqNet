Add type hints to eth module


Background
Type hints allow us to perform static type checking, among other things. They raise the security bar by catching bugs at development time that, without type support, may turn into runtime bugs.
This stackoverflow answer does a great job at describing their main benefits.
What is wrong?
We currently enforce type hints for the entire p2p and trinity package. While the eth package does have some type hints already, the coverage isn't at 100 % and while it is agreed up on that new code needs to land with type hints, there is not technical enforcement of this rule in place yet.
This needs to be fixed by:

Adding all missing type hints.
Enforcing (stricter) type checking in CI

How
There does exist tooling (monkeytype) to the generation of type hints for existing code bases. From my personal experience monkeytype can be helpful but does still require manual fine tuning. Also, manually adding these type hints does serve as a great boost to the general understanding of the code base as it forces one to think about the code.


Run mypy --follow-imports=silent --warn-unused-ignores --ignore-missing-imports --no-strict-optional --check-untyped-defs --disallow-incomplete-defs --disallow-untyped-defs --disallow-any-generics -p eth


Eliminate every reported error by adding the right type hint


This should probably be done incrementally in roughly the following steps.



eth.tools (eligible for payout of 150 DAI)
eth.vm (eligible for payout of 350 DAI)
everything that is not eth.vm (eligible for payout of 300 DAI)

The reason for this order is, that it makes it easy to incrementally update the tox.ini to enforce stricter rules for such each package without cluttering tox.ini too much.

Send frequent pull requests for chunks of work

Definition of done
This issue is done when the following criteria are met:

The following configuration in tox.ini is changed.




py-evm/tox.ini


         Line 107
      in
      8f74e6b






 mypy --follow-imports=silent --warn-unused-ignores --ignore-missing-imports --no-strict-optional --check-untyped-defs --disallow-incomplete-defs -p eth 





It needs to be:
mypy --follow-imports=silent --warn-unused-ignores --ignore-missing-imports --no-strict-optional --check-untyped-defs --disallow-incomplete-defs --disallow-untyped-defs --disallow-any-generics -p eth


Usage of type: ignore (silencing the type checker) is minimized and there's a reasonable explanation for its usage

Stretch goals
When this issue is done, stretch goals can be applied (and individually get funded) to tighten type support to qualify:


mypy --strict --follow-imports=silent --ignore-missing-imports --no-strict-optional -p eth -p p2p -p trinity


mypy --strict --follow-imports=silent --ignore-missing-imports  -p eth -p p2p -p trinity


