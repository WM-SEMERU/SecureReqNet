Possible bug with log parameter names and the firewall configuration


Take this parameters.yml:
router.request_context.host: my.domain.com
domain: my.domain.com
When using %domain% it in security.yml, i.e. in the access control section:
firewalls:
    admin:
        host: ^admin\.
# ...
access_control:
  - { host: admin.%domain%, path: ^/login$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
  - { host: admin.%domain%, path: ^/, roles: IS_AUTHENTICATED_REMEMBERED }
All works as expected. Relevant section in generated appProdProjectContainer.php (returns added for redability):
protected function getSecurity_Firewall_Map_Context_AdminService()
{
    // ...
    $h = new \Symfony\Component\HttpFoundation\RequestMatcher(
        '^/login$', 'admin.my.domain.com' // correct
    );
    $i = new \Symfony\Component\HttpFoundation\RequestMatcher(
        '^/', 'admin.my.domain.com' // correct
    );
    $j = new \Symfony\Component\Security\Http\AccessMap();
   // ...
}
However using %router.request_context.host%, for some reason, it get's translated into localhost, that is your firewall would not apply to production sites (doesn't match):
protected function getSecurity_Firewall_Map_Context_AdminService()
{
    // ...
    $h = new \Symfony\Component\HttpFoundation\RequestMatcher(
        '^/login$', 'admin.localhost' // wrong
    );
    $i = new \Symfony\Component\HttpFoundation\RequestMatcher(
        '^/', 'admin.localhost' // everyone accessing admin in prod!
    );
    $j = new \Symfony\Component\Security\Http\AccessMap();
   // ...
}
As %router.request_context.host% is the suggested method for configuring the request context globally (i.e sending mails with generated URLs) I think this could lead to insecure applications.
A solution:
domain: my.domain.com
router.request_context.host: %domain%

