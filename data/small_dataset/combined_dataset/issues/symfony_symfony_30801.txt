[EventSubscriber] Infer subscribed events from listener parameters





Q
A




Branch?
master


Bug fix?
no


New feature?
yes


BC breaks?
no


Deprecations?
no


Tests pass?
yes


Fixed tickets
N/A


License
MIT


Doc PR
N/A



Since event names are FQCN now, I though maybe we could reduce the verbosity of event subscribers a bit by omitting the keys in the array returned by getSubscribedEvents(). This PR allows to rewrite this subscriber …
final class MySubscriber implements EventSubscriberInterface
{
    public static function getSubscribedEvents()
    {
        return [RequestEvent::class => 'onRequest'];
    }

    public function onRequest(RequestEvent $event): void
    {
    }
}
… like this …
final class MySubscriber implements EventSubscriberInterface
{
    public static function getSubscribedEvents()
    {
        return ['onRequest'];
    }

    public function onRequest(RequestEvent $event): void
    {
    }
}
Drawbacks:

The referenced method has to be defined on the subscriber. When using the event name as a key, the subscriber could handle the event within the magic __call() method.
This approach does not work on parameter-less listener methods for obvious reasons.
Reflection usage comes with a small performance penalty. When using the dispatcher standalone, the addSubscriber() call will be slightly slower on a subscriber without event names as keys. When using DI, only the container compilation will be slightly slower.

