@UniqueEntity on Binary UUID PKs (Primary Keys) is not working on associations


Symfony version(s) affected: 4.2.*
Description
When I'm using @UniqueEntity with associations on binary (ordered time) primary keys then the association will be ignored! It's possible to created duplicates.
How to reproduce
<?php

namespace App\Entity;

use App\Entity\Traits\ModificationTrait;
use Doctrine\ORM\Mapping as ORM;
use Gedmo\Mapping\Annotation as Gedmo;
use Ramsey\Uuid\Uuid;
use Ramsey\Uuid\UuidInterface;
use Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntity;
use Symfony\Component\Validator\Constraints as Assert;

/**
 * @ORM\Entity(repositoryClass="App\Repository\KeywordRepository")
 * @Gedmo\SoftDeleteable(fieldName="deleted_at", timeAware=false)
 * @UniqueEntity(fields={"ad_group", "keyword"})
 */
class Keyword
{
    /**
     * @ORM\Id()
     * @ORM\Column(type="uuid_binary_ordered_time", unique=true)
     * @ORM\GeneratedValue(strategy="CUSTOM")
     * @ORM\CustomIdGenerator(class="Ramsey\Uuid\Doctrine\UuidOrderedTimeGenerator")
     */
    private $id;

    /**
     * @ORM\ManyToOne(targetEntity="App\Entity\AdGroup", inversedBy="keywords")
     */
    private $ad_group;

    /**
     * @ORM\Column(type="string", length=255)
     * @Assert\NotBlank()
     */
    private $keyword;

    use ModificationTrait;

    public function __construct(UuidInterface $id = null)
    {
        $this->id = $id ?: Uuid::uuid4();
    }

    public function getId(): ?UuidInterface
    {
        return $this->id;
    }

    public function getAdGroup(): ?AdGroup
    {
        return $this->ad_group;
    }

    public function setAdGroup(?AdGroup $ad_group): self
    {
        $this->ad_group = $ad_group;

        return $this;
    }

    public function getKeyword(): ?string
    {
        return $this->keyword;
    }

    public function setKeyword(string $keyword): self
    {
        $this->keyword = $keyword;

        return $this;
    }
}

Additional context
null === $this->objectManager->getRepository(Keyword::class)->findOneBy([ 'ad_group' => $adGroupEntity, 'keyword' => $request->request->get('keyword') ])

In fact this returns FALSE.
