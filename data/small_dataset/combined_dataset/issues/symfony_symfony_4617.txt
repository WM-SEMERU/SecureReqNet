[2.2] [Security&Session]Authentication Token Storage


I want to start a discussion about the missing feature in Symfony2 regarding the storage of the Security token.
The problem is that the framework doesn't provide an option regarding where the token is stored.
At this point the Authentication token is being stored in the application session.
This presents numerous problems when trying to scale an application built on this framework.

Clearing the cache logs out all users
Security token is accessible for write from an application
The same session storage is used for authentication information and various application information (shopping cart) which have a lower persistence importance.

A solution would be to create an optional AuthenticationStorageInterface and several implementations among one should be a SessionAuthenticationStorage built around the application Session.
The Security ContextListener could hold this instance and use it to retrieve and set the given token.
Reviewing the code I've noticed that in most cases the request object is propagated through method calls  just to provide the session object used to store or read the authentication token. This makes the code hard to read and certainly hard to modify.
Another solution would be to create a SessionManagement pattern and completely remove the Session object out of the Request object. I'm not certain but I don't see that by the HTTP specification a request should hold the session object. The Request just provides the session key that can be used by a SessionManagement object. This way the SessionManager can have mulitple SessionStorage instances that can be used for different aspects of stateful persistency between requests and provides better scaling  application.
Please note that I'm fairly new to the Symfony community and if a similar discussion already exists (even if it has been closed) point me into the right direction.
