When using Swarmkit, secrets are NOT getting passed to service running in container.


Description
When using Swarmkit, secrets are NOT getting passed to service running in container.
Using swarmkit and trying to use secrets feature. Used swarmctl command, to create new secret. When service is created, assigned secret to that service. But secret is not being sent to that service.
Steps to reproduce the issue:
Using the latest changes in swarmkit repo:
https://github.com/docker/swarmkit
BUILD_COMMAND:
make binaries
START THE DAEMON(SWARM MODE):
swarmd -d /tmp/node-1 --listen-control-api /tmp/node-1/swarm.sock --hostname node-1 &
export SWARM_SOCKET=/tmp/node-1/swarm.sock
swarmctl node ls (And nodes status looks good, ACTIVE and READY)
CREATE_SECRET:
swarmctl secret create secret1 -f test_file
na94sp0r9bppg3q8bdxg5c2jl
START SERVICE, THAT HAS ACCESS TO SECRET:
swarmctl service create --name redis_2 --secret secret1 --image redis:3.0.5
5amksnt73frtjiy7q62la3bou
(ISSUE-> NOT SEEING THE SECRETS MAPPED IN THE REDIS CONTAINER..)
Describe the results you received:
(ISSUE-> NOT SEEING THE SECRETS MAPPED IN THE REDIS CONTAINER..)
Describe the results you expected:
Expected the secret to be mapped to the container's filesystem, but it was not there.
Checked under /var/run/secrets/ as well as /run/secrets, there was NO secrets folder.
Additional information you deem important (e.g. issue happens only occasionally):
Output of docker version:
Docker version 17.06.2-ce, build cec0b72
Output of docker info:(CAPTURED OUTPUT, WHEN SWARM DAEMON WAS NO LONGER RUNNING)
sudo docker info
Containers: 58
Running: 2
Paused: 0
Stopped: 56
Images: 67
Server Version: 17.06.2-ce
Storage Driver: aufs
Root Dir: /var/lib/docker/aufs
Backing Filesystem: extfs
Dirs: 220
Dirperm1 Supported: true
Logging Driver: json-file
Cgroup Driver: cgroupfs
Plugins:
Volume: local
Network: bridge host macvlan null overlay
Log: awslogs fluentd gcplogs gelf journald json-file logentries splunk syslog
Swarm: inactive
Runtimes: runc
Default Runtime: runc
Init Binary: docker-init
containerd version: 6e23458c129b551d5c9871e5174f6b1b7f6d1170
runc version: 810190ceaa507aa2727d7ae6f4790c76ec150bd2
init version: 949e6fa
Security Options:
apparmor
seccomp
Profile: default
Kernel Version: 4.4.0-97-generic
Operating System: Ubuntu 16.04.1 LTS
OSType: linux
Architecture: x86_64
CPUs: 2
Total Memory: 1.922GiB
Name: skris14-ubuntu16.04-VM1
ID: RPPE:SGCR:KOWR:6NEM:JBJF:XB2D:XDWP:OGIM:PGFU:467K:3QTR:B4GZ
Docker Root Dir: /var/lib/docker
Debug Mode (client): false
Debug Mode (server): false
Http Proxy: (MANUALLY EDITED) USING PROXY SERVER
Https Proxy: (MANUALLY EDITED) USING PROXY SERVER
No Proxy: localhost,127.0.0.1
Username: skris14
Registry: https://index.docker.io/v1/
Experimental: false
Insecure Registries:
127.0.0.0/8
Live Restore Enabled: false
WARNING: No swap limit support
Additional environment details (AWS, VirtualBox, physical, etc.):
I am running inside a VM(ubuntu 16.04), host machine runs Ubuntu as well.
