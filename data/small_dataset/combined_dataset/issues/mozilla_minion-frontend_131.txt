Login logic needs a redesign


There are many things wrong with the way logins are handled at the moment:

On a page reload, Persona is called again. I don't think this should happen. Once you have logged in and you have gotten a session cookie, you are logged in and a reload does not have to check again with Persona.
We store the session information (email, user level) in localStorage. I don't think this should be needed.
The login code is completely unreadable. I just don't see how it flows. It is either way too complicated or it does not follow some standard Angular.JS pattern for session management.
The call to /api/session has been commented out it seems. So this means we can not really discover if the current session is still good or not.

Ideally the login flow works like this:

User visits Minion on http://minion - Since this is a one-page app, this only happens once for a session!
We call /api/session to find out if the user is logged in
If the user is logged in then we go to /#!/home
If the user is not logged in then we remember the original URL (might be a link to a scan or issue)
Redirect the user to /#!/login
Handle the Persona flow
... then what?...

