[Security] LdapBindAuthenticationProvider.php throws Symfony\Component\Ldap\Exception\NotBoundException


Symfony version(s) affected: 3.4.17
Description
If you setup authentication using LDAP with query_string as described here
https://symfony.com/doc/3.4/security/ldap.html#configuration-example-for-form-login-and-query-string
and your users are not provided with ldap user provider as described in the same page (which calls bind itself initializing the client; but they are instead provided e.g. with memory or  entity providers), and you want to access to a resource that requires login, then you get the following exception because the ldap client is not bound.
NotBoundException

Symfony\Component\Ldap\Exception\NotBoundException:
Query execution is not possible without binding the connection first.

  at vendor/symfony/ldap/Adapter/ExtLdap/Query.php:60
  at Symfony\Component\Ldap\Adapter\ExtLdap\Query->execute()
     (vendor/symfony/security/Core/Authentication/Provider/LdapBindAuthenticationProvider.php:94)
  at Symfony\Component\Security\Core\Authentication\Provider\LdapBindAuthenticationProvider->checkAuthentication(object(BackofficeUser), object(UsernamePasswordToken))
     (vendor/symfony/security/Core/Authentication/Provider/UserAuthenticationProvider.php:84)
  at Symfony\Component\Security\Core\Authentication\Provider\UserAuthenticationProvider->authenticate(object(UsernamePasswordToken))
     (vendor/symfony/security/Core/Authentication/AuthenticationProviderManager.php:76)
  at Symfony\Component\Security\Core\Authentication\AuthenticationProviderManager->authenticate(object(UsernamePasswordToken))
     (vendor/symfony/security/Http/Firewall/BasicAuthenticationListener.php:76)
  at Symfony\Component\Security\Http\Firewall\BasicAuthenticationListener->handle(object(GetResponseEvent))
     (vendor/symfony/security-bundle/Debug/WrappedListener.php:46)
  at Symfony\Bundle\SecurityBundle\Debug\WrappedListener->handle(object(GetResponseEvent))
     (vendor/symfony/security-bundle/Debug/TraceableFirewallListener.php:35)
  at Symfony\Bundle\SecurityBundle\Debug\TraceableFirewallListener->handleRequest(object(GetResponseEvent), object(Generator))
     (vendor/symfony/security/Http/Firewall.php:84)
  at Symfony\Component\Security\Http\Firewall->onKernelRequest(object(GetResponseEvent))
     (vendor/symfony/security-bundle/EventListener/FirewallListener.php:48)
  at Symfony\Bundle\SecurityBundle\EventListener\FirewallListener->onKernelRequest(object(GetResponseEvent), 'kernel.request', object(TraceableEventDispatcher))
     (vendor/symfony/event-dispatcher/Debug/WrappedListener.php:104)
  at Symfony\Component\EventDispatcher\Debug\WrappedListener->__invoke(object(GetResponseEvent), 'kernel.request', object(ContainerAwareEventDispatcher))
     (vendor/symfony/event-dispatcher/EventDispatcher.php:212)
  at Symfony\Component\EventDispatcher\EventDispatcher->doDispatch(array(object(WrappedListener), object(WrappedListener), object(WrappedListener), object(WrappedListener), object(WrappedListener), object(WrappedListener), object(WrappedListener), object(WrappedListener), object(WrappedListener)), 'kernel.request', object(GetResponseEvent))
     (vendor/symfony/event-dispatcher/EventDispatcher.php:44)
  at Symfony\Component\EventDispatcher\EventDispatcher->dispatch('kernel.request', object(GetResponseEvent))
     (vendor/symfony/event-dispatcher/Debug/TraceableEventDispatcher.php:139)
  at Symfony\Component\EventDispatcher\Debug\TraceableEventDispatcher->dispatch('kernel.request', object(GetResponseEvent))
     (vendor/symfony/http-kernel/HttpKernel.php:127)
  at Symfony\Component\HttpKernel\HttpKernel->handleRaw(object(Request), 1)
     (vendor/symfony/http-kernel/HttpKernel.php:68)
  at Symfony\Component\HttpKernel\HttpKernel->handle(object(Request), 1, true)
     (vendor/symfony/http-kernel/Kernel.php:200)
  at Symfony\Component\HttpKernel\Kernel->handle(object(Request))
     (public/index.php:57)

How to reproduce

setup authentication using LDAP with query_string as described here
https://symfony.com/doc/3.4/security/ldap.html#configuration-example-for-form-login-and-query-string
your users are not provided with ldap user provider as described in the same page (which calls bind itself initializing the client). They are instead provided e.g. with memory or  entity providers
you try to access a resource that requires login

Possible Solution
The bind() on the ldap client should be called inside LdapBindAuthenticationProvider as it's done in LdapUserProvider; some additional parameters in form_login_ldap and http_basic_ldap should be defined to allow the call to bind: search_dn and search_password.
