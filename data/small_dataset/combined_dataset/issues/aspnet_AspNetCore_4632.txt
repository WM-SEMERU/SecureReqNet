Unable to use OpenId Connect and Jwt Bearer together in ASP.NET Core 2.1. Error The authentication handler registered for scheme 'Bearer' is 'JwtBearerHandler' which cannot be used for SignInAsync


I have a scenario where:

I have some API endpoints which for I need to use JWT Bearer Token.
For other MVC UIs I need to use OpneId Connect.

The API part is working, however I'm getting following error when I hit the MVC action method which has [Authorize] attribute on it.:
System.InvalidOperationException: The authentication handler registered for scheme 'Bearer' is 'JwtBearerHandler' which cannot be used for SignInAsync. The registered sign-in schemes are: Cookies.
   at Microsoft.AspNetCore.Authentication.AuthenticationService.SignInAsync(HttpContext context, String scheme, ClaimsPrincipal principal, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.HandleRequestAsync()
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
Here's my start up:
 public void ConfigureServices(IServiceCollection services)
        {
          // other code
            services.AddAuthentication(JwtBearerDefaults.AuthenticationScheme)
                .AddOpenIdConnect(OpenIdConnectDefaults.AuthenticationScheme, options =>
                {
                    options.Authority = $"{Configuration["Oidc:Instance"]}/{Configuration["Oidc:Doamin"]}/v2.0/";
                    options.ClientId = Configuration["Oidc:ClientId"];
                    options.CallbackPath = Configuration["Oidc:CallbackPath"];
                    options.ResponseType = OpenIdConnectResponseType.IdToken;
                    options.TokenValidationParameters.ValidateIssuer = true;
                })
                .AddCookie()
                .AddJwtBearer(JwtBearerDefaults.AuthenticationScheme, options =>
                {
                    options.TokenValidationParameters = new TokenValidationParameters
                    {
                        ValidateIssuer = true,
                        ValidateAudience = true,
                        ValidateLifetime = true,
                        ValidateIssuerSigningKey = true,
                        ValidIssuer = Configuration["Jwt:Issuer"],
                        ValidAudience = Configuration["Jwt:Issuer"],
                        IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(Configuration["Jwt:Key"])),
                    };
                    options.ForwardSignIn = OpenIdConnectDefaults.AuthenticationScheme;
                    options.ForwardSignOut = OpenIdConnectDefaults.AuthenticationScheme;
                });
    // other code
I assumed options.ForwardSignIn whould forward the SignInAsync to OpenId but it doesn't.
Is there any other way?
