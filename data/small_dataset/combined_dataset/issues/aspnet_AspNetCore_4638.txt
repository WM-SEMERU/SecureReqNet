Core 2.1 PolicyScheme - What to do if there is no matching scheme?


Hi all,
Loving ASP.Net Core so far but run into an issue I don't know how to solve. I'm using a PolicyScheme ForwardDefaultSelector to catch the "Bearer" scheme and delegate to other schemes dynamically, which works when there's a match, but I haven't been able to find out what to do if none of the schemes match and I want to say "this can't be authenticated". As a workaround I created a "Null" handler which always returns AuthenticateResult.NoResult(), and I return "Null" in my selector to delegate to it, but this results in a log message that "Null was not authenticated". That would be fine, except that we have a Kubernetes liveness probe hitting an endpoint (which isn't an authenticated endpoint) every 10 seconds, so our log is full of these info-level messages that we can't filter without losing other messages that we want. It also makes me wonder why there isn't a (documented) clean way to do this.
I've seen that the AuthenticationOptions.Forward* properties can (allegedly) be set to the name of the policy scheme itself to halt the authentication pipeline, but setting ForwardDefault to the name of the policy scheme in the policy scheme's options, and to "Null" in the null handler, just results in a NotImplementedException (thrown from PolicySchemeHandler.HandleAuthenticateAsync). Also, since PolicySchemeOptions.ForwardDefault is looked at before ForwardDefaultSelector, the selector will never be called in that case.
Is there a (working) way for a ForwardDefaultSelector to say "we have no matching scheme, respond 401" and lose the debug info-level message?
