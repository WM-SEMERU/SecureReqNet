http: HEAD response, no error if next msg starts with 'H'


Split off from #27028.
Tested with v11.13.0, also reproduces with older release branches. Master fails with a parse error both times.
'HO' - passes, unexpected:
'use strict';
const http = require('http')
const reply = 'HTTP/1.1 200 OK\r\n\r\nHO' // Note: starts with 'H'
http.createServer((_, res) => res.socket.end(reply)).listen(0, function() {
  const {address:host, port} = this.address()
  http.request({host, port, method:'HEAD'}, res => {
    res.on('end', () => this.close()).pipe(process.stdout)
  }).end()
})
'NO' - fails with a parse error, expected:
'use strict';
const http = require('http')
const reply = 'HTTP/1.1 200 OK\r\n\r\nNO'  // Note: no 'H'
http.createServer((_, res) => res.socket.end(reply)).listen(0, function() {
  const {address:host, port} = this.address()
  http.request({host, port, method:'HEAD'}, res => {
    res.on('end', () => this.close()).pipe(process.stdout)
  }).end()
})
The part after HTTP/1.1 200 OK\r\n\r\n is the start of the next response. Node.js appears to be looking at its first byte when it shouldn't - we're not asking for the next response, there's no corresponding request.
