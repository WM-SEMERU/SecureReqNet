WIP: kubeadm: use leader election to modify the kubeadm configmap


What type of PR is this?
/kind bug
What this PR does / why we need it:
Submitted for early feedback
This ensures that if several clients try to modify the kubeadm configmap
at the same time, only one of them will succeed at a time.
Right now this implementation is using leader election to request early
feedback.
WIP PR
Which issue(s) this PR fixes:
Fixes kubernetes/kubeadm#1097
Special notes for your reviewer:
WIP using leader election API; however I wonder if a similar approach should be explored. With the currrent API, the configmap for locking will be created and annotated, but this configmap will still live inside the cluster unless explicitly removed after going through the critical section. This means that if the client crashes or if there's a network issue the configmap lock might never be removed.
I was thinking in exploring a similar approach by creating a lock configmap (or maybe other resource, as long as we annotate it?) TTL lived, so if the client fails to remove the lock it will be GC'ed by the cluster anyhow.
Please note that this PR is not completed, but submitting for early feedback.
Does this PR introduce a user-facing change?:
kubeadm: use config map locking when modifying the cluster status endpoints on the `kubeadm-config` configmap

